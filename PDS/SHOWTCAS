         TITLE ' SHOW AND EXPLAIN BEGINNING TCAS FIELDS '
************************************************************
*        'SHOWTCAS' OR 'LIST TCAS FIELDS AND EXPLAIN THEM' *
************************************************************
         SPACE
*
*        This program is in the Public Domain.
*
*        THIS PROGRAM WAS CONSTRUCTED FROM THE LPSCB PROGRAM,
*        WHICH WAS:
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. OCTOBER 19 1979.
*        DATE UPDATED. MAY 10, 1995   SAM GOLOB
*                      NOV 28, 2016   SAM GOLOB
*                      MAR 10, 2017   SAM GOLOB
*        DATE CHANGED. JUL 24, 2019   SAM GOLOB
*
*        ATTRIBUTES. RE-ENTRANT.
*
*        SYNTAX:    SHOWTCAS  |  ALL
*
*           Without the keyword ALL, the output is limited to
*           just the fields that can be changed by TSOKEYxx
*           in the PARMLIB member.  With the keyword ALL, the
*           entire TCAS control block is displayed.
*
*        COMMENTS.
*            THIS TSO COMMAND SHOWS THE FIELDS OF THE
*            TCAS CONTROL BLOCK, MAPPED BY THE MACRO
*            IKTTCAST.  ONLY THE BEGINNING FIELDS ARE
*            SHOWN, WHICH CAN BE SET BY THE TSOKEYxx
*            PARMLIB MEMBER.  IF YOU USE THE PARAMETER
*            "ALL", THEN THE ENTIRE CONTROL BLOCK IS
*            SHOWN.
*
*        CHANGE LOG:
*           JDM - JIM MARSHALL
*           SBG - SAM GOLOB
*
*     These remarks pertain to the LPSCB program:
*     JDM    02APR91 - ADDED DSECTS TO REPLACE HARDCODED OFFSETS JDM1
*     SBG    28NOV16 - LIST 8 HEX DIGIT ADDRESSES INSTEAD OF 6.
*                      CHANGED AMODE TO 31. DIDN'T SEEM TO HURT.
*     SBG    10MAR17 - FIXES FOR 8-CHARACTER USERIDS.
*                      DEPENDS ON TSVT+6 BYTE. PROGRAM DEPENDS ON
*                      TSVT NOW, WHICH IT DIDN'T DEPEND ON BEFORE.
*
*     The remarks from here on, pertain to the SHOWTCAS program:
*
*     SBG    22JUL19 - Adapted the program to show the beginning
*                      fields of the TCAS control block.
*
*     SBG    24JUL19 - Added all the fields of the TCAS control
*                      block, if you use the keyword, ALL.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   14,HEX
         MEND
         SPACE
         MACRO
&NAME    MSGZ  &AREA,&LEN
         LA    1,&AREA
         LA    0,&LEN
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         IKTTCAST
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         PRINT ON,GEN
SHOWTCAS AMODE 31                                                JDM1
SHOWTCAS RMODE 24                                                JDM1
SHOWTCAS CSECT
         USING *,R12,R10
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SHOWTCAS '
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL16' Public Domain '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LA    R10,2048(,R12)      Load second base
         LA    R10,2048(,R10)
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
         MVI   LINE-1,C' '
         XC    LINKAREA(8),LINKAREA
         XC    FLAG2,FLAG2
         SPACE
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
         SPACE 1
************************************************************
*        SET UP PPL FOR PARSE                              *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(MYPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R13,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*        CALL THE PARSE SERVICE ROUTINE                    *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPARS,X'80'       IF HI ORDER BIT NOT ON        JDM1
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,CVTPARS         CVTPARS                       JDM1
         DROP  R15                                               JDM1
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK DS    0H
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT DS    0H
         SPACE 1
         LTR   R15,R15
         BNZ   EXIT12
         L     R3,MYANS
         USING IKJPARMD,R3
         L     R4,CPPLPSCB
         CLI   ALLKW+1,1           'ALL SPECIFIED'
         BE    DOALL
         OI    FLAG2,X'80'         Shorten output
DOALL    DS    0h
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        TEST FOR PRESENCE OF 8-CHARACTER USERID SUPPORT            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TESTTSVT DS    0H                  TEACH PGM ABOUT 8-CHAR ID SUPPORT
         ST    R6,SAVER6A          SAVE WORK REGISTER
         XC    FLAG1,FLAG1         CLEAR FLAG
         L     R6,16               CVT
         L     R6,X'3F4'(,R6)      TCASP (MACRO IKTTCAST)
         ST    R6,TCASADDR         SAVE ADDRESS OF TSVT
         L     R6,16               CVT
         L     R6,X'9C'(,R6)       TSVT
         ST    R6,TSVTADDR         RELOAD TSVT ADDRESS FOR TEST
         TM    6(R6),X'08'         IS THIS FIELD 08?
         BO    TEST8CHR            FLIP FLAG BIT
         CLI   6(R6),X'00'         IS IT 00, THE OLD WAY?
         BE    TEST8END            YES. DON'T FLIP ANYTHING
TEST7CHR DS    0H                  NOT 00 AND NOT 08.
         OI    FLAG1,X'01'         SUPPORT ON BUT 7-CHAR UID LIMIT
         B     TEST8END            THEN GET OUT
TEST8CHR DS    0H                  8-CHAR SUPPORT IS ON
         OI    FLAG1,X'02'         SUPPORT ON AND 8-CHAR UID LIMIT
TEST8END DS    0H                  END OF ROUTINE
         L     R6,SAVER6A          RESTORE WORK REGISTER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                  PRINT TITLE OF THIS REPORT                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   LINE,LINE-1
         MVC   LINET(L'TITLELIT),TITLELIT     Program title
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINET(L'TITLEUND),TITLEUND     Underlines
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINET(44),TITLEEX0     Explanation of program purpose
         BAL   R8,MSG
         MVC   LINET(44),TITLEEX1
         BAL   R8,MSG
         MVC   LINET(44),TITLEEX2
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   IF 8-CHARACTER USERID SUPPORT IS PRESENT, THEN SEND MESSAGE     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              It is important to know if there exists              *
*              8-character userid support.                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EIGHTCID DS    0H
         CLI   FLAG1,X'00'         NO 8-CHARACTER SUPPORT
         BE    EIGHTOUT            THEN GET OUT
         TM    FLAG1,X'01'         SUPPORT IS PRESENT BUT NOT ON
         BO    EIGHTOFF            THEN REPORT IT
         TM    FLAG1,X'02'         SUPPORT IS PRESENT AND IS ON
         BO    EIGHTON             THEN REPORT IT
*                                  MSG IF 8-CHAR UID'S IN EFFECT
EIGHTOFF DS    0H                       OFF
         MVI   LINE-1,X'40'             BLANK MSG LINE
         MVC   LINE,LINE-1
         MVC   LINEU(L'MSG04),MSG04      YES, BUT
         BAL   R8,MSG                   SUPPORT IS TURNED OFF
         B     EIGHTOUT
EIGHTON  DS    0H                       ON
         MVI   LINE-1,X'40'             BLANK MSG LINE
         MVC   LINE,LINE-1
         MVC   LINEU(L'MSG05),MSG05      YES, AND
         BAL   R8,MSG                   SUPPORT IS TURNED ON
         B     EIGHTOUT
EIGHTOUT DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*            PRINT THE ADDRESS OF THE TCAS CONTROL BLOCK            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         L     R4,TCASADDR
         USING TCAST,R4
         HEX   LINE+33,4,TCASADDR
         MVC   LINE+17(L'MSG01),MSG01
         MSGZ  LINE,L'MSG01+28
         MVC   LINE,LINE-1
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                  PRINT REPORT TITLE HEADERS                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   LINE,LINE-1
         MVC   LINE(49),TITLEHDR
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINE(49),TITLEHUN
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                FORMAT FIELDS OF THE TCAS LAYOUT                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GOTTCAS  DS    0H
         MODESET KEY=ZERO
         USING TCAST,R4
         MVC   LINE,LINE-1
         L     R4,TCASADDR
         MVC   LINETXT,TCAS_ID
*        HEX   LINEX,4,TCASID
         MVC   LINEX(4),TCASID
         MVC   LINEC(24),=C'Control block identifier'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TCAS_USC
         HEX   LINEX,2,TCASUSEC
         MVC   LINEC(28),=C'Number of active users - HEX'
         BAL   R8,MSG
         LH    R5,TCASUSEC         Get current number of TSO users.
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(5),RJUSTWRK+5
         MVC   LINEC(28),=C'Number of active users - DEC'
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TCAS_UMX
         HEX   LINEX,2,TCASUMAX
         MVC   LINEC(25),=C'TSO Maxusers number - HEX'
         BAL   R8,MSG
         LH    R5,TCASUMAX         Get maxusers
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(5),RJUSTWRK+5
         MVC   LINEC(25),=C'TSO Maxusers number - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_ACP
         MVC   LINEX(8),TCASACBP
         OC    LINEX(8),BLANKS
         MVC   LINEC(12),=C'ACB Password'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_RCN
         HEX   LINEX,2,TCASRCON
         MVC   LINEC(31),=C'Reconnect time in minutes - HEX'
         BAL   R8,MSG
         LH    R5,TCASRCON         Get reconnect time
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(5),RJUSTWRK+5
         MVC   LINEC(31),=C'Reconnect time in minutes - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_CLZ
         HEX   LINEX,2,TCASCLSZ
         MVC   LINEC(17),=C'Buffer Size - HEX'
         BAL   R8,MSG
         LH    R5,TCASCLSZ         Get buffer size
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(5),RJUSTWRK+5
         MVC   LINEC(17),=C'Buffer Size - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_HBF
         HEX   LINEX,4,TCASHBUF
         MVC   LINEC(27),=C'High Buffer Threshold - HEX'
         BAL   R8,MSG
         L     R5,TCASHBUF
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(9),RJUSTWRK+1
         MVC   LINEC(27),=C'High Buffer Threshold - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_LBF
         HEX   LINEX,4,TCASLBUF
         MVC   LINEC(26),=C'Low Buffer Threshold - HEX'
         BAL   R8,MSG
         L     R5,TCASLBUF
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(9),RJUSTWRK+1
         MVC   LINEC(26),=C'Low Buffer Threshold - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_CRZ
         HEX   LINEX,2,TCASCRSZ
         MVC   LINEC(17),=C'Screen Size - HEX'
         BAL   R8,MSG
         LH    R5,TCASCRSZ         Get screen size
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(5),RJUSTWRK+5
         MVC   LINEC(17),=C'Screen Size - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_CHL
         HEX   LINEX,1,TCASCHNL
         MVC   LINEC(26),=C'Maximum Chain Length - HEX'
         BAL   R8,MSG
         XR    R5,R5
         IC    R5,TCASCHNL         Get chain length
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         MVC   LINE,LINE-1
         MVC   LINEX(5),RJUSTWRK+5
         MVC   LINEC(26),=C'Maximum Chain Length - DEC'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_ENT
         HEX   LINEX,1,TCASENGT
         MVC   LINEC(34),=C'ENGTRANS Value 0-Base,1-Ext,2-None'
         BAL   R8,MSG
*        B     TCASEND
         TM    FLAG2,X'80'
         BO    TCASEND
         MVC   LINETXT,TCAS_TID
         MVC   LINEX(8),TCASTID
         OC    LINEX(8),BLANKS
         MVC   LINEC(28),=C'Symbolic Terminal Identifier'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_XEB
         HEX   LINEX,4,TCASXECB
         MVC   LINEC(21),=C'Cross Memory Sync ECB'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_DAI
         HEX   LINEX,4,TCASDATI
         MVC   LINEC(27),=C'Input Data Processor Module'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_DAO
         HEX   LINEX,4,TCASDATO
         MVC   LINEC(28),=C'Output Data Processor Module'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_MSS
         HEX   LINEX,4,TCASMSGS
         MVC   LINEC(27),=C'TCAS LPALIB Messages Module'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_FRR
         HEX   LINEX,4,TCASFRR
         MVC   LINEC(20),=C'TCAS I/O FRR Routine'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_WA
         HEX   LINEX,4,TCASWA
         MVC   LINEC(14),=C'TCAS Work Area'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TTL
         HEX   LINEX,4,TCASTTL
         MVC   LINEC(25),=C'TCAS TIM/TOM List Address'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TSB
         HEX   LINEX,4,TCASTSB
         MVC   LINEC(21),=C'A(FIRST TSO/VTAM TSB)'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_IQM
         HEX   LINEX,4,TCASIQM
         MVC   LINEC(32),=C'TCAS Input Queue Manager Address'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_OQM
         HEX   LINEX,4,TCASOQM
         MVC   LINEC(33),=C'TCAS Output Queue Manager Address'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_EXT
         HEX   LINEX,4,TCASEXIT
         MVC   LINEC(33),=C'TCAS TIM/TOM Exit Routine Address'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_LTE
         HEX   LINEX,4,TCASLTE
         MVC   LINEC(33),=C'TCAS LOSTERM Exit Routine Address'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_FL1
         HEX   LINEX,1,TCASFLG1
         MVC   LINEC(11),=C'TCAS FLAG 1'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_FL2
         HEX   LINEX,1,TCASFLG2
         MVC   LINEC(11),=C'TCAS FLAG 2'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_FL3
         HEX   LINEX,1,TCASFLG3
         MVC   LINEC(11),=C'TCAS FLAG 3'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_FL4
         HEX   LINEX,1,TCASFLG4
         MVC   LINEC(11),=C'TCAS FLAG 4'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_ASB
         HEX   LINEX,4,TCASASCB
         MVC   LINEC(17),=C'TCAS ASCB Address'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TGF
         HEX   LINEX,4,TCASTGTF
         MVC   LINEC(22),=C'TCAS GTF Trace Routine'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_RS1
         HEX   LINEX,4,100(R4)
         MVC   LINEC(10),=C'Reserved 1'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TTH
         HEX   LINEX,4,TCASTTQH
         MVC   LINEC(35),=C'First Terminal Control Work Element'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_ASI
         HEX   LINEX,4,TCASASCI
         MVC   LINEC(27),=C'TCAS ASCII Translate Tables'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_ATN
         HEX   LINEX,4,TCASATTN
         MVC   LINEC(22),=C'TCAS Attention Routine'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_B14
         HEX   LINEX,2,TCASBR14
         MVC   LINEC(9),=C'TCAS BR14'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_RS2
         HEX   LINEX,2,118(R4)
         MVC   LINEC(10),=C'Reserved 2'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_OMR
         HEX   LINEX,4,TCASOMJR
         MVC   LINEC(11),=C'A(IKTTOMJR)'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TPD
         HEX   LINEX,4,TCASTPND
         MVC   LINEC(26),=C'TCAS TPEND Exit - IKTTPEND'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_SCD
         HEX   LINEX,4,TCASSCHD
         MVC   LINEC(27),=C'TCAS LOSTERM Exit Scheduler'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_DUP
         HEX   LINEX,4,TCASDUMP
         MVC   LINEC(25),=C'A(IKTDMPCD) Control Block'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_76I
         HEX   LINEX,4,TCAS767I
         MVC   LINEC(29),=C'Input Data Processor IKT3767I'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_76O
         HEX   LINEX,4,TCAS767O
         MVC   LINEC(30),=C'Output Data Processor IKT3767O'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TTO
         HEX   LINEX,4,TCASTTYO
         MVC   LINEC(30),=C'Output Data Processor IKTWTTYO'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_NST
         HEX   LINEX,4,TCASNSXT
         MVC   LINEC(27),=C'Pointer to NSEXIT processor'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TIR
         HEX   LINEX,4,TCASTIFR
         MVC   LINEC(29),=C'Common I/F to Message Service'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_GNM
         MVC   LINEX(8),TCASGNAM
         OC    LINEX(8),BLANKS
         MVC   LINEC(17),=C'TCAS Generic Name'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_ANM
         MVC   LINEX(8),TCASANAM
         OC    LINEX(8),BLANKS
         MVC   LINEC(29),=C'TCAS Application Network Name'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_BNM
         MVC   LINEX(8),TCASBNAM
         OC    LINEX(8),BLANKS
         MVC   LINEC(27),=C'Base Name for TSO APPL Name'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_BLN
         HEX   LINEX,4,TCASBLEN
         MVC   LINEC(19),=C'Length of Base Name'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TMR
         HEX   LINEX,4,TCASTIMR
         MVC   LINEC(25),=C'STIMER Value for IKTLTERM'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TXT
         HEX   LINEX,4,TCASTXIT
         MVC   LINEC(28),=C'Pointer to STIMER Timer Exit'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_LOH
         HEX   LINEX,4,TCASLOGH
         MVC   LINEC(24),=C'LOGONHERE Exit Scheduler'
         BAL   R8,MSG
         MVC   LINETXT,TCAS_TED
         MVC   LINEC(25),=C'End of TCAS Control Block'
         BAL   R8,MSG
         SPACE
TCASEND  DS    0H
         MODESET KEY=NZERO
         B     EXIT0
         DROP  R4
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     ROUTINE TO SHOW HEXADECIMAL VALUES AS DISPLAY CHARACTERS      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             DISPLAY A MESSAGE W/PUTLINE
         LA    R0,72
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R8
         SPACE
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
         B     EXIT
EXIT12   LA    R15,12              RETURN CODE 12
EXIT     LR    R2,R15              SAVE RETURN CODE
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
* ------------------------------------------------------------------- *
*                     S U B R O U T I N E S                           *
* ------------------------------------------------------------------- *
************************************************************
*        CONSTANTS                                         *
************************************************************
         SPACE
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         DS    0F
BLANKS   DC    C'                '
MSG01    DC    C'TCAS ADDRESS:'
MSG04    DC    C'  8-CHARACTER USERID SUPPORT IS: OFF'
MSG05    DC    C'  8-CHARACTER USERID SUPPORT IS: ON '
TITLELIT DC    C'SHOWTCAS - TERMINAL CONTROL ADDRESS SPACE - FIELDS'
TITLEUND DC    C'--------   -------- ------- ------- -----   ------'
TITLEEX0 DC    C'    Display of Settings and Addresses having'
TITLEEX1 DC    C'     to do with the TSOKEYxx PARMLIB member '
TITLEEX2 DC    C'     at the beginning of the IKTTCAST macro '
TITLEHDR DC    C'  addr  field        value            explanation'
TITLEHUN DC    C'  ----  -----        -----            -----------'
TCAS_ID  DC    C'    +0  TCASID      '        4 BYTES
TCAS_USC DC    C'    +4  TCASUSEC    '        2 BYTES
TCAS_UMX DC    C'    +6  TCASUMAX    '        2 BYTES
TCAS_ACP DC    C'    +8  TCASACBP    '        8 BYTES
TCAS_RCN DC    C'   +10  TCASRCON    '        2 BYTES
TCAS_CLZ DC    C'   +12  TCASCLSZ    '        2 BYTES
TCAS_HBF DC    C'   +14  TCASHBUF    '        4 BYTES
TCAS_LBF DC    C'   +18  TCASLBUF    '        4 BYTES
TCAS_CRZ DC    C'   +1C  TCASCRSZ    '        2 BYTES
TCAS_CHL DC    C'   +1E  TCASCHNL    '        1 BYTES
TCAS_ENT DC    C'   +1F  TCASENGT    '        1 BYTES
TCAS_TID DC    C'   +20  TCASTID     '        8 BYTES
TCAS_XEB DC    C'   +28  TCASXECB    '        4 BYTES
TCAS_DAI DC    C'   +2C  TCASDATI    '        4 BYTES
TCAS_DAO DC    C'   +30  TCASDATO    '        4 BYTES
TCAS_MSS DC    C'   +34  TCASMSGS    '        4 BYTES
TCAS_FRR DC    C'   +38  TCASFRR     '        4 BYTES
TCAS_WA  DC    C'   +3C  TCASWA      '        4 BYTES
TCAS_TTL DC    C'   +40  TCASTTL     '        4 BYTES
TCAS_TSB DC    C'   +44  TCASTSB     '        4 BYTES
TCAS_IQM DC    C'   +48  TCASIQM     '        4 BYTES
TCAS_OQM DC    C'   +4C  TCASOQM     '        4 BYTES
TCAS_EXT DC    C'   +50  TCASEXIT    '        4 BYTES
TCAS_LTE DC    C'   +54  TCASLTE     '        4 BYTES
TCAS_FL1 DC    C'   +58  TCASFLG1    '        1 BYTE
TCAS_FL2 DC    C'   +59  TCASFLG2    '        1 BYTE
TCAS_FL3 DC    C'   +5A  TCASFLG3    '        1 BYTE
TCAS_FL4 DC    C'   +5B  TCASFLG4    '        1 BYTE
TCAS_ASB DC    C'   +5C  TCASASCB    '        4 BYTES
TCAS_TGF DC    C'   +60  TCASTGTF    '        4 BYTES
TCAS_RS1 DC    C'   +64  RESERVED 1  '        4 BYTES
TCAS_TTH DC    C'   +68  TCASTTQH    '        4 BYTES
TCAS_ASI DC    C'   +6C  TCASASCI    '        4 BYTES
TCAS_ATN DC    C'   +70  TCASATTN    '        4 BYTES
TCAS_B14 DC    C'   +74  TCASBR14    '        2 BYTES
TCAS_RS2 DC    C'   +76  RESERVED 2  '        2 BYTES
TCAS_OMR DC    C'   +78  TCASOMJR    '        4 BYTES
TCAS_TPD DC    C'   +7C  TCASTPND    '        4 BYTES
TCAS_SCD DC    C'   +80  TCASSCHD    '        4 BYTES
TCAS_DUP DC    C'   +84  TCASDUMP    '        4 BYTES
TCAS_76I DC    C'   +88  TCAS767I    '        4 BYTES
TCAS_76O DC    C'   +8C  TCAS767O    '        4 BYTES
TCAS_TTO DC    C'   +90  TCASTTYO    '        4 BYTES
TCAS_NST DC    C'   +94  TCASNSXT    '        4 BYTES
TCAS_TIR DC    C'   +98  TCASTIFR    '        4 BYTES
TCAS_GNM DC    C'   +9C  TCASGNAM    '        8 BYTES
TCAS_ANM DC    C'   +A4  TCASANAM    '        8 BYTES
TCAS_BNM DC    C'   +AC  TCASBNAM    '        8 BYTES
TCAS_BLN DC    C'   +B4  TCASBLEN    '        4 BYTES
TCAS_TMR DC    C'   +B8  TCASTIMR    '        4 BYTES
TCAS_TXT DC    C'   +BC  TCASTXIT    '        4 BYTES
TCAS_LOH DC    C'   +C0  TCASLOGH    '        4 BYTES
TCAS_TED DC    C'   +C4  TCASTEND    '
MASK10   DC    XL10'40202020202020202120'
         SPACE
************************************************************
*        PARSE PCL                                         *
************************************************************
         SPACE
         PRINT GEN
MYPCL    IKJPARM
ALLKW    IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*        DSECTS                                            *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
CVDWORK  DS    D                   DOUBLEWORD WORK AREA
LINKAREA DS    2F
TSVTADDR DS    F                   TSVTADDR
TCASADDR DS    F                   TCASADDR
SAVER6A  DS    F
SAVER9A  DS    F
SAVEPSCB DS    F                   WE DON'T USE IT, BUT WE HAVE IT
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
FLAG1    DS    X
*                                  X'00' IF NO 8-CHAR UID SUPPORT
*                                  X'01' IF 8-CHAR SUPPORT BUT NOT ON
*                                  X'02' IF 8-CHAR SUPPORT IS ON
FLAG2    DS    X
*                                  X'80' if ALL keyword is present
RJUSTWRK DC    CL10' '             Right-justified display number.
DECUSRNM DS    PL8                 Packed version
SAVER4T6 DS    3F                  Save area for work registers.
BINUSERS DS    F                   Number of current users in Binary
LINEB    DS    C                   LINE-1
LINE     DS    CL120
LINETXT  EQU   LINE,20
LINEX    EQU   LINE+21
LINEC    EQU   LINE+38
LINET    EQU   LINE+8
LINEU    EQU   LINE+13
ANSWER   DS    CL64             5  ANSWER PLACE FOR TODCNVRT PROGRAM
         DS    C
TIMEFMT  DS    CL64                FORMAT FOR DATE AND TIME DISPLAY
OPTION   DS    C
WORKA    DS    10D
PARMSAVE DS    F
@DATAL   EQU   *-@DATA
         SPACE 1                                                 JDM1
         CVT   DSECT=YES,LIST=NO                                 JDM1
         SPACE 1                                                 JDM1
         PRINT ON,GEN
         IKJTCB DSECT=YES,LIST=NO                                JDM1
         SPACE 1                                                 JDM1
         IKJPSCB
         SPACE
         IEZJSCB                                                 JDM1
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJECT
         SPACE
         PRINT OFF
         YREGS
         END
