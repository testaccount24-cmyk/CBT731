INMXD    TITLE 'INMXD - DISPLAY INMXPARM FIELDS'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is meant to be run as a TSO          *
*                   command, APF authorized, except for the DISPLAY   *
*                   keyword.                                          *
*                                                                     *
*         Syntax:   INMXD                                             *
*                                                                     *
*       Function:   To display values of the TRANSREC IKJTSOxx        *
*                   PARMLIB settings as they are represented          *
*                   internally in the INMXPARM control block.         *
*                                                                     *
*          Author:  Sam Golob               Version:   1.2            *
*                                                                     *
*            Date:  Dec 31, 05                                        *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Change Log:                                                        *
*                                                                     *
*    2005/12/31 - 1.0 - Initial version - Tested with TSO/E Version   *
*                       3.                                            *
*                                                                     *
*    2006/01/01 - 1.1 - Fitted to older version of TSO/E on OS/390    *
*                       1.3.  See:    TM   OLDFLAG,X'01'              *
*                       In the older INMXPARM control block, there    *
*                       is no version number, and the later fields    *
*                       are displaced backward by 4 bytes.            *
*                                                                     *
*    2019/07/04 - 1.2 - Didn't have enough digits to display an       *
*                       outlimit of 2000000000 (2 billion USA),       *
*                       which is allowed, because the number is       *
*                       a binary fullword.                            *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  ---------------------------------------------------------------  *
*    This macro is used to display hex values in a printed report.
*  ---------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         YREGS
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
SP000    EQU   0
         SPACE 1
INMXD    CSECT
INMXD    AMODE 31
INMXD    RMODE 24
         B     BEGINN-*(,R15)           Eyecatcher
         DC    CL15'INMXD VER 1.2 -'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R5,R1                    SAVE CPPL POINTER                01507
         USING INMXD,R12,R11,R10
         LR    R12,R15                  Set up base registers.
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)                                            01518
         LA    R10,1(,R10)                                               01519
         LA    R1,SAVEAREA              NEW SAVE-AREA ADDR               01508
         ST    R1,8(,R13)               FORWARD SAVE-AREA CHAIN PTR      01509
         ST    R13,4(,R1)               BACKWARD SAVE-AREA CHAIN PTR     01510
         LR    R13,R1                   NEW SAVE AREA ADDRESS            01511
         SPACE 1
* -----------------------
         LR    R1,R5                    RESTORE CPPL POINTER             01526
         ST    R1,CPPLSAVE         Store the CPPL pointer into this      01529
*                                  program, so it doesn't get lost.      01530
* -----------------------
         MVI   BLANKS-1,X'40'
         MVC   BLANKS,BLANKS-1
* -----------------------
CONT0    DS    0H
         L     R2,16               Point to CVT
         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)
         L     R6,X'4C'(,R2)       Point to TPVT
         L     R2,X'2C'(,R6)       Point to INMXPARM control block
         ST    R2,INMXADDR         Store away INMXPARM address
* ------
*     The INMXPARM control block doesn't have a good version number
*     indicator in the older version, so we have to judge by looking
*     in the TPVT to see if the PARMLIB member is one byte earlier.
* ------
         CLC   =C'IKJ',7(R6)       Is PARM member in the old place?
         BNE   NEWSYSTM            No. Figure it's in the new place.
         OI    OLDFLAG,X'01'       Yes. Flag an old INMXPARM block.
NEWSYSTM DS    0H
         USING XPRM,R2
PASTCONV DS    0H                       Display of INMXPARM fields
         L     R5,XPRM_NJE_START        Load reg with NODE/SMF start
         ST    R5,NJESTART              And store it away
         APUT  DISPLAYT,L'DISPLAYT      Display report title
         APUT  DISPLAYU,L'DISPLAYU      Underlines
         MVC   DISPLAY1,BLANKS          Now display all fields.
         MVC   DISPLAY1(8),XPRM_ID
         MVC   DISPLAY1+9(4),=C'ADDR'
         HEX   DISPLAY1+16,4,INMXADDR
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS
         MVC   DISPLAY1(7),=C'LENGTH '
         HEX   DISPLAY1+16,2,XPRM_LEN
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS
         MVC   DISPLAY1(10),=C'NJE COUNT '
         HEX   DISPLAY1+16,2,XPRM_NJE#
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS
         MVC   DISPLAY1(10),=C'NJE START '
         HEX   DISPLAY1+16,4,XPRM_NJE_START
         APUT  DISPLAY1,L'DISPLAY1
         TM    OLDFLAG,X'01'                    Old Version?
         BO    OLDFL01A                         No. Skip entire display
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(12),=C'INMX VERSION'    Display entry title
         HEX   DISPLAY1+16,1,XPRM_VERS
         APUT  DISPLAY1,L'DISPLAY1
OLDFL01A DS    0H
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(9),=C'INIT WARN'        Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL002                         No.
         L     R5,XPRM_WARN1-4
         B     OLDFL02A
OLDFL002 DS    0H
         L     R5,XPRM_WARN1          And load a register with it.
OLDFL02A DS    0H
         CVD   R5,CVDAREA             Convert it to printable.
         OI    CVDAREA+7,X'0F'        Fix the sign of the packed number
         MVC   OUTLIMW1(10),OLDPATT   Move in the pattern for EDIT.
         ED    OUTLIMW1(10),CVDAREA+3   EDIT to cut out leading zeros.
         MVC   DISPLAY1+16(10),OUTLIMW1
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'WARN INTRVL'     Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL003                         No.
         L     R5,XPRM_WARN2-4
         B     OLDFL03A
OLDFL003 DS    0H
         L     R5,XPRM_WARN2          And load a register with it.
OLDFL03A DS    0H
         CVD   R5,CVDAREA             Convert it to printable.
         OI    CVDAREA+7,X'0F'        Fix the sign of the packed number
         MVC   OUTLIMW2(10),OLDPATT   Move in the pattern for EDIT.
         ED    OUTLIMW2(10),CVDAREA+3   EDIT to cut out leading zeros.
         MVC   DISPLAY1+16(10),OUTLIMW2
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(9),=C'OUTLIMIT '        Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL004                         No.
         L     R5,XPRM_LIM-4
         B     OLDFL04A
OLDFL004 DS    0H
         L     R5,XPRM_LIM            And load a register with it.
OLDFL04A DS    0H
         CVD   R5,CVDAREA             Convert it to printable.
         OI    CVDAREA+7,X'0F'        Fix the sign of the packed number
         MVC   OUTLIMVL(12),NEWPATT   Move in the pattern for EDIT.
         ED    OUTLIMVL(12),CVDAREA+2   EDIT to cut out leading zeros.
         MVC   DISPLAY1+14(12),OUTLIMVL
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(12),=C'VIO UNIT LNG'    Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL005                         No.
         HEX   DISPLAY1+16,1,XPRM_VIO_U_SIZE+1-4
         B     OLDFL05A
OLDFL005 DS    0H
         HEX   DISPLAY1+16,1,XPRM_VIO_U_SIZE+1
OLDFL05A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(8),=C'VIO UNIT'         Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL006                         No.
         MVC   DISPLAY1+16(8),XPRM_VIO_U-4
         TR    DISPLAY1+16(8),TRTBLUP
         B     OLDFL06A
OLDFL006 DS    0H
         MVC   DISPLAY1+16(8),XPRM_VIO_U
         TR    DISPLAY1+16(8),TRTBLUP
OLDFL06A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'CIPHER FLAG'     Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL007                         No.
         HEX   DISPLAY1+16,1,XPRM_SW-4
         B     OLDFL07A
OLDFL007 DS    0H
         HEX   DISPLAY1+16,1,XPRM_SW
OLDFL07A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(12),=C'SYSOUT CLASS'    Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL008                         No.
         MVC   DISPLAY1+16(1),XPRM_SOUT-4
         B     OLDFL08A
OLDFL008 DS    0H
         MVC   DISPLAY1+16(1),XPRM_SOUT
OLDFL08A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(8),=C'LOG NAME'         Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL009                         No.
         MVC   DISPLAY1+16(8),XPRM_LOGNAME-4
         B     OLDFL09A
OLDFL009 DS    0H
         MVC   DISPLAY1+16(8),XPRM_LOGNAME
OLDFL09A DS    0H
         TR    DISPLAY1+16(8),TRTBLUP
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(8),=C'LOGSEL 1'         Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL010                         No.
         MVC   DISPLAY1+16(1),XPRM_LOGSEL_1-4
         B     OLDFL10A
OLDFL010 DS    0H
         MVC   DISPLAY1+16(1),XPRM_LOGSEL_1
OLDFL10A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(6),=C'LOGSEL'           Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL011                         No.
         MVC   DISPLAY1+16(8),XPRM_LOGSEL-4
         TR    DISPLAY1+16(8),TRTBLUP
         B     OLDFL11A
OLDFL011 DS    0H
         MVC   DISPLAY1+16(8),XPRM_LOGSEL
         TR    DISPLAY1+16(8),TRTBLUP
OLDFL11A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'LOGSEL SIZE'     Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL012                         No.
         HEX   DISPLAY1+16,2,XPRM_LOGSEL_SIZE-4
         B     OLDFL12A
OLDFL012 DS    0H
         HEX   DISPLAY1+16,2,XPRM_LOGSEL_SIZE
OLDFL12A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SYSCTL NAME'     Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL013                         No.
         MVC   DISPLAY1+16(44),XPRM_SYSCTL-4
         TR    DISPLAY1+16(44),TRTBLUP
OLDFL013 DS    0H
         MVC   DISPLAY1+16(44),XPRM_SYSCTL
         TR    DISPLAY1+16(44),TRTBLUP
OLDFL13A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SYSCTL SIZE'     Display entry title
         TM    OLDFLAG,X'01'                    Old Version?
         BZ    OLDFL014                         No.
         HEX   DISPLAY1+16,2,XPRM_SYSCTL_SIZE-4
         B     OLDFL14A
OLDFL014 DS    0H
         HEX   DISPLAY1+16,2,XPRM_SYSCTL_SIZE
OLDFL14A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                   Blank display line
         MVC   DISPLAY1(11),=C'USRCTL NAME'      Display entry title
         TM    OLDFLAG,X'01'                     Old Version?
         BZ    OLDFL015                          No.
         MVC   DISPLAY1+16(44),XPRM_USRCTL-4
         TR    DISPLAY1+16(44),TRTBLUP
         B     OLDFL15A
OLDFL015 DS    0H
         MVC   DISPLAY1+16(44),XPRM_USRCTL
         TR    DISPLAY1+16(44),TRTBLUP
OLDFL15A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                   Blank display line
         MVC   DISPLAY1(11),=C'USRCTL SIZE'      Display entry title
         TM    OLDFLAG,X'01'                     Old Version?
         BZ    OLDFL016                          No.
         HEX   DISPLAY1+16,2,XPRM_USRCTL_SIZE-4
         B     OLDFL16A
OLDFL016 DS    0H
         HEX   DISPLAY1+16,2,XPRM_USRCTL_SIZE
OLDFL16A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                   Blank display line
         MVC   DISPLAY1(11),=C'SPOOL CLASS'      Display entry title
         TM    OLDFLAG,X'01'                     Old Version?
         BZ    OLDFL017                          No.
         MVC   DISPLAY1+16(1),XPRM_SPOOLCL-4
         B     OLDFL17A
OLDFL017 DS    0H
         MVC   DISPLAY1+16(1),XPRM_SPOOLCL
OLDFL17A DS    0H
         APUT  DISPLAY1,L'DISPLAY1
NODEDSET DS    0H                           Setup NODE/SMF loop
         XR    R6,R6                        BCT register
         XR    R7,R7                        Counting register
         LH    R6,XPRM_NJE#                 Load number of entries
         L     R5,NJESTART                  Point to start of table
NODEDISP DS    0H                           Display NODE/SMF table
         USING XPRM_NODE,R5
         LA    R7,1(,R7)                    Count this entry
         ST    R7,NJECOUNT
         MVC   DISPLAY1,BLANKS              Blank display line
         MVC   DISPLAY1(9),=C'NODE/SMF '    Display entry title
         HEX   DISPLAY1+9,2,NJECOUNT+2      Display entry number
         MVC   DISPLAY1+16(8),XPRM_NODE     Display node id
         MVC   DISPLAY1+26(4),XPRM_SMF      Display SMF id
         APUT  DISPLAY1,L'DISPLAY1          Put it out.
         LA    R5,XPRM_NS_L(,R5)            Go to the next entry
         BCT   R6,NODEDISP                  At end, just drop through
         DROP  R2,R5
RETURN   DS    0H
         L     R13,SAVEAREA+4       RELOAD CALLER'S SAVEAREA POINTER
         LM    R14,R12,12(R13)      RELOAD REGISTERS
         XR    R15,R15              ZERO RETURN CODE ALWAYS
         BR    R14                  RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*           D  A  T  A     A  R  E  A  S                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
SAVEAREA DS    9D
CVDAREA  DC    D'0'
SAVER9   DC    F'0'
NJESTART DC    F'0'
NJECOUNT DC    F'0'
CPPLSAVE DC    F'0'
SAVEUPT  DC    F'0'
SAVEECT  DC    F'0'
SAVEPSCB DC    F'0'
CMBUFAD  DC    F'0'
CMBUFEND DC    F'0'
CHARSTRT DC    F'0'
KEYWRDLN DC    F'0'
KEYWRDST DC    F'0'
KEYSTOR  DC    CL8' '
OUTLIMW1 DC    CL10' '
OUTLIMW2 DC    CL10' '
OUTLIMVL DC    CL12' '
         DC    CL3'   '
OLDPATT  DC    X'40202020202020202120'   Pattern for old OUTLIM value
NEWPATT  DC    X'402020202020202020202120' Pattern for OUTLIM value
         DC    CL3'   '
OLDFLAG  DC    X'00'
         DC    CL3'   '
BLANKS   DC    CL145' '
DISPLAY1 DC    CL64'                                              '
DISPLAYT DC    CL45'INMXPARM - Display of Field Values'
DISPLAYU DC    CL45'--------   ------- -- ----- ------'
INMXADDR DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     Remove Unprintables               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLUP  DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'404040404040404040404A4B4C4D4E4F'
         DC    XL16'504040404040404040405A5B5C5D5E5F'
         DC    XL16'606140404040404040406A6B6C6D6E6F'
         DC    XL16'404040404040404040407A7B7C7D7E7F'
         DC    XL16'40818283848586878889404040404040'
         DC    XL16'40919293949596979899404040404040'
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     Only accept Numeric               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLN   DS    0D                                                        05491
         DC    XL16'40404040404040404040404040404040'                    05492
         DC    XL16'40404040404040404040404040404040'                    05493
         DC    XL16'40404040404040404040404040404040'                    05494
         DC    XL16'40404040404040404040404040404040'                    05495
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    05507
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                 Only accept Alpha, and Uppercase      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLA   DS    0D                                                        05491
         DC    XL16'40404040404040404040404040404040'                    05492
         DC    XL16'40404040404040404040404040404040'                    05493
         DC    XL16'40404040404040404040404040404040'                    05494
         DC    XL16'40404040404040404040404040404040'                    05495
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'                    05496
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'                    05496
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05496
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'                    05496
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'                    05496
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'                    05496
         DC    XL16'40404040404040404040404040404040'                    05507
         IKJXPRM
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
