ENGTRANS TITLE 'Change the ENGTRANS byte in the TCAS control block'
*  -----------------------------------------------------------------  *
*                                                                     *
*    Function:   To display or change the setting of the TCASENGT     *
*                byte in the TCAS control block, mapped by IKTTCAST.  *
*                                                                     *
*    Description of the ENGTRANS setting in the TCAS control block:   *
*                                                                     *
*    Specifies the type of English language translation that          *
*    is to be performed when the TPUT EDIT macro is used to           *
*    write to terminals that support the coded graphic set            *
*    global identifier (CGCSGID) X'02B90025'. (For details            *
*    about TPUT, see z/OS TSO/E Programming Services.) You            *
*    can specify one of the following values:                         *
*                                                                     *
*    BASE                                                             *
*        Base English translation.                                    *
*    EXTENDED                                                         *
*        Extended English translation, as described in 3174           *
*        Character Set Reference, GA27-3831.                          *
*    NONE                                                             *
*        Translation is not performed.                                *
*                                                                     *
*    If you want to switch these settings, issue the following        *
*    TSO authorized command:                                          *
*                                                                     *
*        ENGTRANS B  -  ENGLISH translation is set to BASE            *
*                                                                     *
*        ENGTRANS N  -  ENGLISH translation is set to NONE            *
*                                                                     *
*        ENGTRANS X  -  ENGLISH translation is set to EXTENDED        *
*                                                                     *
*        ENGTRANS (anything else) - help message                      *
*                                                                     *
*                                                                     *
*    Date:       July 23, 2019                                        *
*                                                                     *
*    Technical Detail:  PUTLINE interface for TSO Output.             *
*                       Must be APF-authorized because the TCAS       *
*                       control block is in fetch-protected           *
*                       storage:  SP 231.                             *
*                                                                     *
*    Changes:  01 Jan 2021 - (SG)                                     *
*              Changed program description and put in a better        *
*              title.  Fixed ENGTRANS X command description.          *
*                                                                     *
*  -----------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
*  -----------------------------------------------------------------  *
*  -----------------------------------------------------------------  *
*  --           Create PUTLINE environment.                       --  *
*  -----------------------------------------------------------------  *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
* --       End of Internal Macros......                            -- *
* ------------------------------------------------------------------- *
         SPACE 3
ENGTRANS CSECT
ENGTRANS AMODE 31
ENGTRANS RMODE ANY
         YREGS
         USING ENGTRANS,R15        (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
EYEC0    DC    AL1(EYECL)          EXCLUSIVE LENGTH OF HEADER.
EYEC     DC    C' ENGTRANS - &SYSDATE - &SYSTIME -'
         DC    C'     --------------------------------    '
         DC    C'             '
         DC    C'                   '
EYECL    EQU   *-EYEC
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             COPY BASE.
         USING ENGTRANS,R12        (TELL ASSEMBLER).
         LR    R14,R13             COPY CALLER'S SAVE AREA POINTER.
         LA    R13,SAVE            POINT TO MY SAVE AREA.
         ST    R13,8(,R14)         CHAIN ...
         ST    R14,SAVE+4          ... SAVE AREAS.
         SPACE 1
         LTR   R1,R1               ANY CPPL OR PARM POINTER?
         BZ    RETURN              B IF NOT.
         L     R2,0(,R1)           POINT TO BUFFER
         LTR   R2,R2               ANY?
         BZ    RETURN              B IF NOT.
         LH    R3,0(R2)            LOAD LENGTH.
         LTR   R3,R3               ANY?
         BZ    RETURN              B IF NOT.
         CLI   2(R2),X'00'         COMMAND PROCESSOR INVOCATION?
         BE    RLDCP
         LA    R2,2(,R2)           POINT TO PARM.
         B     PARM
RLDCP    CH    R3,=H'4'            ANY PARM?
         BE    RELERR              B IF NOT.
         AH    R2,2(,R2)           POINT TO ...
         LA    R2,4(,R2)           ... PARM.
PARM     OI    0(R2),C' '          UPPERCASE.
*
* --- Parms gotten at this point.                            -------- *
* --- Are we allowing Key 8 allocation of CSA, YES or NO ?   -------- *
*
PRTITLE  DS    0H
         STM   R14,R1,SAVE14T1
         APUT  'Change ENGTRANS settings: B=00, X=01, N=02',42
         APUT  '------ -------- --------  ----  ----  ----',42
         LM    R14,R1,SAVE14T1
* ------------------------------------------------------------------- *
* --       You need OPER and ACCT authority to run this, if you    -- *
* --     comment out the bypass that is after the CHEKAUTH label.  -- *
* ------------------------------------------------------------------- *
         STM   R1,R2,SAVE1401
         L     R1,16               Point to CVT.
         L     R1,0(,R1)           Point to TCB/ASCB words.
         L     R9,4(,R1)           Point to TCB.
         L     R1,X'B4'(,R9)       Point to JSCB.
         L     R2,X'108'(,R1)      Point to PSCB.
         LA    R2,0(,R2)           Clear high byte.
         LTR   R2,R2               Any PSCB?
         BZ    RETURN              Get out. Not TSO.
         USING PSCB,R2
CHEKAUTH DS    0H                  TSO Authorization (Oper,Acct)
*        B     SETFLAGS            Bypass authorization check.
         TM    PSCBATR1,PSCBACCT   ACCT user?
         BO    SETFLAGS            Yes. Continue.
         TM    PSCBATR1,PSCBCTRL   OPER user?
         BZ    NOTPOWER            No. Get out.
         DROP  R2
* ------------------------------------------------------------------- *
SETFLAGS DS    0H
         LM    R1,R2,SAVE1401
         MVI   FLAG1,X'00'
FBASE    CLI   0(R2),C'N'          N. We don't want to allow?
         BNE   FNONE               No. Try if Y.
         OI    FLAG1,FLAGCSN       Set up for not allowing.
         B     FINDDATA            Go get DGNBOPTIONS1 bit.
FNONE    CLI   0(R2),C'B'          Y. We want to allow?
         BNE   FEXTEN              No. Must be No Change.
         OI    FLAG1,FLAGCSB       Set up for allowing.
         B     FINDDATA            Go get DGNBOPTIONS1 bit.
FEXTEN   CLI   0(R2),C'X'          Y. We want to allow?
         BNE   FENDD               No. Must be No Change.
         OI    FLAG1,FLAGCSX       Set up for allowing.
         B     FINDDATA            Go get DGNBOPTIONS1 bit.
FENDD    DS    0H                  No change.
         B     RELERR              Nullify change flags.
*
* - Parm chosen. Get the DGNB control block and the switching bits. - *
*
FINDDATA DS    0H
* -- >       Test if this command is being run APF Authorized
         STM   R15,R1,SAVE14T1     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE14T1     Restore registers used by TESTAUTH.
* -- >                             We're authorized. Go Key 0.
         MODESET KEY=ZERO
         L     R5,X'10'            POINT TO THE CVT.
         L     R5,X'3F4'(,R5)      TCASP (MACRO IKTTCAST)
         ST    R5,SAVETCAS
         USING TCAST,R5             (TELL ASSEMBLER).
         CLC   =C'TCAS',0(R5)      Are we really there?
         BNE   NOTTCAS             No. Report a problem.
         LA    R6,X'1F'(,R5)       ENGTRANS - 1 BYTE
DISPFLAG DS    0H
         MVC   STORFLAG(1),0(R6)         Save entire byte for reporting
         CLI   FLAG1,X'00'               Did we have a valid parm?
         BE    MESSAGES                  No. Just report no change.
TAUTH    DS    0H                  This section is for the Key 0 stuff.
         TM    FLAG1,FLAGCSB       Flag setting
         BNO   XEXTEND             No. Try and see if we want to allow.
         MVI   0(R6),X'00'                  Set bit to BASE
         B     ENDMOD                       Save bit settings.
XEXTEND  TM    FLAG1,FLAGCSX       Flag setting
         BNO   XNONE               No. No changes will be made.
         MVI   0(R6),X'01'                  Set bit to EXTEND
         B     ENDMOD                       Save bit settings.
XNONE    TM    FLAG1,FLAGCSN       Flag setting
         BNO   ENDMOD              No. No changes will be made.
         MVI   0(R6),X'02'                  Set bit to NONE
ENDMOD   DS    0H                           Leave Key 0
         MVC   STORFLAG(1),0(R6)   Save bit settings for report.
         MODESET KEY=NZERO
         DROP  R5
         B     CHANGMSG
** ---------------------------------------------------------------- **
RETURN   L     R13,SAVE+4             E
         LM    R14,R12,12(R13)          X
         SR    R15,R15                    I
         BR    R14                          T
** ---------------------------------------------------------------- **
NOTAUTH  DS    0H                  Command not APF authorized message.
         APUT  MESSAG2C,L'MESSAG2C
         APUT  MESSAGNC,L'MESSAGNC
         B     RETURN
** ---------------------------------------------------------------- **
NOTPOWER DS    0H                  Command not APF authorized message.
         LM    R1,R2,SAVE1401
         APUT  MESSAG12,L'MESSAG12
         B     RETURN
** ---------------------------------------------------------------- **
RELERR   DS    0H                                                    .
         L     R5,X'10'            POINT TO THE CVT.
         L     R5,X'3F4'(,R5)      TCASP (MACRO IKTTCAST)
         ST    R5,SAVETCAS
         HEX   MESSAGTC+30,4,SAVETCAS
         APUT  MESSAGTC,L'MESSAGTC
         HEX   MESSAGVA+30,1,STORFLAG
         APUT  MESSAGVA,L'MESSAGVA
         APUT  MESSAG1C,L'MESSAG1C
         APUT  MESSAGNC,L'MESSAGNC
         B     RETURN
** ---------------------------------------------------------------- **
NOTTCAS  DS    0H                                                    .
         HEX   MESSAGTC+30,4,SAVETCAS
         APUT  MESSAGTC,L'MESSAGTC
         APUT  MESSAG3C,L'MESSAG3C
         APUT  MESSAGNC,L'MESSAGNC
         B     RETURN
** ---------------------------------------------------------------- **
CHANGMSG DS    0H
MESSAGES DS    0H                         Program Title
         HEX   MESSAGTC+30,4,SAVETCAS
         APUT  MESSAGTC,L'MESSAGTC
         TM    FLAG1,FLAGCSB
         BO    MESSBASE
         TM    FLAG1,FLAGCSX
         BO    MESSEXTE
         TM    FLAG1,FLAGCSN
         BO    MESSNONE
         B     MESSNOTC
MESSBASE DS    0H
         APUT  MESSAGBA,L'MESSAGBA
         B     CHANGEND
MESSEXTE DS    0H
         APUT  MESSAGEX,L'MESSAGEX
         B     CHANGEND
MESSNONE DS    0H
         APUT  MESSAGNO,L'MESSAGNO
         B     CHANGEND
MESSNOTC DS    0H
         APUT  MESSAGNC,L'MESSAGNC
         B     CHANGEND
CHANGEND DS    0H
         HEX   MESSAGVA+30,1,STORFLAG
         APUT  MESSAGVA,L'MESSAGVA
         B     RETURN
** ---------------------------------------------------------------- **
** --         C  O  N  S  T  A  N  T  S                          -- **
** ---------------------------------------------------------------- **
MESSAG1C DC    C'ENGTRANS can only be changed by B, N, or X.        '
MESSAG2C DC    C'Command was not invoked APF authorized.'
MESSAG3C DC    C'Control block not properly formatted.  '
MESSAGBA DC    C'ENGTRANS was changed to BASE.    '
MESSAGNO DC    C'ENGTRANS was changed to NONE.    '
MESSAGEX DC    C'ENGTRANS was changed to EXTENDED.'
MESSAGNC DC    C'ENGTRANS was not changed.        '
MESSAGVA DC    C'ENGTRANS value in binary is:  xx '
MESSAGTC DC    C'TCAS control block address:   nnnnnnnn '
MESSAG12 DC    C'This program not invoked with proper authority.'
FLAG1    DC    X'00'
FLAGCSB  EQU   B'10000000'            BASE
FLAGCSX  EQU   B'01000000'            EXTENDED
FLAGCSN  EQU   B'00100000'            NONE
STORFLAG DC    X'00'
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
         DS    0D
MSGB     DC    C'ENGTRANS has been set to BASE    '
MSGBLEN  EQU   *-MSGB
         DS    0D
MSGX     DC    C'ENGTRANS has been set to EXTENDED'
MSGXLEN  EQU   *-MSGX
         DS    0D
MSGN     DC    C'ENGTRANS has been set to NONE    '
MSGNLEN  EQU   *-MSGN
         DS    0D
MSGNC    DC    C'ENGTRANS has not been changed    '
MSGNCLEN EQU   *-MSGNC
SAVE     DS    9D                  Program Save Area
SAVE14T1 DS    2D                  Save "system-used" registers.
SAVE1401 DS    5F                  Save "system-used" registers.
SAVETCAS DS    F
         DC    C' '                Blank before OUTPUT line.
OUTPUT   DC    CL80'  '            Variable output line.
         LTORG
** ---------------------------------------------------------------- **
HEX      DS    0H
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
         TITLE '- MAPPING MACROS.'
         CVT   DSECT=YES           Map the CVT.
         IKTTCAST
         IKJPSCB
** ---------------------------------------------------------------- **
         END   ENGTRANS
** ---------------------------------------------------------------- **
*  -----------------------------------------------------------------  *
*  --           Create PUTLINE environment.                       --  *
*  -----------------------------------------------------------------  *
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END EPUTL
