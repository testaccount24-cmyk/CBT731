DTEST    TITLE 'DTEST - DISPLAY TSO TEST FIELDS'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is meant to be run as a TSO          *
*                   command, not APF authorized, because it is        *
*                   only for the purpose of displaying the            *
*                   IKJTSOxx PARMLIB member values for the TEST       *
*                   keyword (if it exists).                           *
*                                                                     *
*         Syntax:   DTEST                                             *
*                                                                     *
*       Function:   To display values of the TEST IKJTSOxx            *
*                   PARMLIB settings as they are represented          *
*                   internally in the TPT, TCT, SCT control           *
*                   blocks.                                           *
*                                                                     *
*          Author:  Sam Golob               Version:   1.1            *
*                                                                     *
*            Date:  Aug 07, 2016                                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Change Log:                                                        *
*    2016/08/07 - 1.0 - Initial version - Tested with TSO/E Version   *
*                       4.                                            *
*                                                                     *
*    2019/06/24 - 1.1 - Modified to reflect our changed TPT which     *
*                       is created by the LOADTEST program that       *
*                       re-loads the TEST parameters from control     *
*                       cards.  We insert the address of the old      *
*                       TPT into X'24' (dec 36) off the new TPT       *
*                       that we construct.  This version of DTEST     *
*                       will recognize that address, if it is not     *
*                       zeroes (IBM's TPT).  The presence of this     *
*                       address allows LOADTEST to regress the TEST   *
*                       parameters to the previous ones, using        *
*                       execution JCL, with PARM=R.                   *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Programming Notes:                                                 *
*                                                                     *
*    The TEST command information from the IKJTSOxx member of         *
*    parmlib, is reflected in 3 control blocks:  TPT, TCT, SCT.       *
*                                                                     *
*    The TPT is pointed to by the TEST address at x'28' off           *
*    the beginning of the TPVT.  The TPT points to all the rest       *
*    of the information, as per the macro description below.          *
*                                                                     *
*                                                                     *
*             MACRO                                                   *
*             IKJTPT                                                  *
*    TPT      DSECT                         TPT Control block         *
*    TPT_ID   DS    C'TPT '                 Block id                  *
*    TPT_LENGTH DS H                        Total length of c.b.      *
*    TPT_VERS DS    C                       TPT Version               *
*             DS    C                       Reserved X'00'            *
*             DS    F                       zeros                     *
*    TPT_TCT_ENTRY DS A                     Address of TSOCMD c.b.    *
*    TPT_TCT_LENGTH DS F                    Length of TSOCMD c.b.     *
*    *                                      Length - 4 / 8 = #        *
*    TPT_SCT_ENTRY DS A                     Address of SUBCMD c.b.    *
*    TPT_SCT_LENGTH DS F                    Length of SUBCMD c.b.     *
*    *                                      Length - 4 / 16 = #       *
*             DS    3F                                                *
*    TCT_TEST DSECT                                                   *
*    TCT_ID   DS    C'TCT '                 Block id                  *
*    TCT_TSOCMD DS  CL8                     A TSOCMD                  *
*    TCT_ENTRY_END DS 0C                                              *
*    *                                      The last entry is x'40'   *
*    SCT_TEST DSECT                                                   *
*    SCT_ID   DS    C'SCT '                 Block id                  *
*    SCT_SUBCMD DS  CL8                     A SUBCMD                  *
*    SCT_PGM  DS    CL8                     A SUBCMD module name      *
*    *                                      The last entry is x'40'   *
*    SCT_ENTRY_END DS 0C                                              *
*             MEND                                                    *
*                                                                     *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  ---------------------------------------------------------------  *
*    This macro is used to display hex values in a printed report.
*  ---------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         YREGS
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
SP000    EQU   0
         SPACE 1
DTEST    CSECT
DTEST    AMODE 31
DTEST    RMODE 24
         B     BEGINN-*(,R15)           Eyecatcher
         DC    CL15'DTEST VER 1.1 -'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R5,R1                    SAVE CPPL POINTER
         USING DTEST,R12,R11,R10
         LR    R12,R15                  Set up base registers.
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LA    R1,SAVEAREA              NEW SAVE-AREA ADDR
         ST    R1,8(,R13)               FORWARD SAVE-AREA CHAIN PTR
         ST    R13,4(,R1)               BACKWARD SAVE-AREA CHAIN PTR
         LR    R13,R1                   NEW SAVE AREA ADDRESS
         SPACE 1
* -----------------------
         LR    R1,R5                    RESTORE CPPL POINTER
         ST    R1,CPPLSAVE         Store the CPPL pointer into this
*                                  program, so it doesn't get lost.
* -----------------------
         MVI   BLANKS-1,X'40'           Initialize blanks.
         MVC   BLANKS,BLANKS-1
* -----------------------
DTITLE   DS    0H
         APUT  DISPLAYT,L'DISPLAYT      Display report title
         APUT  DISPLAYU,L'DISPLAYU      Underlines
*
* -----------------------     Follow address to Parmlib TEST values
*
         L     R2,16               Point to CVT
         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)
         L     R6,X'4C'(,R2)       Point to TPVT (Parmlib Vect Tbl)
         L     R2,X'28'(,R6)       Point to TPT control block of TEST
* ------
* ------    GET 'TEST' PARMLIB ADDRESSES AND VALUES FOR REPORTING
* ------
         ST    R2,TPTADDR          Store away TPT address
         CLC   =C'TPT',0(R2)       Is TPT eyecatcher in proper place?
         BNE   NOTTPT              No. We aren't looking at TPT.
*                                  Get all TPT fields........
         LH    R3,4(,R2)           Get TPT size
         STH   R3,TPTSIZE
         MVC   TPTVERS(1),6(R2)    TPT version number
         L     R3,12(,R2)
         ST    R3,TCTADDR          TCT address
         L     R3,16(,R2)
         ST    R3,TCTSIZE          TCT size
         LR    R4,R3               Copy size value
         S     R4,=F'4'            Subtract 4
         SRL   R4,3                Divide by 8 (size of TCT entry)
         BCTR  R4,0                Subtract 1 because of blank entry
         ST    R4,TCTENTR          Save # of TCT entries - actual
         L     R3,20(,R2)
         ST    R3,SCTADDR          SCT address
         L     R3,24(,R2)
         ST    R3,SCTSIZE          SCT size
         LR    R4,R3               Copy size value
         S     R4,=F'4'            Subtract 4
         SRL   R4,4                Divide by 16 (size of SCT entry)
         BCTR  R4,0                Subtract 1 because of blank entry
         ST    R4,SCTENTR          Save # of SCT entries - actual
         L     R3,36(,R2)
         ST    R3,OLDTPT
         B     CONTTPT             Continue with Control Block Display
NOTTPT   DS    0H
         MVC   DISPLAY1,BLANKS                Error msg if not TPT.
         MVC   DISPLAY1(L'TPTBAD),TPTBAD
         APUT  DISPLAY1,L'DISPLAY1
         B     RETURN
CONTTPT  DS    0H                         Now display all TPT fields.
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,TPTADDR           Display address
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,TPTSIZE           Only a halfword field
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT VERSION'    Display entry title
         HEX   DISPLAY1+16,1,TPTVERS           Single byte field
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,TCTADDR           Display address
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,TCTSIZE+2         Cut off 1st 2 bytes
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT ENTRIES'    Display entry title
         HEX   DISPLAY1+16,2,TCTENTR+2         Cut off 1st 2 bytes
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,SCTADDR           Display address
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,SCTSIZE+2         Cut off 1st 2 bytes
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT ENTRIES'    Display entry title
         HEX   DISPLAY1+16,2,SCTENTR+2         Cut off 1st 2 bytes
         APUT  DISPLAY1,L'DISPLAY1
         CLC   OLDTPT,=F'0'
         BE    NOOLDTPT
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'OLD TPT ADR'    Display entry title
         HEX   DISPLAY1+16,4,OLDTPT            Display address
         APUT  DISPLAY1,L'DISPLAY1
NOOLDTPT DS    0H
DSPLYTSO DS    0H
         MVC   DISPLAY1,BLANKS                  Blank display line
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'TSOCMDT),TSOCMDT      Display title
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'PROGRMT),PROGRMT      Display title
         APUT  DISPLAY1,L'DISPLAY1
TSOINIT  DS    0H
         L     R3,TCTADDR                 Set up for TSOCMD display
         L     R4,TCTSIZE
         CLC   =C'TCT',0(R3)              Starts with TCT ?
         BE    TSOSTART                     Yes. Continue.
         MVC   DISPLAY1,BLANKS              No.  Error.
         MVC   DISPLAY1(L'TCTBAD),TCTBAD    Send appropriate message
         APUT  DISPLAY1,L'DISPLAY1
         B     RETURN                       Go straight out.
TSOSTART DS    0H
         LA    R3,4(,R3)                        Point to pgm table
TSOLOOP  DS    0H
         CLC   =C'        ',0(R3)               End of table?
         BE    DSPLYSUB
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1+8(8),0(R3)              Show TSOCMD
         APUT  DISPLAY1,L'DISPLAY1              Display line
         LA    R3,8(,R3)                        Next entry
         B     TSOLOOP
*                                         PUT IN LENGTH CHECK LATER
DSPLYSUB DS    0H
         MVC   DISPLAY1,BLANKS                  Blank display line
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'SUBCMDT),SUBCMDT
         APUT  DISPLAY1,L'DISPLAY1
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'COMMANT),COMMANT      Display title
         APUT  DISPLAY1,L'DISPLAY1
SUBINIT  DS    0H
         L     R3,SCTADDR                 Set up for SUBCMD display
         L     R4,SCTSIZE
         CLC   =C'SCT',0(R3)              Starts with SCT ?
         BE    SUBSTART                     Yes. Continue.
         MVC   DISPLAY1,BLANKS              No.  Error.
         MVC   DISPLAY1(L'SCTBAD),SCTBAD    Send appropriate message
         APUT  DISPLAY1,L'DISPLAY1
         B     RETURN                       Go straight out.
SUBSTART DS    0H
         LA    R3,4(,R3)                        Point to subcmd table
SUBLOOP  DS    0H
         CLC   =C'        ',0(R3)               End of table?
         BE    RETURN
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1+2(8),0(R3)              Show SUBCMD
         MVC   DISPLAY1+15(8),8(R3)             Show module name
         APUT  DISPLAY1,L'DISPLAY1              Display line
         LA    R3,16(,R3)                       Next entry
         B     SUBLOOP
*                                         PUT IN LENGTH CHECK LATER
RETURN   DS    0H                   Program exit.
         L     R13,SAVEAREA+4       RELOAD CALLER'S SAVEAREA POINTER
         LM    R14,R12,12(R13)      RELOAD REGISTERS
         XR    R15,R15              ZERO RETURN CODE ALWAYS
         BR    R14                  RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*           D  A  T  A     A  R  E  A  S                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
SAVEAREA DS    9D
CVDAREA  DC    D'0'
         DC    CL3'   '
OLDPATT  DC    X'40202020202020202120'   Pattern for old OUTLIM value
         DC    CL3'   '
OLDFLAG  DC    X'00'
         DC    CL3'   '
BLANKS   DC    CL145' '
DISPLAY1 DC    CL64'                                              '
DISPLAYT DC    C'In-Storage PARMLIB IKJTSOxx TEST Parameter Values'
DISPLAYU DC    C'---------- ------- -------- ---- --------- ------'
TSOCMDT  DC    C'---- TSOCMD PROGRAMS ----'
PROGRMT  DC    C'      Program Name       '
SUBCMDT  DC    C'----   SUBCOMMANDS   ----'
COMMANT  DC    C' Subcommand     Module   '
TPTBAD   DC    C'   TPT not pointed to    '
TCTBAD   DC    C'   TCT not pointed to    '
SCTBAD   DC    C'   SCT not pointed to    '
CPPLSAVE DC    F'0'
OLDTPT   DC    F'0'
TPTADDR  DC    F'0'
TPTSIZE  DC    H'0'
TPTVERS  DC    X'0'
TCTADDR  DC    F'0'
TCTSIZE  DC    F'0'
TCTENTR  DC    F'0'
SCTADDR  DC    F'0'
SCTSIZE  DC    F'0'
SCTENTR  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Translate Tables -  Relics from a previous program........     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     Remove Unprintables               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLUP  DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'404040404040404040404A4B4C4D4E4F'
         DC    XL16'504040404040404040405A5B5C5D5E5F'
         DC    XL16'606140404040404040406A6B6C6D6E6F'
         DC    XL16'404040404040404040407A7B7C7D7E7F'
         DC    XL16'40818283848586878889404040404040'
         DC    XL16'40919293949596979899404040404040'
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     Only accept Numeric               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLN   DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                 Only accept Alpha, and Uppercase      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLA   DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'40404040404040404040404040404040'
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
