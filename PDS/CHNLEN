CHNLEN   TITLE 'CHNLEN - SET TCAS MAXIMUM CHAIN LENGTH'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO          *
*                   COMMAND.  APF AUTHORIZED.  YOU NEED TO PUT        *
*                   THIS COMMAND NAME IN THE ACTIVE IKJEFTE2 TABLE,   *
*                   OR AUTHORIZE IT SOME OTHER WAY (CBT FILE 185      *
*                   AND/OR CBT FILE 797).                             *
*                                                                     *
*         SYNTAX:   CHNLEN n (n is the new value of                   *
*                           TSO CHNLEN in decimal)                    *
*                        Values accepted:  1 through 10               *
*                                                                     *
*                   CHNLEN (no parameters) will show the current      *
*                           maximum chain length in TSOKEYxx.         *
*                                                                     *
*                   These will only work if CHNLEN is an APF-         *
*                   authorized TSO command (in the IKJEFTE2 table).   *
*                                                                     *
*                                                                     *
*         OUTPUT:   Via PUTLINE interface, using APUT and EPUTL.      *
*                                                                     *
*       SAMPLE OUTPUT:    (CHNLEN  5)                                 *
*                                                                     *
*            CHNLEN - VER. 1.3 - 07/10/19 - 15.56                     *
*            --------------------------------------                   *
*             Change the CHNLEN number in the IKTTCAST                *
*             control block.                                          *
*            Current number of TSO Users:  3                          *
*            Previous value of CHNLEN :    4                          *
*            Value of CHNLEN reset to :    5                          *
*                                                                     *
*                                                                     *
*       FUNCTION:   TO CHANGE THE CHNLEN NUMBER REPRESENTED BY        *
*                   THE CHNLEN PARAMETER IN THE TSOKEYxx PARMLIB      *
*                   MEMBER.                                           *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.3            *
*                                                                     *
*            DATE:  JUL 16, 2019                                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
*         CHANGES:  1.1 - DEC 12, 09 -  (for program BDMNNOTC)        *
*                     Fixed messages, better numeric verification.    *
*                                                                     *
*                   1.2 - DEC 14, 09 -                                *
*                     Better comments, title subroutine, cut out      *
*                     unnecessary code. Put non-numeric test in       *
*                     the proper place, to not cause a S0C7 abend.    *
*                                                                     *
*                   1.3 - JAN 03, 21 -                                *
*                     Fix return code processing.                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
*                  M A I N L I N E   C O D E
* ------------------------------------------------------------------- *
         SPACE 1
         YREGS
         SPACE 1
SP000    EQU   0
         SPACE 1
CHNLEN   CSECT
CHNLEN   AMODE 31
CHNLEN   RMODE 24
         USING CHNLEN,R12,R11,R10
         B     BEGINN-*(,R15)
         DC    CL17'CHNLEN VER 1.3 -'
         DC    CL16' &SYSDATE &SYSTIME '
         DS    0H
BEGINN   STM   R14,R12,12(R13)
         LR    R12,R15             Set up base
         LA    R11,4095(,R12)
         LA    R11,1(,R11)         Second base
         LA    R10,4095(,R11)
         LA    R10,1(,R10)         Third base
         LR    R6,R1               PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         SPACE 1
* ------------------------------------------------------------------- *
INITCON  DS    0H                  Initialize constants.
         MVC   NEWNMBIN,=F'0'
         MVI   NUMFLAG,X'00'
         MVI   LINEB,X'40'
         MVC   RETCOD,=F'0'
* ------------------------------------------------------------------- *
*  Get old value for CHNLEN. Do it early on in the program.           *
* ------------------------------------------------------------------- *
*  Test if we are APF-authorized - IKTTCAST is in Subpool 231 -       *
*    which is fetch-protected.  You need APF to even see it.          *
* ------------------------------------------------------------------- *
         STM   R15,R1,SAVE1401     Restore registers used by TESTAUTH.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.
         L     R2,16               CVT
         USING CVT,R2
         L     R3,CVTTCASP         Addressability to CVTTCAST
         ST    R5,SAVER5A          Save R5
         XR    R5,R5               Prepare work register
         USING TCAST,R3
         MODESET KEY=ZERO
         XR    R4,R4
         IC    R4,TCASCHNL         Save old maximum chain size.
         LH    R5,TCASUSEC         Get current number of users.
         MODESET KEY=NZERO
         ST    R5,BINUSERS
         CVD   R5,CVDWORK          Convert to Decimal
         MVC   DECUSRNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECUSRNM+3   Create display format number.
         BAL   R9,LJUST            Justify left instead of right.
         MVC   LJUSSTOR,LJUSTWRK   Store number of users for display.
         MVC   RJUSTWRK,BLANKS     Clear areas for reuse.
         MVC   LJUSTWRK,BLANKS
         CVD   R4,CVDWORK          Convert to Decimal
         MVC   DECOLDNM,CVDWORK    Store result to report.
         MVC   RJUSTWRK(10),MASK10       Move in edit mask.
         ED    RJUSTWRK(10),DECOLDNM+3   Create display format number.
         BAL   R9,LJUST            Justify left instead of right.
         L     R5,SAVER5A          Restore R5
         DROP  R2,R3
* ------------------------------------------------------------------- *
* --     Is it TSO?  And run another authorization check.          -- *
* ------------------------------------------------------------------- *
* --       You need OPER and ACCT authority to run this, if you    -- *
* --     comment out the bypass that is after the CHEKAUTH label.  -- *
* ------------------------------------------------------------------- *
         L     R1,16               Point to CVT.
         L     R1,0(,R1)           Point to TCB/ASCB words.
         L     R9,4(,R1)           Point to TCB.
         L     R1,X'B4'(,R9)       Point to JSCB.
         L     R2,X'108'(,R1)      Point to PSCB.
         LA    R2,0(,R2)           Clear high byte.
         LTR   R2,R2               Any PSCB?
         BZ    EOJ4                Get out. Not TSO.
         USING PSCB,R2
CHEKAUTH DS    0H                  TSO Authorization (Oper,Acct)
*        B     CONT0               Bypass authorization check.
         TM    PSCBATR1,PSCBACCT   ACCT user?
         BO    CONT0               Yes. Continue.
         TM    PSCBATR1,PSCBCTRL   OPER user?
         BZ    EOJ8                No. Get out.
         DROP  R2
* ------------------------------------------------------------------- *
* --         Get Parameter - Make sure it is numeric.              -- *
* ------------------------------------------------------------------- *
CONT0    DS    0H
         LTR   R6,R6               Any CPPL?
         BZ    EOJ12               No. Not TSO.
         L     R1,0(,R6)           Point to Command Buffer.
         LTR   R1,R1               Any Command Buffer?
         BZ    EOJ12               Get out if none.
         LH    R3,0(,R1)           Load length.
         CH    R3,=H'4'            Anything?
         BNH   EOJ8                No. Get out.
         LR    R5,R3               Length of Command + 4
         ICM   R5,14,FULLZERO      Clear hi order 3 bytes.
         LH    R3,2(,R1)           Load offset.
         SR    R5,R3               Subtract offset from full length+4
         SH    R5,=H'4'            Correct for length of cmdbufr header
         BC    8,EOJ4              Zero. Message.
         BC    5,EOJ4              Less, or overflow, out.
         AR    R1,R3               Point ...
         LA    R1,4(,R1)           ... to char.
         LA    R6,5                Load Reg for BCT loop. 5 times.
         LR    R7,R1               Initialize pointer
         LA    R7,0(,R7)                to first nonnull character
         LA    R8,0                Initialize character count.
CUTIDLEN CLI   0(R7),X'40'         Is this character a blank?
         BE    NOMORCUT            Yes, we are at the end of the number
*--------------------------------  Numeric Test this character - below
         CLI   0(R7),C'0'
         BL    FLAGON              Less than 0 ? No good.
         CLI   0(R7),C'9'          Greater than 9 ?
         BH    FLAGON              No good.
         B     FLAGGO              It's numeric.
FLAGON   OI    NUMFLAG,X'01'       It's not numeric. Flag the situation
FLAGGO   DS    0H
*--------------------------------  Numeric Test this character - above
         LA    R7,1(,R7)           Go to next character
         LA    R8,1(,R8)           Count it.
         CR    R8,R5               End of command buffer ?
         BNL   NOMORCUT            Yes. Get out now.
         BCT   R6,CUTIDLEN         Try for blank again.
NOMORCUT DS    0H
         MVC   NEWNUMB(10),BLANKS  Clear field
         BCTR  R8,0                Subtract 1 for Execute
         EX    R8,MOVOUTL          Move number into display field
         LA    R8,1(,R8)           Bump R8 back to where it was
*
         TM    NUMFLAG,X'01'       Did it fail the numeric test?
         BO    NOTNUMER            It failed. No changes to be made.
*
         STC   R8,NUMCOUTL         Save PARM number's length (not used)
         XR    R8,R8               Clear entire register
         IC    R8,NUMCOUTL         Load full register with count
         BCTR  R8,0                One less for Execute.
         EX    R8,PACK             Convert to Packed.
         CVB   R0,WORK             Convert to Binary.
         ST    R0,NEWNMBIN         And store number in NEWNMBIN.
         B     PASTCONV            Jump past constants.
*
MOVOUTL  MVC   NEWNUMB(*-*),0(R1)  Executed
PACK     PACK  WORK,0(0,R1)        For conversion to binary.
WORK     DC    D'0'                CVB work area.
FULLZERO DC    F'0'                Fullword of zeros.
*
PASTCONV DS    0H                  Continue execution.
* ------------------------------------------------------------------- *
* -- >  Test again if this command is being run APF Authorized   < -- *
* ------------------------------------------------------------------- *
AUTHTEST DS    0H                  Don't let the system get a S047.
         STM   R15,R1,SAVE1401     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.
* ------------------------------------------------------------------- *
*     Replace the number here,   Get TCASUMAX field again, this time  *
*       in Key 0.                 to replace it with the new number.  *
* ------------------------------------------------------------------- *
         L     R2,16               CVT.
         USING CVT,R2
         L     R3,CVTTCASP         Addressability to CVTTCASP
         USING TCAST,R3
         MVC   NEWNTEST,NEWNMBIN        Copy binary number for testing
         CLC   NEWNTEST,=X'0000000A'    Bigger than 10?
         BH    TOOBIG                   Yes. Entered number is too big
         CLC   NEWNTEST,=X'00000001'    Smaller than 1?
         BL    TOOSMALL                 Yes. Too small.
* ------------------------------------------------------------------- *
KZ       MODESET KEY=ZERO
         MVC   TCASCHNL(1),NEWNMBIN+3  Replace CHNLEN in Key 0.
NZ       MODESET KEY=NZERO
* ------------------------------------------------------------------- *
* --  Normal Completion  -                                         -- *
* ------------------------------------------------------------------- *
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Previous value of CHNLEN   :  '
         MVC   LINE+30(10),LJUSTWRK  Left justified display number.
         APUT  LINE,47
         MVC   LINE(30),=C'Value of CHNLEN reset to   :  '
         MVC   LINE+30(10),NEWNUMB
         APUT  LINE,47
         MVC   LINE,LINE-1
         APUT  LINE,30
         DROP  R3
         SR    R5,R5               Zero the return code
* ------------------------------------------------------------------- *
EOJ      DS    0H                  BYE.
         LR    R1,R13
         L     R5,RETCOD           LOAD RETURN CODE
         L     R13,4(,R13)
         L     R14,12(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LR    R15,R5
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         LM    R0,R12,20(R13)
         BR    R14
* ------------------------------------------------------------------- *
EOJ4     DS    0H                  SET CC = 4.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    : '
         MVC   LINE+30(10),LJUSTWRK   Left justified display number.
         APUT  LINE,39
         MVC   LINE,LINE-1
         MVC   LINE(L'MESSAG10),MESSAG10
         APUT  LINE,L'MESSAG10
         MVC   LINE(L'MESSAG2D),MESSAG2D
         APUT  LINE,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(4)
         B     EOJ                 CONT.
* ------------------------------------------------------------------- *
EOJ8     DS    0H                  SET CC = 8.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    :  '
         MVC   LINE+30(10),LJUSTWRK    Left justified display number.
         APUT  LINE,39
         MVC   LINE,LINE-1
         MVC   LINE(L'MESSAG12),MESSAG12
         APUT  LINE,L'MESSAG12
         MVC   LINE(L'MESSAG2D),MESSAG2D
         APUT  LINE,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(8)
         B     EOJ                 CONT
** ---------------------------------------------------------------- **
EOJ12    DS    0H                  SET CC = 12.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    :  '
         MVC   LINE+30(10),LJUSTWRK    Left justified display number.
         APUT  LINE,39
         MVC   LINE,LINE-1
         MVC   LINE(L'MESSAG11),MESSAG11
         APUT  LINE,L'MESSAG11
         MVC   LINE(L'MESSAG2D),MESSAG2D
         APUT  LINE,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(12)
         B     EOJ                 CONT
** ---------------------------------------------------------------- **
TOOBIG   DS    0H                     Number entered was too big.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    :  '
         MVC   LINE+30(10),LJUSTWRK  Left justified display number.
         APUT  LINE,47
         APUT  MESSAG2F,L'MESSAG2F
         APUT  MESSAG2D,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(8)
         B     EOJ
** ---------------------------------------------------------------- **
TOOSMALL DS    0H                     Number entered was too big.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    :  '
         MVC   LINE+30(10),LJUSTWRK  Left justified display number.
         APUT  LINE,47
         APUT  MESSAG2G,L'MESSAG2G
         APUT  MESSAG2D,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(8)
         B     EOJ
** ---------------------------------------------------------------- **
NOTAUTH  DS    0H                     Command not authorized message.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    :  '
         MVC   LINE+30(10),LJUSTWRK   Left justified display number.
*        APUT  LINE,47
         APUT  MESSAG2C,L'MESSAG2C
         APUT  MESSAG2D,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(12)
         B     EOJ
** ---------------------------------------------------------------- **
NOTNUMER DS    0H                     Parameter not numeric.
         BAL   R9,TITLSTMT            Title Statements
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current number of TSO Users:  '
         MVC   LINE+30(10),LJUSSTOR  Left justified display number.
         APUT  LINE,47
         MVC   LINE,LINE-1
         MVC   LINE(30),=C'Current value of CHNLEN    :  '
         MVC   LINE+30(10),LJUSTWRK   Left justified display number.
         APUT  LINE,39
         MVC   LINE,LINE-1
         MVC   MESSPARM,NEWNUMB       Stuff entered parm into message.
         APUT  MESSAG2B,MESSAG2L
         APUT  MESSAG2D,L'MESSAG2D
         MVC   LINE,LINE-1
         APUT  LINE,30
         MVC   RETCOD,=A(12)
         B     EOJ
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                      S U B R O U T I N E S                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TITLSTMT DS    0H
         APUT  MESSAGET,L'MESSAGET    Full title and messages.
         APUT  MESSAGED,L'MESSAGED
         APUT  MESSAGEU,L'MESSAGEU
         APUT  MESSAGEV,L'MESSAGEV
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
LJUST    DS    0H                    Left-justify the display number.
         STM   R4,R6,SAVER4T6        Save work registers.
         LA    R4,RJUSTWRK           Point to right-justified number.
         LA    R5,LJUSTWRK           Point to left-justification area.
         LA    R6,10                 10 characters only.
LJUSTLUP DS    0H                    loop.....
         CLI   0(R4),X'F0'           Is this character smaller than 0?
         BL    LJUSTBMP              No good. Bump past it.
         CLI   0(R4),X'F9'           Is this character larger than 9?
         BH    LJUSTBMP              No good. Bump past it.
         MVC   0(1,R5),0(R4)         Significant. Move it to left-just.
         LA    R5,1(,R5)             Bump left-just character.
LJUSTBMP DS    0H
         LA    R4,1(,R4)             Bump right-just char in any case.
LJUSTCYC BCT   R6,LJUSTLUP           Loop up to BCT times. (10).
LJUSTEND DS    0H                    end of loop.....
         LM    R4,R6,SAVER4T6        Restore work registers.
         BR    R9                    Return to caller.
RJUSTWRK DC    CL10' '               Right-justified display number.
LJUSTWRK DC    CL10' '               Left-justified display number.
LJUSSTOR DC    CL10' '               Store current number of users.
SAVER4T6 DS    3F                    Save area for work registers.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
BLANKS   DC    C'                '   BLANKS
MESSAGED DC    C'--------------------------------------'
MESSAGET DC    C'CHNLEN - VER. 1.3 - &SYSDATE - &SYSTIME   '
MESSAGEU DC    C' Change the CHNLEN number in the IKTTCAST '
MESSAGEV DC    C' control block.                             '
MESSAG10 DC    C'To change CHNLEN, enter a numeric parameter. '
MESSAG11 DC    C'This program was not invoked as a TSO command.'
MESSAG12 DC    C'This program not invoked with proper authority.'
MESSAG2B DC    C'Parameter '
MESSPARM DC    C'          '
MESSAG2E DC    C'had non-numeric characters.  '
MESSAG2L EQU   *-MESSAG2B
MESSAG2C DC    C'Command was not invoked APF authorized.'
MESSAG2D DC    C'Nothing was changed.  '
MESSAG2F DC    C'Number entered was greater than 10.'
MESSAG2G DC    C'Number entered was smaller than 1.'
MASK10   DC    XL10'40202020202020202120'
         SPACE 3
         LTORG
         SPACE 3
DATAAREA DSECT
SAVE     DS    9D                  Save Area
CVDWORK  DS    D                   Work area for CVD instruction
SAVE1401 DC    5F'0'               TESTAUTH save area for registers
SAVER5A  DS    F
BINUSERS DS    F                   Number of current users in Binary
NEWNMBIN DS    F                   New number to put in CVTBCLMT
NEWNTEST DS    F                   Test binary number not too large
DECOLDNM DS    PL8                 Packed version
DECUSRNM DS    PL8                 Packed version
NUMFLAG  DC    X'00'               Flag, X'01' if not numeric
NUMCOUTL DC    X'00'               Store Length of parameter here
RETCOD   DC    F'0'                Return code before FREEMAIN
NEWNUMB  DC    C'          '       Store Parm number here
         DS    0F                  Align on fullword
LINEB    DS    C                   LINE-1 (primed with blank)
LINE     DS    CL137               Print line for most purposes
         SPACE
DATALEN  EQU   *-DATAAREA          Length of Data Area
         IKJCPPL
         IKJPSCB
         CVT      LIST=YES,DSECT=YES
         IKTTCAST
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
