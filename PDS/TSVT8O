TSVT8    TITLE 'SWITCH ON/OFF 8-CHARACTER USERID SUPPORT z/OS 2.3'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   GENERAL 8-CHARACTER USERID SUPPORT IS CONTROLLED BY THE         *
*    SWITCH IN THE TSVT (TSO VECTOR TABLE) PLUS BYTE +6.            *
*                                                                   *
*   THIS PROGRAM IS IN THE PUBLIC DOMAIN.                           *
*                                                                   *
*   This support was first deployed in z/OS 2.3.                    *
*                                                                   *
*   IN PREVIOUS SYSTEMS, THIS BYTE WAS X'00'  (Reserved)            *
*   IN CURRENT SYSTEMS, IF THE BYTE IS X'07' THEN 8-CHAR USERID     *
*     SUPPORT IS OFF.                                               *
*   IN CURRENT SYSTEMS, IF THE BYTE IS X'08' THEN 8-CHAR USERID     *
*     SUPPORT IS ON.                                                *
*                                                                   *
*   THIS PROGRAM FLIPS THE SWITCH TO ANY OF THESE VALUES.           *
*                                                                   *
*   SYNTAX:     TSVT8 0      SETS THE SWITCH TO X'00'               *
*               TSVT8 7      SETS THE SWITCH TO X'07'               *
*               TSVT8 8      SETS THE SWITCH TO X'08'               *
*                                                                   *
*   PURPOSE:    TO TURN 8-CHARACTER USERID SUPPORT ON OR OFF        *
*               FOR TESTING PURPOSES.                               *
*                                                                   *
*   ATTRIBUTES:    NON-REENTRANT                                    *
*                  APF-AUTHORIZED                                   *
*                                                                   *
*   CHANGES:                                                        *
*      V1.1  - 07/20/2017 - Display the address of the switch byte  *
*                 which is the TSVT + X'6'.                         *
*                                                                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  -----------------------------------------------------------------  *
*                  MACRO TO DISPLAY HEX VALUES                        *
*  -----------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         LM    R15,R1,HEXSAVE
         MEND
*  -----------------------------------------------------------------  *
         YREGS
TSVT8    CSECT
TSVT8    AMODE 31
TSVT8    RMODE 24
         USING TSVT8,R15           (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
EYEC0    DC    AL1(EYECL)          EXCLUSIVE LENGTH OF HEADER.
EYEC     DC    C' TSVT8 - &SYSDATE - &SYSTIME -'
         DC    C'  VERSION  1.1  '
         DC    CL16' Public Domain '
EYECL    EQU   *-EYEC
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             COPY BASE.
         USING TSVT8,R12           (TELL ASSEMBLER).
         LR    R14,R13             COPY CALLER'S SAVE AREA POINTER.
         MVC   SAVE,SAVEACON       PRE-CLEAR SAVE AREA
         LA    R13,SAVE            POINT TO MY SAVE AREA.
         ST    R13,8(,R14)         CHAIN ...
         ST    R14,SAVE+4          ... SAVE AREAS.
*
INITCON  DS    0H                  CLEAR FLAGS INITIALLY
         MVI   FLAG1,X'00'         CLEAR FLAG
         XC    TSVTNEW,TSVTNEW     CLEAR
         XC    TSVTPL6,TSVTPL6     CLEAR
         MVI   OUTPUT-1,X'40'      CLEAR
         MVC   OUTPUT,OUTPUT-1      OUTPUT LINE
*
TESTPARM DS    0H
         LTR   R1,R1               ANY CPPL OR PARM POINTER?
         BZ    RETURN              B IF NOT.
         L     R2,0(,R1)           POINT TO BUFFER
         LTR   R2,R2               ANY?
         BZ    RETURN              B IF NOT.
         LH    R3,0(R2)            LOAD LENGTH.
         LTR   R3,R3               ANY?
         BZ    RETURN              B IF NOT.
         CLI   2(R2),X'00'         COMMAND PROCESSOR INVOCATION?
         BE    RLDCP
         LA    R2,2(,R2)           POINT TO PARM.
         B     PARM
RLDCP    CH    R3,=H'4'            ANY PARM?
         BE    FINDDATA            B IF NOT.
         AH    R2,2(,R2)           POINT TO ...
         LA    R2,4(,R2)           ... PARM.
PARM     DS    0H
* --- PARMS GOTTEN AT THIS POINT.  NOW WE ARE FLIPPING THE SWITCH --- *
*
PRTTITL  DS    0H                  PRINT PROGRAM TITLE
         STM   R14,R1,SAVE14T1
         TPUT  TITLINE,L'TITLINE
         TPUT  TITDASH,L'TITDASH
         LM    R14,R1,SAVE14T1
*
SETFLAGS DS    0H
         XC    FLAG1,FLAG1         INITIALIZE FLAG INDICATOR
OLDPRM0  CLI   0(R2),C'0'          IS THE PARM C'0' ?
         BNE   NEWBUT7             NO. GO ON
         OI    FLAG1,FLAG0OLD      INDICATE WE WANT X'00'
         B     FINDDATA
NEWBUT7  CLI   0(R2),C'7'          IS THE PARM C'7' ?
         BNE   NEWAND8             NO. GO ON
         OI    FLAG1,FLAG7NEW      INDICATE WE WANT X'07'
         B     FINDDATA
NEWAND8  CLI   0(R2),C'8'          IS THE PARM C'8' ?
         BNE   FINDDATA            NO. GO ON
         OI    FLAG1,FLAG8NEW      INDICATE WE WANT X'08'
         B     FINDDATA
* --- FLAG CHOSEN, GET THE TSVT. ------------------------------------ *
         USING CVTMAP,R5
FINDDATA L     R5,CVTPTR           POINT TO THE CVT.
         L     R5,CVTTVT           POINT TO TSVT.
         ST    R5,SAVETSVT         SAVE ADDRESS OF TSVT
         LR    R6,R5               Get TSVT + 6 for display
         A     R6,=F'6'            Add the 6 bytes
         ST    R6,DISPADDR         Store for display
         MVC   OUTPUT,OUTPUT-1     Clear output line.
         MVC   OUTPUT(20),=C'Address of TSVT+6:  '   Move text.
         HEX   OUTPUT+20,4,DISPADDR                  Address.
         TPUT  OUTPUT,60
         MVC   TSVTPL6(1),6(R5)    STORE CURRENT SWITCH SETTING
         DROP  R5
* ------------------------------------------------------------------- *
*                                  Show previous status of byte.
         STM   R14,R1,SAVE14T1
         MVC   OUTPUT,OUTPUT-1     Clear output line.
         MVC   OUTPUT(30),=C'Previous TSVT+6 setting was:  '
         HEX   OUTPUT+32,1,6(R5)   Print original byte setting.
*        HEX   OUTPUT+40,1,TSVTPL6   Print original byte setting.
         TPUT  OUTPUT,45
         LM    R14,R1,SAVE14T1
* --- HOW ARE WE SETTING THE SWITCH? -------------------------------- *
ON       DS    0H                  Invalid parm entered.
         CLI   FLAG1,X'00'         Didn't change the flag?
         BE    NOCHANGE            Then show no change and get out.
* -- >       Test if this command is being run APF Authorized
         STM   R15,R1,SAVE14T1     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE14T1     Restore registers used by TESTAUTH.
* -- >                             We're authorized. Go Key 0.
         MODESET KEY=ZERO
SETOLDWY DS    0H
         MVI   6(R5),X'00'         Initially clear the switch byte.
         TM    FLAG1,FLAG0OLD      Are we resetting it to X'00'?
         BNO   SETNEW7             No. Try next parm.
         MVI   6(R5),X'00'         Move X'00' to the switch byte.
         MVI   TSVTNEW,X'00'       Save the new setting.
         B     ENDMOD              Go problem state.
SETNEW7  TM    FLAG1,FLAG7NEW      Do we want to set X'07'?
         BNO   SETNEW8             No. Try next parm.
         OI    6(R5),X'07'         Yes. Move X'07' to switch byte.
         MVI   TSVTNEW,X'07'       Save the new setting.
         B     ENDMOD              Go problem state.
SETNEW8  TM    FLAG1,FLAG8NEW      Do we want to set X'08'?
         BNO   ENDMOD              No. Not resetting at all.
         OI    6(R5),X'08'         Set switch byte to X'08'.
         MVI   TSVTNEW,X'08'       Save the new setting.
         B     ENDMOD              Problem state.
ENDMOD   DS    0H
         MODESET KEY=NZERO
         MVI   0(R2),X'00'         Make sure this parm address is
         MVI   1(R2),X'00'           clean for next use.
NEWTSVT  DS    0H                  Print new status of switch byte.
         STM   R14,R1,SAVE14T1
         MVC   OUTPUT,OUTPUT-1     Clear output line.
         MVC   OUTPUT(30),=C'Changed  TSVT+6 setting is :  '
         HEX   OUTPUT+32,1,6(R5)   Print changed byte setting.
*        HEX   OUTPUT+40,1,TSVTNEW Print changed byte setting.
         TPUT  OUTPUT,45
         LM    R14,R1,SAVE14T1
RETURN0  SR    R15,R15             RC = 0
RETURN   L     R13,SAVE+4          General return to caller.
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         LTORG
** ---------------------------------------------------------------- **
NOTAUTH  DS    0H                  Message that we are not authorized
         TPUT  MSG00,L'MSG00
         LA    R15,8               RC = 8
         B     RETURN
** ---------------------------------------------------------------- **
NOCHANGE DS    0H                  Message that nothing changed.
         TPUT  MSG01,L'MSG01
         LA    R15,4               RC = 4
         B     RETURN
** ---------------------------------------------------------------- **
HEX      DS    0H
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                           CONSTANTS                               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SAVEACON DC    16F'0'
TITLINE  DC    C'TSVT8  TEST/ALTER 8-CHARACTER ID SUPPORT - V1.1'
TITDASH  DC    C'-----  ---------- ----------- -- -------   ----'
MSG00    DC    C'Program must be run APF-Authorized.'
MSG01    DC    C'No changes have been made to TSVT+6'
FLAG1    DC    X'00'
FLAG0OLD EQU   B'10000000'             X'00'
FLAG7NEW EQU   B'01000000'             X'07'
FLAG8NEW EQU   B'00100000'             X'08'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                           VARIABLES                               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SAVE     DS    9D
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
SAVETSVT DS    F
DISPADDR DS    F
TSVTPL6  DS    X
TSVTNEW  DS    X
SAVE14T1 DS    2D                  Save "system-used" registers.
         DC    C' '                Blank before OUTPUT line.
OUTPUT   DC    CL80'  '            Variable output line.
SAVELEN  EQU   *-SAVE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         TITLE '- MAPPING MACROS.'
         CVT   DSECT=YES           MAP THE CVT.
         END   TSVT8
