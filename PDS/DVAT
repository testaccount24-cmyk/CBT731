DVAT     TITLE 'DVAT - DISPLAY VATLST - VOLUME ATTRIBUTE LIST'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO          *
*                   COMMAND.                                          *
*                                                                     *
*         SYNTAX:   DVAT                                              *
*                                                                     *
*       FUNCTION:   SHOW CONTENTS OF VATLST THAT IS IN CORE,          *
*                     AFTER IPL TIME.  IPL SETTINGS HAVE BEEN         *
*                     DESTROYED AND OVERLAID BY THIS TIME.            *
*                                                                     *
*                   DOES NOT REFLECT CHANGES DUE TO SUBSEQUENT        *
*                     MOUNT COMMANDS.                                 *
*                                                                     *
*                   DOES NOT CHECK AGAINST UCB'S THAT ARE             *
*                     ACTUALLY MOUNTED.                               *
*                                                                     *
*                   PUTLINE TERMINAL INTERFACE ALLOWS THE             *
*                   TRAPPING OF OUTPUT.  NO APF AUTHORIZATION         *
*                   REQUIRED.                                         *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R9,SAV9HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         L     R9,SAV9HEX
         MEND
* ------------------------------------------------------------------- *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
DVAT     CSECT
DVAT     AMODE 31
DVAT     RMODE 24
         USING DVAT,R12,R11
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'DVAT   VER 1.0'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         ST    R1,CPPLPTR          PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         SPACE 1
         L     R3,16               POINT TO CVT.
         L     R3,0(,R3)           POINT TO TCB/ASCB WORDS
         L     R10,12(,R3)         POINT TO ASCB.
         L     R9,4(,R3)           POINT TO TCB.
         L     R3,X'B4'(,R9)       POINT TO JSCB.
         L     R2,X'108'(,R3)      POINT TO PSCB.
         LA    R2,0(,R2)           CLEAR HIGH BYTE.
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
INITCON  DS    0H
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVI   VATPAREA-1,X'40'
         MVC   VATPAREA,VATPAREA-1
PREP     DS    0H                  GET VATDUSE CONTROL BLOCK
         L     R3,16               CVT
         L     R3,X'128'(,R3)      POINT TO JESCT
         L     R3,X'78'(,R3)       POINT TO DACA
         L     R3,X'0C'(,R3)       POINT TO VATDUSE
         ST    R3,VATDPTR          STORE ITS ADDR FOR FUTURE USE
PREP1    DS    0H                  GET VATLST SETTING FROM IPA
         L     R3,16               CVT
         L     R3,X'8C'(,R3)       POINT TO ECVT
         L     R3,X'188'(,R3)      POINT TO IPA
         LA    R3,X'A88'(,R3)      BUMP TO IPAVAL PDE
         ST    R3,VATIPAPT         STORE PDE ADDR FOR FUTURE USE
DUMPACE  DS    0H
         BAL   R9,HEADERS          PRINT PROGRAM HEADER
         BAL   R9,VATDVOL          FORMAT ENTRIES IN VATLIST
         B     EOJ0                NORMAL END
EOJ4     LA    R15,4               SET CC = 4.
EOJ      DS    0H                  BYE.
         LR    R1,R13
         L     R13,4(,R13)
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     SR    R15,R15             SET CC = 0.
         B     EOJ                 CONT.
EOJ8     LA    R15,8               SET CC = 8.
         B     EOJ                 CONT
         EJECT
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - -           S  U  B  R  O  U  T  I  N  E  S               - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H                    Print hex numbers in display form
         ST    R9,SAVER9F
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         L     R9,SAVER9F
         BR    R9                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
HEXSAVE  DS    3F                    Register save for HEX macro
SAV9HEX  DS    F
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADERS  DS    0H                    Display program header
         ST    R9,SAVER9C
         MVC   LINE,LINE-1
         MVC   LINE+14(34),=C'DISPLAY INCORE VATLST SETTINGS    '
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+14(30),DASHES
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(16),=C'VATDUSE ADDRESS:'
         HEX   LINE+20,4,VATDPTR
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(16),=C'DEFAULT SYSUSE :'
         L     R3,VATDPTR
TRYPUBL  DS    0H
         CLI   8(R3),C'0'
         BNE   TRYSTOR
         MVC   LINE+20(7),=C'STORAGE'
         B     PRTIPLU
TRYSTOR  DS    0H
         CLI   8(R3),C'1'
         BNE   TRYPRIV
         MVC   LINE+20(6),=C'PUBLIC'
         B     PRTIPLU
TRYPRIV  DS    0H
         CLI   8(R3),C'2'
         BNE   TRYERR
         MVC   LINE+20(7),=C'PRIVATE'
         B     PRTIPLU
TRYERR   DS    0H
         MVC   LINE+20(7),=C'*ERROR*'
PRTIPLU  DS    0H
         APUT  LINE,62
VATLSIPA DS    0H                  VATLST VALUES CODED IN IEASYS.
         L     R3,VATIPAPT         LOAD ADDR OF IPAVAL PDE
         XR    R8,R8               CLEAR WORK REGISTER
         LH    R8,4(,R3)           LOAD LENGTH OF ENTRY
         BCTR  R8,0                DECREASE FOR EXECUTE
         L     R3,0(,R3)           POINT TO ACTUAL VATLST MEM SUFFIXES
         EX    R8,MOVVPRM          MOVE PARMS TO DISPLAY AREA
         MVC   LINE,LINE-1
         MVC   LINE+2(16),=C'VATLST FROM IPA:'
         EX    R8,MOVVLINE         MOVE DISPLAY AREA TO DISPLAY LINE
         APUT  LINE,72
         B     HEADEND
MOVVPRM  MVC   VATPAREA(*-*),0(R3)   * EXECUTED *
MOVVLINE MVC   LINE+20(*-*),VATPAREA * EXECUTED *
* ---> TEST CODE
HEADEND  DS    0H                    Display program header
         L     R9,SAVER9C
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
VATDVOL  DS    0H                    Continue header
         ST    R9,SAVER9A
*
         MVC   LINE,LINE-1
         MVC   LINE+2(28),DASHES
         MVC   LINE+31(35),=C'(*PARMLIB  VATLST VOLUME SETTINGS*)'
         APUT  LINE,68
         MVC   LINE,LINE-1
         MVC   LINE+34(28),DASHES
         APUT  LINE,68
         MVC   LINE,LINE-1
*        MVC   LINE+2(28),DASHES
         MVC   LINE+31(35),=C'( MAY BE OVERRIDDEN BY MOUNT CMDS )'
         APUT  LINE,68
         MVC   LINE,LINE-1
*        MVC   LINE+2(28),DASHES
         MVC   LINE+31(35),=C'( NOT CHECKED AGAINST ONLINE UCBS )'
         APUT  LINE,68
         MVC   LINE,LINE-1
         MVC   LINE+4(7),=C'VOLMASK'
         MVC   LINE+14(6),=C'ATTRIB'
         MVC   LINE+24(6),=C'DEVTYP'
         APUT  LINE,55
         MVC   LINE,LINE-1
         MVC   LINE+2(28),DASHES
         APUT  LINE,55
*
* --
         L     R3,VATDPTR
         L     R6,X'20'(,R3)              LOAD BCT REGISTER
         N     R6,=X'0000FFFF'            NOT TOO LARGE
         LA    R4,X'2C'(,R3)
         BAL   R9,VOLLOOP
VATDEND  DS    0H
* --
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
VOLLOOP  DS    0H                    Go thru flag table for each flag
         ST    R9,SAVER9D
PRTVOL   DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+4(6),0(R4)       MOVE IN MASKED VOLSER
TRYPPRV  DS    0H
         CLI   7(R4),C'2'            MOUNTED PRIVATE?
         BNE   TRYPSTO               NO.
         MVC   LINE+14(7),=C'PRIVATE'
         B     PRTVOLI
TRYPSTO  DS    0H
         CLI   7(R4),C'1'            MOUNTED PUBLIC?
         BNE   TRYPPUB               NO.
         MVC   LINE+14(7),=C'PUBLIC '
         B     PRTVOLI
TRYPPUB  DS    0H
         CLI   7(R4),C'0'            MOUNTED STORAGE?
         BNE   TRYPERR
         MVC   LINE+14(7),=C'STORAGE'
         B     PRTVOLI
TRYPERR  DS    0H
         MVC   LINE+14(7),=C'*ERROR*'
PRTVOLI  DS    0H
         BAL   R9,DISKTYPE
         APUT  LINE,55
VOLLBCK  DS    0H
         LA    R4,16(,R4)
         BCT   R6,PRTVOL
FLGLEND  DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+2(28),DASHES
         APUT  LINE,55
         L     R9,SAVER9D
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DISKTYPE DS    0H
         ST    R9,SAVER9B
         LA    R7,DEVTABLE
DISKLOOP DS    0H
         CLI   0(R7),X'FF'
         BE    DISKTEXT
         CLC   0(1,R7),6(R4)
         BE    DISKSUBT
         LA    R7,7(,R7)
         B     DISKLOOP
DISKSUBT DS    0H
         MVC   LINE+24(6),1(R7)
DISKTEXT DS    0H
         L     R9,SAVER9B
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DEVTABLE DC    X'00',C'ALL   '
         DC    X'01',C'*ERR01'
         DC    X'02',C'*ERR02'
         DC    X'03',C'*ERR03'
         DC    X'04',C'9345  '
         DC    X'05',C'*ERR05'
         DC    X'06',C'2305-1'
         DC    X'07',C'2305-2'
         DC    X'08',C'2314  '
         DC    X'09',C'3330  '
         DC    X'0A',C'3340  '
         DC    X'0B',C'3350  '
         DC    X'0C',C'3375  '
         DC    X'0D',C'3330-1'
         DC    X'0E',C'3380  '
         DC    X'0F',C'3390  '                                    *
         DC    X'FF',C'EOTABL'                                    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE
BLANKS   DC    C'        '         8 BLANKS
DASHES   DC    C'--------------------------------------------'
NOID     DC    X'0000000000000000'
FLAG2    DS    X
FLAG2ON  EQU   B'10000000'             TURN ON
FLAG2OFF EQU   B'01000000'             TURN OFF
         LTORG
CPPLPTR  DC    F'0'
         SPACE 3
DATAAREA DSECT
SAVE     DS    9D
SAVER3A  DS    F
SAVER3B  DS    F
SAVER3C  DS    F
SAVER3D  DS    F
SAVER9A  DS    F
SAVER9B  DS    F
SAVER9C  DS    F
SAVER9D  DS    F
SAVER9E  DS    F
SAVER9F  DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
VATDPTR  DS    F
VATIPAPT DS    F
DMPADDR  DS    XL16
DMPWORK  DS    XL16
STORCNT  DS    XL2
NEWIDL   DS    XL1
NEWID    DC    C'        '         STORE NEW USERID HERE
         DC    C' '
LINE     DS    CL133
         DS    CL6
         DC    C' '
VATPAREA DC    CL64' '
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJUPT
         IKJPSCB
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
