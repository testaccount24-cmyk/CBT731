DACEE    TITLE 'DACEE - DUMP CONTENTS OF THE ACEE'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO          *
*                   COMMAND.                                          *
*                                                                     *
*         SYNTAX:   DACEE                                             *
*                                                                     *
*       FUNCTION:   SHOW CONTENTS OF ACEE FIELDS AND HEX DUMP         *
*                   THE ENTIRE CONTROL BLOCK.                         *
*                                                                     *
*                   PUTLINE TERMINAL INTERFACE ALLOWS THE             *
*                   TRAPPING OF OUTPUT.  NO APF AUTHORIZATION         *
*                   REQUIRED.                                         *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R9,SAV9HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         L     R9,SAV9HEX
         MEND
* ------------------------------------------------------------------- *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
DACEE    CSECT
DACEE    AMODE 31
DACEE    RMODE 24
         USING DACEE,R12,R11
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'DACEE   VER 1.3'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         ST    R1,CPPLPTR          PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         SPACE 1
         L     R3,16               POINT TO CVT.
         L     R3,0(,R3)           POINT TO TCB/ASCB WORDS
         L     R10,12(,R3)         POINT TO ASCB.
         L     R9,4(,R3)           POINT TO TCB.
         L     R3,X'B4'(,R9)       POINT TO JSCB.
         L     R2,X'108'(,R3)      POINT TO PSCB.
         LA    R2,0(,R2)           CLEAR HIGH BYTE.
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
INITCON  DS    0H
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
PREP     DS    0H
         L     R3,X'6C'(,R10)      POINT TO ASXB
         L     R3,X'C8'(,R3)       POINT TO ACEE
         USING ACEE,R7
         ST    R3,ACEEPTR
DUMPACE  DS    0H
         BAL   R9,HEADERS          PRINT PROGRAM HEADER
         BAL   R9,ACEENAME         SHOW NAMED FIELDS IN THE ACEE
         BAL   R9,ACEEFLG          FORMAT CONTENTS OF ACEE FLAGS
         BAL   R9,ACEEDMP          HEX DUMP ACEE IN TWO FORMATS
         B     EOJ0                NORMAL END
EOJ4     LA    R15,4               SET CC = 4.
EOJ      DS    0H                  BYE.
         LR    R1,R13
         L     R13,4(,R13)
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     SR    R15,R15             SET CC = 0.
         B     EOJ                 CONT.
EOJ8     LA    R15,8               SET CC = 8.
         B     EOJ                 CONT
         EJECT
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - -           S  U  B  R  O  U  T  I  N  E  S               - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H                    Print hex numbers in display form
         ST    R9,SAVER9F
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         L     R9,SAVER9F
         BR    R9                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
HEXSAVE  DS    3F                    Register save for HEX macro
SAV9HEX  DS    F
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADERS  DS    0H                    Display program header
         ST    R9,SAVER9C
         MVC   LINE,LINE-1
         MVC   LINE+10(34),=C'SHOW AND DUMP CONTENTS OF THE ACEE'
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+10(34),DASHES
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(16),=C'ACEE ADDRESS:   '
         HEX   LINE+20,4,ACEEPTR
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(26),DASHES
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(42),FLAGL1
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(42),FLAGL2
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+2(26),DASHES
         APUT  LINE,62
         L     R9,SAVER9C
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ACEEFLG  DS    0H                    Display contents of ACEE flags
         ST    R9,SAVER9A
*
         MVC   LINE,LINE-1
         MVC   LINE+2(26),DASHES
         MVC   LINE+36(12),=C'(ACEE FLAGS)'
         APUT  LINE,55
*
* --                                      FLAG 1
         L     R4,ACEEPTR
         MVC   FLFLG(1),X'26'(R4)
         MVC   LINE,LINE-1
         MVC   LINE+2(7),=C'FLG1:  '
         HEX   LINE+12,1,FLFLG
         APUT  LINE,55
         LA    R3,FLG1TBL
         LA    R6,8
         BAL   R9,FLGLOOP
* --                                      FLAG 2
         L     R4,ACEEPTR
         MVC   FLFLG(1),X'27'(R4)
         MVC   LINE,LINE-1
         MVC   LINE+2(7),=C'FLG2:  '
         HEX   LINE+12,1,FLFLG
         APUT  LINE,55
         LA    R3,FLG2TBL
         LA    R6,8
         BAL   R9,FLGLOOP
* --                                      FLAG 3
         L     R4,ACEEPTR
         MVC   FLFLG(1),X'28'(R4)
         MVC   LINE,LINE-1
         MVC   LINE+2(7),=C'FLG3:  '
         HEX   LINE+12,1,FLFLG
         APUT  LINE,55
         LA    R3,FLG3TBL
         LA    R6,8
         BAL   R9,FLGLOOP
* --                                      FLAG 4
         L     R4,ACEEPTR
         MVC   FLFLG(2),X'38'(R4)
         MVC   LINE,LINE-1
         MVC   LINE+2(7),=C'FLG4:  '
         HEX   LINE+12,2,FLFLG
         APUT  LINE,55
         LA    R3,FLG4TBL
         LA    R6,8
         BAL   R9,FLGLOOP
* --                                      FLAG 5
         L     R4,ACEEPTR
         MVC   FLFLG(1),X'85'(R4)
         MVC   LINE,LINE-1
         MVC   LINE+2(7),=C'FLG5:  '
         HEX   LINE+12,1,FLFLG
         APUT  LINE,55
         LA    R3,FLG5TBL
         LA    R6,8
         BAL   R9,FLGLOOP
* --                                      FLAG 6
         L     R4,ACEEPTR
         MVC   FLFLG(2),X'86'(R4)
         MVC   LINE,LINE-1
         MVC   LINE+2(7),=C'FLG6:  '
         HEX   LINE+12,2,FLFLG
         APUT  LINE,55
         LA    R3,FLG6TBL
         LA    R6,8
         BAL   R9,FLGLOOP
* --
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FLGLOOP  DS    0H                    Go thru flag table for each flag
         ST    R9,SAVER9D
         MVC   TSFLG(1),0(R3)
         XR    R2,R2
         IC    R2,TSFLG
         EX    R2,TMFLG
         BNO   PRTSND
PRTFST   DS    0H
         MVC   LINE,LINE-1
         HEX   LINE+3,1,TSFLG
         MVC   LINE+8(8),3(R3)
         MVC   LINE+20(10),11(R3)
         APUT  LINE,55
         B     FLGLBCK
PRTSND   DS    0H
         MVC   LINE,LINE-1
         HEX   LINE+3,1,TSFLG
         MVC   LINE+8(8),3(R3)
         MVC   LINE+20(10),21(R3)
         APUT  LINE,55
         B     FLGLBCK
FLGLBCK  DS    0H
         LA    R3,31(,R3)
         BCT   R6,FLGLOOP
FLGLEND  DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+2(26),DASHES
         APUT  LINE,55
         L     R9,SAVER9D
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TMFLG    TM    FLFLG,X'00'           Contents of these are modified
TSFLG    DC    X'00'
FLFLG    DC    X'0000'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ACEENAME DS    0H                    Display name fields in the ACEE
         ST    R9,SAVER9E
         L     R3,ACEEPTR
*
         MVC   LINE,LINE-1                     Userid
         MVC   LINE+2(L'USRIDMS),USRIDMS
         MVC   LINE+20(8),X'15'(R3)
         HEX   LINE+40,1,X'14'(R3)
         MVI   LINE+40,X'40'
         APUT  LINE,55
*
         MVC   LINE,LINE-1                     Group ID
         MVC   LINE+2(L'GRPIDMS),GRPIDMS
         MVC   LINE+20(8),X'1E'(R3)
         HEX   LINE+40,1,X'1D'(R3)
         MVI   LINE+40,X'40'
         APUT  LINE,55
*
         MVC   LINE,LINE-1                     Proc ID for STC
         MVC   LINE+2(L'PRCIDMS),PRCIDMS
         MVC   LINE+20(8),X'2C'(R3)
         APUT  LINE,55
*
         MVC   LINE,LINE-1                     Terminal ID
         MVC   LINE+2(L'TRMIDMS),TRMIDMS
         MVC   LINE+20(8),X'40'(R3)
         APUT  LINE,55
*
         MVC   LINE,LINE-1
         MVC   LINE+2(L'SURIDMS),SURIDMS       Surrogate Userid
         CLC   =X'0000',X'90'(R3)
         BE    NOSURMVE
         MVC   LINE+20(8),X'90'(R3)
NOSURMVE DS    0H
         APUT  LINE,55
*
         L     R9,SAVER9E
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ACEEDMP  DS    0H           Dump contents in HEX and ISPF 3-line format
         ST    R9,SAVER9B
*
         MVC   LINE,LINE-1
         MVC   LINE+7(15),=C'(ACEE CONTENTS)'
         APUT  LINE,55
         MVC   LINE,LINE-1
         MVC   LINE+2(26),DASHES
         APUT  LINE,55
         L     R3,ACEEPTR
         ST    R3,SAVER3A
         LA    R6,12
         LA    R5,0
         STCM  R5,3,STORCNT
LINELUP  DS    0H
         L     R3,SAVER3A
         MVC   DMPADDR(16),0(R3)
         MVC   LINE,LINE-1
         MVC   LINE+2(5),=C'ACEE '
         HEX   LINE+8,2,STORCNT
         MVI   LINE+7,C'+'
         HEX   LINE+17,4,DMPADDR
         HEX   LINE+27,4,DMPADDR+4
         HEX   LINE+37,4,DMPADDR+8
         HEX   LINE+47,4,DMPADDR+12
         APUT  LINE,62
* --- >
         MVC   DMPWORK,DMPADDR
         TR    DMPWORK(16),TRTBL0
         MVC   LINE,LINE-1
         MVC   LINE+17(16),DMPWORK
         APUT  LINE,62
         MVC   DMPWORK,DMPADDR
         TR    DMPWORK(16),TRTBL1
         MVC   LINE,LINE-1
         MVC   LINE+17(16),DMPWORK
         APUT  LINE,62
         MVC   DMPWORK,DMPADDR
         TR    DMPWORK(16),TRTBL2
         MVC   LINE,LINE-1
         MVC   LINE+17(16),DMPWORK
         APUT  LINE,62
         MVC   LINE,LINE-1
         MVC   LINE+17(38),DASHES
         APUT  LINE,62
* --- >
         LA    R3,16(,R3)
         LA    R5,16(,R5)
         STCM  R5,3,STORCNT
         ST    R3,SAVER3A
         BCT   R6,LINELUP
         L     R9,SAVER9B
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE
USRIDMS  DC    C'ACEE USERID    :             LENGTH:     '
GRPIDMS  DC    C'ACEE GROUP ID  :             LENGTH:     '
PRCIDMS  DC    C'ACEE PROCEDURE :                         '
TRMIDMS  DC    C'ACEE TERMINAL  :                         '
SURIDMS  DC    C'ACEE SURROGATE :                         '
BLANKS   DC    C'        '         8 BLANKS
DASHES   DC    C'--------------------------------------------'
FLAGL1   DC    C'FLAG 1 - +26     FLAG2 - +27   FLAG3 - +28'
FLAGL2   DC    C'FLAG 4 - +38(2)  FLAG5 - +85   FLAG6 - +86'
NOID     DC    X'0000000000000000'
FLAG2    DS    X
FLAG2ON  EQU   B'10000000'             TURN ON
FLAG2OFF EQU   B'01000000'             TURN OFF
TRTBL0   DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'404040404040404040404A4B4C4D4E4F'
         DC    XL16'504040404040404040405A5B5C5D5E5F'
         DC    XL16'606140404040404040406A6B6C6D6E6F'
         DC    XL16'404040404040404040407A7B7C7D7E7F'
         DC    XL16'40818283848586878889404040404040'
         DC    XL16'40919293949596979899404040404040'
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
TRTBL1   DS    0D
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'
TRTBL2   DS    0D
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         LTORG
CPPLPTR  DC    F'0'
FLG1TBL  DS    0F
         DC    X'80',C'  ACEESPEC',C'SPECIAL   ',C'NOSPECIAL '
         DC    X'40',C'  ACEEADSP',C'ADSP      ',C'NOADSP    '
         DC    X'20',C'  ACEEOPER',C'OPERATIONS',C'NOOPERATNS'
         DC    X'10',C'  ACEEAUDT',C'AUDITOR   ',C'NOAUDITOR '
         DC    X'08',C'  ACEELOGU',C'RACFLOG   ',C'NORACFLOG '
         DC    X'04',C'  RESERVED',C'HEX04     ',C'NOHEX04   '
         DC    X'02',C'  ACEEPRIV',C'PRIV      ',C'NOPRIV    '
         DC    X'01',C'  ACEERACF',C'RACFDEFUSR',C'NORACFDEFU'
         SPACE 3
FLG2TBL  DS    0F
         DC    X'80',C'  ACEEALTR',C'DEFALTR   ',C'NODEFALTR '
         DC    X'40',C'  ACEECNTL',C'DEFCNTL   ',C'NODEFCNTL '
         DC    X'20',C'  ACEEUPDT',C'DEFUPDT   ',C'NODEFUPDT '
         DC    X'10',C'  ACEEREAD',C'DEFREAD   ',C'NODEFREAD '
         DC    X'08',C'  RESERVED',C'HEX08     ',C'NOHEX08   '
         DC    X'04',C'  RESERVED',C'HEX04     ',C'NOHEX04   '
         DC    X'02',C'  RESERVED',C'HEX02     ',C'NOHEX02   '
         DC    X'01',C'  ACEENONE',C'DEFNOAUTH ',C'NODEFNOAUT'
         SPACE 3
FLG3TBL  DS    0F
         DC    X'80',C'  ACEEGRPA',C'GROUP+UID ',C'ONLYUID   '
         DC    X'40',C'  ACEERASP',C'RACFADRSPC',C'NOTRACFADR'
         DC    X'20',C'  ACEECLNT',C'UNAUTHCLNT',C'          '
         DC    X'10',C'  ACEEACLT',C'AUTHCLIENT',C'          '
         DC    X'08',C'  ACEETSKP',C'TASKLVL   ',C'NOTASKLVL '
         DC    X'04',C'  ACEEIUSP',C'INITUSP   ',C'NOINITUSP '
         DC    X'02',C'  ACEEDUID',C'DEFAULTUID',C'NODEFLTUID'
         DC    X'01',C'  ACEENPWR',C'NOPSWDREQ ',C'PSWDREQ   '
         SPACE 3
FLG4TBL  DS    0F
         DC    X'80',C'  RESERVED',C'HEX80     ',C'NOHEX80   '
         DC    X'40',C'  RESERVED',C'HEX40     ',C'NOHEX40   '
         DC    X'20',C'  ACEEUATH',C'DEFUSERS  ',C'NODEFUSERS'
         DC    X'10',C'  RESERVED',C'HEX10     ',C'NOHEX10   '
         DC    X'08',C'  ACEEDASD',C'PROTDASD  ',C'NOPROTDASD'
         DC    X'04',C'  ACEETAPE',C'PROTTAPE  ',C'NOPROTTAPE'
         DC    X'02',C'  ACEETERM',C'PROTTERM  ',C'NOPROTTERM'
         DC    X'01',C'  RESERVED',C'HEX01     ',C'NOHEX01   '
         SPACE 3
FLG5TBL  DS    0F
         DC    X'80',C'  ACEEMODE',C'ACEEAMOD31',C'ACEEAMOD24'
         DC    X'40',C'  ACEEVMSK',C'PLCL1024  ',C'PLCL128   '
         DC    X'20',C'  ACEED4OK',C'DAT4USED  ',C'DAT4NOTUSD'
         DC    X'10',C'  ACEEXNVR',C'ENVROBJOTH',C'ENVROBJHER'
         DC    X'08',C'  ACEESTOK',C'SERVAUTH  ',C'NOSERVAUTH'
         DC    X'04',C'  ACEENSTE',C'ENVNSTFSTA',C'NOENVNSTAF'
         DC    X'02',C'  ACEEDALY',C'DAILYLOGON',C'NODALYLOGN'
         DC    X'01',C'  RESERVED',C'HEX01     ',C'NOHEX01   '
         SPACE 3
FLG6TBL  DS    0F
         DC    X'80',C'  ACEERAUI',C'RESTACCUID',C'NORESTACCU'
         DC    X'40',C'  ACEERUAA',C'RESTACUXOT',C'NORESACUXO'
         DC    X'20',C'  ACEERUAV',C'CHKDOTHER ',C'NOCHKOTHER'
         DC    X'10',C'  RESERVED',C'HEX10     ',C'NOHEX10   '
         DC    X'08',C'  RESERVED',C'HEX08     ',C'NOHEX08   '
         DC    X'04',C'  RESERVED',C'HEX04     ',C'NOHEX04   '
         DC    X'02',C'  RESERVED',C'HEX02     ',C'NOHEX02   '
         DC    X'01',C'  RESERVED',C'HEX01     ',C'NOHEX01   '
         SPACE 3
DATAAREA DSECT
SAVE     DS    9D
SAVACEE  DS    F
SAVER3A  DS    F
SAVER3B  DS    F
SAVER3C  DS    F
SAVER3D  DS    F
SAVER9A  DS    F
SAVER9B  DS    F
SAVER9C  DS    F
SAVER9D  DS    F
SAVER9E  DS    F
SAVER9F  DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
ACEEPTR  DS    F
DMPADDR  DS    XL16
DMPWORK  DS    XL16
STORCNT  DS    XL2
NEWIDL   DS    XL1
NEWID    DC    C'        '         STORE NEW USERID HERE
         DC    C' '
LINE     DS    CL133
         DS    CL72
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJUPT
         IKJPSCB
         IHAACEE
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
