         TITLE 'Display your TSO userid in various storage locations'
* ------------------------------------------------------------------- *
*      TSO COMMAND PROCESSOR TO DISPLAY THE USERID OF THE INVOKER,    *
*        IN VARIOUS PLACES WHERE IT OCCURS WITHIN THE SYSTEM.         *
*                                                                     *
*      This program is useful for detecting if any "funny business"   *
*        is going on, with the userid names, during your TSO session. *
*        This program is also very valuable to show 8-character       *
*        copies of userids when there are two versions of a userid    *
*        in a control block.  For 8-character userid support, the     *
*        PSCB, UPT, and LWA each contain two fields containing        *
*        userids (the 7-character and the 8-character versions).      *
*        This program shows both of them, plus both of their          *
*        addresses in virtual storage.                                *
*                                                                     *
*      We have tried to make sure that this program will run well     *
*        on older systems which do not have 8-character userid        *
*        support (z/OS 2.2 and previous).                             *
*                                                                     *
*      *****    THIS PROGRAM IS IN THE PUBLIC DOMAIN.   *****         *
*                                                                     *
*      Only needs APF authorization to show the TSBX.  If you don't   *
*        authorize, then the TSBX display shows an informational      *
*        message, that you can't display the control block.           *
*                                                                     *
*      If there is no APF authorization, we test for it before the    *
*        TSBX display (which needs APF) and produce an error message  *
*        instead.                                                     *
*                                                                     *
*   CHANGE LOG:                                                       *
*      Version 1.4 - Jun 16, 2020                                     *
*        Add userid in UTOKEN control block.                          *
*      Version 1.5 - Oct 26, 2020                                     *
*        Add display of addresses for all the userid locations.       *
*        Add second base register for possible expansion.             *
*        Make sure display is all printable if run on old systems,    *
*          where some of the new fields may have been hex zeros.      *
*          (We try and OR these fields with blanks, to convert        *
*           them to blanks, so that they won't be unprintable.)       *
*        When running ALLIDS on a system without 8-character id       *
*          support, don't report the second uid address if it         *
*          is not there (the field is hex zeroes).                    *
*      Version 1.6 - Sep 18, 2022                                     *
*        Add display of userid in ASSB (ASSBJBNI).                    *
*      Version 1.7 - Apr 04, 2025                                     *
*        Get PSCB using ASXB from ASCB, to ITCB to JSCB,              *
*        in preparation for ALLIDSA.                                  *
*                                                                     *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
*  -----------------------------------------------------------------  *
*                  MACRO TO DISPLAY HEX VALUES                        *
*  -----------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         LM    R15,R1,HEXSAVE
         MEND
*  -----------------------------------------------------------------  *
         MACRO
&NAME    HEXR  &TO,&REG
&NAME    STM   R15,R1,HEXSAVE
         LR    R1,&REG
         ST    R1,STORREG
         LA    R0,4
         LA    R15,&TO
         BAL   R4,HEX
         LM    R15,R1,HEXSAVE
         MEND
*  -----------------------------------------------------------------  *
         YREGS
ALLIDS   CSECT
ALLIDS   RMODE 24
ALLIDS   AMODE 24
         USING ALLIDS,R12
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'ALLIDS  VER 1.7 '
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL37'This program is in the Public Domain '
BEGINN   DS    0H
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD ENTRY POINT INTO BASE REGISTER
         USING ALLIDS,R12,R6       TWO BASES FOR POSSIBLE EXPANSION
         LA    R6,4095(,R12)       LOAD SECOND BASE
         LA    R6,1(,R6)
         LR    R15,R13             SAVE CALLER'S SAVE ADDRESS
         LA    R13,SAVE            GET OUR SAVEAREA ADDRESS
         ST    R15,SAVE+4          STORE HIS SAVEAREA INTO MINE + 4
         ST    R13,8(,R15)         STORE MINE INTO HIS SAVEAREA + 8
INITPGM  DS    0H                  PRINT TITLE
*
         MVI   OUTLINE-1,X'40'
         MVC   OUTLINE,OUTLINE-1
      MVC OUTLINE+8(43),=C'ALLIDS - SHOW TSO USERID OCCURRENCES - V1.7'
         APUT  OUTLINE,51
         MVC   OUTLINE,OUTLINE-1
      MVC OUTLINE+8(43),=C'------   ---- --- ------ -----------   ----'
         APUT  OUTLINE,51
         MVC   OUTLINE,OUTLINE-1
         MVC  OUTLINE(60),=C'   cntl            old    len   new   len x
                address1 address2'
         APUT  OUTLINE,60
         MVC   OUTLINE,OUTLINE-1
         MVC  OUTLINE(60),=C'  block           field   gth  field  gth x
                of uid   of uid  '
         APUT  OUTLINE,60
         MVC   OUTLINE,OUTLINE-1
         MVC  OUTLINE(60),=C'   ----           -----    --  -----   -- x
                -------- --------'
         APUT  OUTLINE,60
RUNCHAIN L     R1,16               POINT TO CVT.
         L     R5,X'9C'(,R1)       GET TSVT ADDRESS.
         L     R10,X'224'          POINT TO ASCB.
         L     R9,X'6C'(,R10)      POINT TO ASXB
         L     R9,X'F8'(,R9)       POINT TO ITCB
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R2,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R2)           CLEAR HIGH BYTE.
         L     R8,X'34'(,R2)       GET UPT ADDRESS
         ST    R8,UPTSAVE          SAVE UPT ADDRESS
* ------------------------------------------------------------------- *
         USING PSCB,R2
         MVC   PSCBMSG+18(7),PSCBUSER  MOVE OLD USERID IN FROM PSCB
         MVC   PSCBMSG+30(8),PSCB+X'54' MOVE NEW USERID FROM PSCB
         OC    PSCBMSG+30(8),BLANKS     IS FIELD ZEROS? BLANK IT OUT.
         HEX   PSCBMSG+27,1,PSCB+X'7'   DISPLAY OLD LENGTH
         CLI   PSCB+X'20',X'00'         OLD SYSTEM?
         BE    NOLENG1                  YES. DON'T REPORT ZERO LENGTH
         HEX   PSCBMSG+39,1,PSCB+X'20'  DISPLAY NEW LENGTH
NOLENG1  DS    0H
         OI    PSCBMSG+27,X'40'         MAKE PRINTABLE
         OI    PSCBMSG+39,X'40'         MAKE PRINTABLE
         ST    R2,ADDRSAVE              ADDRESS OF PSCBUSER (PSCB+0)
         HEX   PSCBMSG+43,4,ADDRSAVE    PRINT IT
         LA    R2,X'54'(,R2)            POINT TO NEW USERID FIELD
         ST    R2,ADDRSAVE              SAVE ITS ADDRESS FOR PRINTING
         CLC   0(8,R2),ZEROES           OLD SYSTEM?
         BE    NOFIELD1                 DON'T PRINT ADDRESS
         HEX   PSCBMSG+52,4,ADDRSAVE    PRINT ADDRESS OF NEW USERID
NOFIELD1 DS    0H
         APUT  PSCBMSG,L'PSCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         DROP  R2
         USING UPT,R8
         MVC   UPTMSG+18(7),UPT+X'10' OLD PREFIX
         MVC   UPTMSG+36(4),=C'    '
         MVC   UPTMSG+30(8),UPT+X'21' NEW PREFIX
         OC    UPTMSG+30(8),BLANKS      IF ZEROS, BLANK IT OUT
         HEX   UPTMSG+27,1,UPT+X'17'    MOVE IN OLD LENGTH
         CLI   UPT+X'29',X'00'          OLD SYSTEM?
         BE    NOLENG2                  YES. DON'T REPORT ZERO LENGTH
         HEX   UPTMSG+39,1,UPT+X'29'    MOVE IN NEW LENGTH
NOLENG2  DS    0H
         OI    UPTMSG+39,X'40'          DON'T PRINT HEX ZEROS
         LA    R8,X'10'(,R8)            GET ADDRESS OF OLD USERID
         ST    R8,ADDRSAVE              SAVE ADDRESS OF OLD USERID
         L     R8,UPTSAVE               RELOAD UPT ADDRESS
         HEX   UPTMSG+43,4,ADDRSAVE     PRINT ADDRESS OF USERID
         LA    R8,X'21'(,R8)            GET ADDRESS OF NEW USERID
         ST    R8,ADDRSAVE              SAVE ADDRESS OF NEW USERID
         CLC   0(8,R8),ZEROES           OLD SYSTEM?
         BE    NOFIELD2                 DON'T PRINT ADDRESS
         HEX   UPTMSG+52,4,ADDRSAVE     PRINT IT
NOFIELD2 DS    0H
         L     R8,UPTSAVE               RELOAD UPT ADDRESS
         APUT  UPTMSG,L'UPTMSG         DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R1,X'104'(,R1)      POINT TO JCT PREFIX.
         MVC   JCTMSG+18(8),X'18'(R1)  PRINT JCT ID MESSAGE.
         LA    R1,X'18'(,R1)            POINT TO JCT USERID
         ST    R1,ADDRSAVE              STORE IT FOR MESSAGE
         HEX   JCTMSG+43,4,ADDRSAVE     PRINT ADDRESS IN MESSAGE
         APUT  JCTMSG,L'JCTMSG         DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R1,X'104'(,R1)      POINT TO JCT PREFIX.
         XR    R7,R7               CLEAR REGISTER
         ICM   R7,7,X'96'(R1)      POINT REGISTER TO JMR POINTER
         MVC   JMRMSG+18(8),X'10'(R7)  MOVE USERID TO MESSAGE
         LA    R7,X'10'(,R7)            POINT TO JMR USERID
         ST    R7,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         HEX   JMRMSG+43,4,ADDRSAVE     PRINT ADDRESS IN MESSAGE
         APUT  JMRMSG,L'JMRMSG         DISPLAY THE MESSAGE ON THE TUBE
         L     R1,12(,R9)          POINT TO TIOT
         ST    R1,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         MVC   TIOTMSG+18(8),0(R1)  MOVE USERID IN FROM TIOT
         HEX   TIOTMSG+43,4,ADDRSAVE    PRINT ADDRESS IN MESSAGE
         APUT  TIOTMSG,L'TIOTMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'B0'(,R10)      POINT TO ASCB JOBNAME
         ST    R1,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         MVC   ASCBMSG+18(8),0(R1)  MOVE USERID IN FROM ADDRESS
         HEX   ASCBMSG+43,4,ADDRSAVE    PRINT ADDRESS IN MESSAGE
         APUT  ASCBMSG,L'ASCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'6C'(,R10)      POINT TO ASXB
         LA    R3,X'C0'(,R1)         POINT TO ASXB USERID
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         MVC   ASXBMSG+18(8),0(R3)    MOVE ASXB USERID
         HEX   ASXBMSG+43,4,ADDRSAVE    PRINT ADDRESS IN MESSAGE
         APUT  ASXBMSG,L'ASXBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'6C'(,R10)      POINT TO ASXB
         L     R1,X'C8'(,R1)       POINT TO ACEE
         ST    R1,SAVEACEE           SAVE THE ACEE ADDRESS
         LA    R3,X'15'(,R1)         POINT TO ACEE USERID
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         MVC   ACEEMSG+18(8),0(R3)      MOVE ACEE USERID
         HEX   ACEEMSG+43,4,ADDRSAVE    PRINT ADDRESS IN MESSAGE
         HEX   ACEEMSG+27,1,X'14'(R1)   MOVE ACEE USERID LENGTH
         APUT  ACEEMSG,L'ACEEMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,SAVEACEE           RELOAD THE ACEE ADDRESS
         L     R1,X'A4'(,R1)           POINT TO THE UTOKEN
         LA    R1,X'40'(,R1)           POINT TO UTOKEN USERID
         ST    R1,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         MVC   UTOKMSG+18(8),0(R1)      MOVE UTOK USERID
         HEX   UTOKMSG+43,4,ADDRSAVE    PRINT ADDRESS IN MESSAGE
         APUT  UTOKMSG,L'UTOKMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'6C'(,R10)      POINT TO ASXB
         L     R1,X'14'(,R1)       POINT TO LWA
         ST    R1,SAVELWA          SAVE THE ADDRESS OF THE LWA
         LA    R3,X'49'(,R1)         POINT TO LWA USERID
         MVC   LWAMSG+18(7),0(R3)       MOVE LWA USERID
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         HEX   LWAMSG+43,4,ADDRSAVE     PRINT ADDRESS IN MESSAGE
         L     R1,SAVELWA            RELOAD LWA ADDRESS
         LA    R3,X'1DC'(,R1)          POINT TO NEW USERID FIELD
         ST    R3,ADDRSAVE             SAVE ITS ADDRESS
         CLC   0(8,R3),ZEROES           OLD SYSTEM?
         BE    NOFIELD3                 DON'T PRINT ADDRESS
         HEX   LWAMSG+52,4,ADDRSAVE    DISPLAY NEW ADDRESS IN MESSAGE
NOFIELD3 DS    0H
         HEX   LWAMSG+27,1,X'48'(R1)   DISPLAY LENGTH VALUE
         MVC   LWAMSG+30(8),0(R3)      MOVE USERID INTO PLACE
         OC    LWAMSG+30(8),BLANKS     IF ZEROS, BLANK IT OUT
         APUT  LWAMSG,L'LWAMSG         DISPLAY THE MESSAGE ON THE TUBE
         STM   R15,R1,SAVE14T1     Restore registers used by TESTAUTH.
* --- >>     The TSB and TSBX display needs APF-authorization. BELOW
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, go display other ids.
         LM    R15,R1,SAVE14T1     Restore registers used by TESTAUTH.
         MODESET KEY=ZERO
         L     R1,X'3C'(,R10)          POINT TO TSB
         L     R1,X'60'(,R1)           POINT TO TSBX
         MVC   TSBXMSG+18(8),X'18'(R1) MOVE IN USERID
         LA    R1,X'18'(,R1)           POINT TO USERID
         ST    R1,ADDRSAVE             SAVE ADDRESS FOR REPORT
         HEX   TSBXMSG+43,4,ADDRSAVE   PRINT ADDRESS IN REPORT
         APUT  TSBXMSG,L'TSBXMSG       SHOW THE NAME THERE
         MODESET KEY=NZERO
         B     NOTAUTHO            Don't print not-auth message.
* --- >>     The TSB and TSBX display needs APF-authorization. ABOVE
NOTAUTH  DS    0H
         APUT  TSBNMSG,L'TSBNMSG       PRINT NOT-AUTHORIZED MESSAGE.
NOTAUTHO DS    0H
* --- >>     Subsequent control blocks may be above the 24-bit line.
         L     R15,CHGTO31B            LOAD ADDR OF 'TO31BIT' WITH..
         BSM   0,R15                   CHANGE TO 31-BIT MODE IN ORDER..
*                                      TO ADDRESS GETCORE STORAGE
CHGTO31B DC    0F'0',A(X'80000000'+TO31BIT)  SWITCH TO 31-BIT
TO31BIT  DS    0H                  Now we are in 31-bit mode.
         L     R1,X'38'(,R10)      POINT TO ASCBCSCB
         LR    R8,R1               SAVE CSCB ADDRESS
         MVC   CSCBMSG+18(8),8(R1)     MOVE CSCB USERID
         LA    R1,8(,R1)               POINT TO CSCB USERID
         ST    R1,ADDRSAVE             SAVE ITS ADDRESS FOR REPORT
         HEX   CSCBMSG+43,4,ADDRSAVE   PRINT ADDRESS IN THE REPORT
         APUT  CSCBMSG,L'CSCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'150'(,R10)     POINT TO ASSB
         LA    R3,X'158'(,R1)        POINT TO ASSB USERID
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR PRINTING
         MVC   ASSBMSG+18(8),0(R3)    MOVE ASSB USERID
         HEX   ASSBMSG+43,4,ADDRSAVE    PRINT ADDRESS IN MESSAGE
         APUT  ASSBMSG,L'ASSBMSG       DISPLAY THE MESSAGE ON THE TUBE
         LR    R1,R8               RELOAD CSCB ADDRESS
         L     R1,X'DC'(,R1)       POINT TO CSCX ADDRESS
         ST    R3,SAVER3A              SAVE WORK REGISTER
         LA    R3,X'18'(,R1)           POINT TO CSCX USERID
         ST    R3,ADDRSAVE             STORE ITS ADDRESS
         HEX   CSCXMSG+43,4,ADDRSAVE    PRINT ADDRESS IN THE REPORT
         MVC   CSCXMSG+18(8),X'18'(R1)  MOVE USERID INTO MESSAGE
         L     R3,SAVER3A              RESTORE WORK REGISTER
         APUT  CSCXMSG,L'CSCXMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'90'(,R10)      POINT TO ASCBOUCB
         LA    R1,X'D0'(,R1)       POINT TO OUCBUSRD
         ST    R1,ADDRSAVE             SAVE OUCB USERID ADDRESS
         MVC   OUCBMSG+18(8),0(R1)     MOVE OUCB USERID
         HEX   OUCBMSG+43,4,ADDRSAVE   DISPLAY ITS ADDRESS IN REPORT
         APUT  OUCBMSG,L'OUCBMSG       DISPLAY THE MESSAGE ON THE TUBE
         L     R1,X'150'(,R10)     POINT TO ASSB
         L     R1,X'A8'(,R1)         POINT TO JSAB
         ST    R3,SAVER3A              SAVE WORK REGISTER
         MVC   JSABMSG+18(8),X'2C'(R1)  MOVE JSAB USERID TO REPORT
         LA    R3,X'2C'(,R1)            GET ITS ADDRESS
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR REPORT
         HEX   JSABMSG+43,4,ADDRSAVE    PRINT ADDRESS IN REPORT
         MVC   JSABMSG+34(8),X'1C'(R1)  GET JSAB JOBNAME
         LA    R3,X'1C'(,R1)            GET ITS ADDRESS
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR REPORT
         HEX   JSABMSG+52,4,ADDRSAVE    PRINT ADDRESS IN REPORT
         APUT  JSABMSG,L'JSABMSG       DISPLAY MESSAGE ON THE TUBE
         L     R3,SAVER3A              RESTORE WORK REGISTER
         L     R1,X'150'(,R10)     POINT TO ASSB
         L     R1,X'F0'(,R1)         POINT TO VAB
         L     R1,4(,R1)               POINT TO CAUB
         LA    R3,X'14'(,R1)             POINT TO USERID
         ST    R3,ADDRSAVE              SAVE ADDRESS FOR REPORT
         HEX   CAUBMSG+43,4,ADDRSAVE    PRINT ADDRESS IN REPORT
         MVC   CAUBMSG+18(8),0(R3)      MOVE CAUB USERID TO REPORT
         APUT  CAUBMSG,L'CAUBMSG       DISPLAY THE MESSAGE ON THE TUBE
         B     TRY00
ENDMSG   DS    0H
* ------------------------------------------------------------------- *
TRY00    DS    0H                  CHECK IF 8-CHARACTER IDS ARE ACTIVE
         STM   R14,R1,SAVE14T1     SAVE ENOUGH REGISTERS
         CLI   6(R5),X'00'         OLD SYSTEM?
         BNE   TRY07               NO. MAYBE NEW SYSTEM W/O 8-CHAR
         APUT  MSG01,L'MSG01       SHOW 8-CHARACTER NOT APPLICABLE
         B     TRYEND              GET OUT OF THIS ROUTINE
TRY07    DS    0H                  CHECK IF Z/OS 2.3 W/O 8-CHAR SUPPORT
         CLI   6(R5),X'07'         IS IT THAT?
         BNE   TRY08               NO. TRY IF 2.3 WITH 8-CHARACTER
         APUT  MSG02,L'MSG02       SHOW 2.3 W/O 8-CHARACTER
         B     TRYEND              GET OUT OF THIS ROUTINE
TRY08    DS    0H                  CHECK IF 8-CHAR SUPPORT IS AVAILABLE
         CLI   6(R5),X'08'         IS IT AVAILABLE?
         BNE   TRYEND              NO. JUST GET OUT WITHOUT A MESSAGE.
         APUT  MSG03,L'MSG03       SHOW 8-CHARACTER IS AVAILABLE
         B     TRYEND              GET OUT OF THIS ROUTINE
TRYEND   DS    0H                  END OF ROUTINE
         LM    R14,R1,SAVE14T1     RELOAD SAVED REGISTERS
* ------------------------------------------------------------------- *
RETURN   DS    0H
         L     R13,SAVE+4          RELOAD CALLER'S SAVEAREA POINTER
         LM    R14,R12,12(R13)     RELOAD REGISTERS
         BR    R14                 RETURN TO CALLER
SAVE     DC    18F'0'              MY SAVE AREA
SAVER3A  DC    F'0'                SAVE AREA FOR R3
SAVEACEE DC    F'0'                SAVE AREA FOR ACEE
SAVELWA  DC    F'0'                SAVE AREA FOR LWA
SAVETSB  DC    F'0'                SAVE AREA FOR TSB
ADDRSAVE DC    F'0'                SAVE ADDRESSES PRIOR TO PRINTING
UPTSAVE  DC    F'0'                SAVE THE UPT ADDRESS
ZEROES   DC    XL8'0000000000000000'
PSCBMSG  DC    CL61'My PSCB Userid is                              '
UPTMSG   DC    CL61'My UPT  Prefix is                              '
JCTMSG   DC    CL61'My JCT  Userid is                              '
JMRMSG   DC    CL61'My JMR  Userid is                              '
TIOTMSG  DC    CL61'My TIOT Userid is                              '
ASCBMSG  DC    CL61'My ASCB Userid is                              '
ASXBMSG  DC    CL61'My ASXB Userid is                              '
ASSBMSG  DC    CL61'My ASSB Userid is                              '
CAUBMSG  DC    CL61'My CAUB Userid is                              '
JSABMSG  DC    CL61'My JSAB Userid is          Jobname             '
ACEEMSG  DC    CL61'My ACEE Userid is                              '
UTOKMSG  DC    CL61'My UTOK Userid is                              '
LWAMSG   DC    CL61'My LWA  Userid is                              '
CSCBMSG  DC    CL61'My CSCB Userid is                              '
CSCXMSG  DC    CL61'My CSCX Userid is                              '
OUCBMSG  DC    CL61'My OUCB Userid is                              '
TSBXMSG  DC    CL61'My TSBX Userid is                              '
TSBNMSG  DC    C'My TSBX Userid cannot be displayed - needs APF-authorix
               zation'
BLANKS   DC    CL80' '
OUTPUT   DC    CL80' '
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
SAVE14T1 DS    2D                  Save "system-used" registers.
STORREG  DC    F'0'
MSG01    DC    C'8-CHARACTER USERID SUPPORT IS: N/A'
MSG02    DC    C'8-CHARACTER USERID SUPPORT IS: OFF'
MSG03    DC    C'8-CHARACTER USERID SUPPORT IS: ON '
         DC    X'40'
OUTLINE  DS    CL80
         LTORG
** ---------------------------------------------------------------- **
HEX      DS    0H
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
** ---------------------------------------------------------------- **
HEXR     DS    0H
         MVC   1(1,R15),STORREG    MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         CVT   DSECT=YES
         IKJPSCB
         IKJUPT
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
