//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*     ASM LINKEDIT FROM SOURCE ASM
//*
//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//         DD DISP=SHR,DSN=SBGOLOB.B.ASM
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,
//            DSN=&&TEMP
//SYSIN    DD *
    TITLE 'SHOWRLGB - DISPLAY INFORMATION ABOUT THE TSO RELOGON BUFFER'
* ------------------------------------------------------------------- *
*      SHOWRLGB -  Display the entire RELOGON BUFFER                  *
*                                                                     *
*   Author:   Sam Golob                                               *
*                                                                     *
*   Not re-entrant.     Output uses PUTLINE interface.                *
*                                                                     *
* ------------------------------------------------------------------- *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R9,SAV9HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         L     R9,SAV9HEX
         LM    R15,R1,HEXSAVE
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SHOWRLGB CSECT
SHOWRLGB RMODE 24
SHOWRLGB AMODE 24
         USING *,R15
         B     STARTPG                   Eyecatcher
         DC    CL11'SHOWRLGB - '
         DC    C'&SYSDATE'
         DC    C', '
         DC    C'&SYSTIME'
STARTPG  DS    0H
         DROP  R15
         USING SHOWRLGB,R12
         STM   R14,R12,12(R13)           Save regs
         LR    R12,R15                   Load base
         LR    R14,R13                   Caller save area
         LA    R13,SAVEAREA              Save area address
         ST    R14,SAVEAREA+4            Store old save
         ST    R13,8(,R13)               Store new save
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         L     R7,8(,R1)                 PSCB from CPPL
         L     R7,X'30'(,R7)             RLGB from PSCB
         ST    R7,RLGBADDR               Store address for display
         L     R8,X'100'(,R7)            ECT address from RLGB
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   We have the RELOGON BUFFER, now print it out....              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVI   OUTAREA-1,X'40'           Display title of program
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA+24(18),=C'TSO RELOGON BUFFER'
         APUT  OUTAREA,60
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA+24(18),=C'--- ------- ------'
         APUT  OUTAREA,60
         MVC   OUTAREA(80),OUTAREA-1     Display buffer address
         MVC   OUTAREA(25),=C'Relogon Buffer Address:  '
         HEX   OUTAREA+25,4,RLGBADDR
         APUT  OUTAREA,60
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*           Copy the RELOGON BUFFER into our program              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   RLGBAREA(4),0(R7)         Copy the buffer header.
         MVI   RLGBAREA+4,X'40'          Clear our data area.     .
         MVC   RLGBAREA+5(251),RLGBAREA+4
         MVC   RLGBAREA+4(252),4(R7)     Copy the buffer contents.
         MVC   RLGBAREA+256(4),256(R7)   Copy the ECT address.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     Show the RELOGON BUFFER header first.                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVI   OUTAREA-1,X'40'           Buffer header information
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,2,RLGBAREA        Length of command
         HEX   OUTAREA+6,2,RLGBAREA+2    Offset (always zeros)
         MVC   OUTAREA+14(6),=C'Header'
         MVC   OUTAREA+71(3),=C'Dec'
         APUT  OUTAREA,80
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   Display the RELOGON BUFFER contents 35 characters at a time   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+4    Character representation
         MVC   OUTAREA+71(2),=C'+0'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+4     HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+39   Character representation
         MVC   OUTAREA+71(3),=C'+35'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+39    HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+74   Character representation
         MVC   OUTAREA+71(3),=C'+70'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+74    HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+109  Character representation
         MVC   OUTAREA+71(4),=C'+105'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+109   HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+144  Character representation
         MVC   OUTAREA+71(4),=C'+140'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+144   HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+179  Character representation
         MVC   OUTAREA+71(4),=C'+175'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+179   HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(35),RLGBAREA+214  Character representation
         MVC   OUTAREA+71(4),=C'+210'
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,35,RLGBAREA+214   HEX representation
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         MVC   OUTAREA(7),RLGBAREA+249   Character representation
         MVC   OUTAREA+71(4),=C'+245'    Last Line - 7 chars
         APUT  OUTAREA,80
         MVI   OUTAREA-1,X'40'
         MVC   OUTAREA(80),OUTAREA-1
         HEX   OUTAREA,7,RLGBAREA+249    HEX representation
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     Show the ECT address at the end of the RELOGON BUFFER,      *
*      And display whether the RELOGON switch is ON or OFF.       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   OUTAREA+23(9),=C'ECT Addr:'
         HEX   OUTAREA+35,4,RLGBAREA+256
         MVC   OUTAREA+50(11),=C'ECTLOGF is '
         TM    X'1C'(R8),X'10'           Is ECTLOGF set?
         BO    ISON                      Yes. Show ON.
         MVC   OUTAREA+61(3),OFF         No.  Show OFF.
         B     PRINTIT
ISON     MVC   OUTAREA+61(3),ON          Show ON.
PRINTIT  DS    0H                        Last Line - 7 chars
*                                        plus ECT address
*                                        plus ECTLOGF switch status
         APUT  OUTAREA,80
         SR    R15,R15                   RC = 0
RELEXIT  DS    0H                        Leave the program.
         L     R13,SAVEAREA+4            Old save area
         LM    R0,R12,20(R13)            Restore regs
         L     R14,12(,R13)
         BR    R14                       Exit
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H                    Display HEX values
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R9                    Return to caller
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                          CONSTANTS                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SAVEAREA DS    9D                    Save Area
HEXSAVE  DS    3F                    Save for HEX routine
SAV9HEX  DS    F                     Protection for BAL register
RLGBAREA DC    260C' '               Copy of entire RELOGON BUFFER
ON       DC    CL3'ON '
OFF      DC    CL3'OFF'
RLGBADDR DS    F                     Relogon Buffer address
         DS    X
OUTAREA  DS    80C                   Printout area
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         YREGS
         LTORG
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
/*
//LKED   EXEC  PGM=IEWL,
//       PARM='NCAL,MAP,LIST,LET'
//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB
//SYSLIN   DD  DSN=&&TEMP,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN
//SYSIN    DD  *
 ENTRY   SHOWRLGB
 SETCODE AC(1)
 SETSSI  CB495958
 NAME    SHOWRLGB(R)
