FPASS    TITLE 'FPASS - CHANGE PASSWORD FIELD IN THE TSB '
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO          *
*                   COMMAND.   MUST BE RUN AUTHORIZED.                *
*                                                                     *
*                   THIS PROGRAM IS IN THE PUBLIC DOMAIN.             *
*                                                                     *
*         SYNTAX:   FPASS NEWNAME     (plug in as password)           *
*                   FPASS -   (dash)  (this will blank the            *
*                                      TSB password area)             *
*                   FPASS * (asterisk) put hex zeros into the         *
*                                      TSB password area)             *
*                                                                     *
*       FUNCTION:   CHANGE PASSWORD FIELD IN THE YOUR TSO SESSION'S   *
*                   TSB.                                              *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         YREGS
         SPACE 1
SP000    EQU   0
         SPACE 1
FPASS    CSECT
FPASS    RMODE 24
FPASS    AMODE 31
         USING FPASS,R12
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'FPASS   VER 1.1'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL16' Public Domain '
BEGINN   STM   R14,R12,12(R13)
         LR    R12,R15
         LR    R11,R1              PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R10,12(,R1)         POINT TO ASCB.
         L     R9,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R9)       POINT TO JSCB.
         L     R2,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R2)           CLEAR HIGH BYTE.
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         ST    R2,PSCBADDR
         USING PSCB,R2
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO. STOP ACTION.
CONT0    LTR   R11,R11             ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R11)          PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         ST    R1,CMBUFAD          STORE COMMAND BUFFER ADDRESS
         L     R1,CMBUFAD          RELOAD COMMAND BUFFER ADDRESS
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    13,EOJ8             LESS THAN ZERO OR OVERFLOW, OUT.
         AR    R1,R3               POINT ...
         LA    R1,4(,R1)           ... TO CHAR.
* ------------------------------------------------------------------- *
         LA    R6,8                LOAD REG FOR BCT LOOP
         LR    R7,R1               INITIALIZE POINTER
         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID
         LA    R8,0                INITIALIZE CHARACTER COUNT
CUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN
NOMORCUT DS    0H
* CHECK HERE IF NEW USERID IS 8-CHARACTERS.
         MVC   NEWID(8),BLANKS     CLEAR FIELD
         CLI   0(R1),C'-'          IF FIRST CHAR IS A '-'
         BE    KZ                  THEN BLANK THE TSB PASSWORD
         CLI   0(R1),C'*'          IF FIRST CHAR IS A '*'
         BNE   PUSHREG             REGULAR PROCESSING IF NOT *
         MVC   NEWID(8),ZEROES     HEX ZEROES INTO PASSWORD FIELD
         B     KZ                  PROCEED WITH HEX ZEROES THERE
PUSHREG  DS    0H
         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE
         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID
         OC    NEWID(8),BLANKS     UPPERCASE IT.
KZ       MODESET KEY=ZERO
         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS
         L     R1,X'224'           POINT TO MY ASCB
         L     R1,X'3C'(,R1)       POINT TO MY TSB
         LA    R1,X'58'(,R1)       PASSWORD FIELD IN TSB
         MVC   0(8,R1),NEWID       INSERT PASSWORD VALUE
NZ       MODESET KEY=NZERO
         B     EOJ0                NORMAL END
EOJ4     LA    R15,4               SET CC = 4.
EOJ      DS    0H                  BYE.
         LR    R1,R13
         L     R13,4(,R13)
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     SR    R15,R15             SET CC = 0.
         B     EOJ                 CONT.
EOJ8     LA    R15,8               SET CC = 8.
         B     EOJ                 CONT
         EJECT
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
* - - - - - - - - - - - - - - - - - - - - - - - - *
MSG0     DC    C'8-CHARACTER USERIDS ARE NOT SUPPORTED.'
BLANKS   DC    C'        '         8 BLANKS
ZEROES   DC    XL8'00'             8 ZEROES
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         SPACE 3
         LTORG
         SPACE 3
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     GETMAINED DATA AREA                           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DATAAREA DSECT
SAVE     DS    9D
PSCBADDR DS    F
TSVTADDR DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
FLAG1    DS    X
NEWID    DC    C'        '         STORE NEW USERID HERE
         DS    CL72
         DS    0D
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJUPT
         IKJPSCB
         END
