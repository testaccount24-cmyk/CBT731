         TITLE ' SHOW AND EXPLAIN ALL TSB FIELDS  '
************************************************************
*        'SHOWTSB' OR 'LIST TSB FIELDS AND EXPLAIN THEM' *
************************************************************
         SPACE
*
*        Since the TSB is in fetch-protected storage, this
*        TSO command has to be run APF-authorized.
*
*        This program is in the Public Domain.
*
*        Note:  Some of the fields in the IKJTSB control block
*          apply both to VTAM and TCAM control of terminals.
*          If there was confusion, we tried to pick the VTAM
*          descriptions of the fields, and not the TCAM parts,
*          because there was some re-use of TCAM fields for
*          VTAM purposes.  The TSBX (TSB extension control
*          block, which applies to VTAM only, is not included
*          here.
*
*        THIS PROGRAM WAS CONSTRUCTED FROM THE LPSCB PROGRAM,
*        WHICH WAS:
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. OCTOBER 19 1979.
*        DATE UPDATED. MAY 10, 1995   SAM GOLOB
*                      NOV 28, 2016   SAM GOLOB
*                      MAR 10, 2017   SAM GOLOB
*        DATE CHANGED. JAN 02, 2019   SAM GOLOB
*                      DEC 24, 2020   SAM GOLOB
*                      AUG 29, 2022   SAM GOLOB
*                      OCT 30, 2023   SAM GOLOB
*
*        ATTRIBUTES. NOT RE-ENTRANT.
*
*        COMMENTS.
*            THIS TSO COMMAND SHOWS ALL THE FIELDS OF THE IBM
*            CONTROL BLOCK, TSB, SHORT FOR "TERMINAL STATUS BLOCK".
*            DESCRIBED BY THE IBM MACRO, IKJTSB.
*
*            ALSO INCLUDED, IS THE DESCRIPTION OF THE TSB EXTENSION
*            WHICH IS DESCRIBED BY THE MACRO IKTTSBX.  THE REASON
*            FOR THE IKT PREFIX INSTEAD OF IKJ, IS BECAUSE THE TSB
*            EXTENSION BELONGS TO VTAM.
*
*        CHANGE LOG:
*           JDM - JIM MARSHALL
*           SBG - SAM GOLOB
*
*     These remarks pertain to the LPSCB program:
*     JDM    02APR91 - ADDED DSECTS TO REPLACE HARDCODED OFFSETS JDM1
*     SBG    28NOV16 - LIST 8 HEX DIGIT ADDRESSES INSTEAD OF 6.
*                      CHANGED AMODE TO 31. DIDN'T SEEM TO HURT.
*     SBG    10MAR17 - FIXES FOR 8-CHARACTER USERIDS.
*                      DEPENDS ON TSVT+6 BYTE. PROGRAM DEPENDS ON
*                      TSVT NOW, WHICH IT DIDN'T DEPEND ON BEFORE.
*
*     The remarks from before, pertain to the SHOWTSVT program:
*
*     From here on, they pertain to the SHOWTSB program.
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   14,HEX
         MEND
         SPACE
         MACRO
&NAME    MSGZ  &AREA,&LEN
         LA    1,&AREA
         LA    0,&LEN
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         PRINT ON,GEN
SHOWTSB  AMODE 31                                                 JDM1
SHOWTSB  RMODE 24                                                 JDM1
SHOWTSB  CSECT
         USING *,R12,R10,R7
         B     @PROLOG-*(,15)
         DC    AL1(11),CL10'SHOWTSB '
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL16' Public Domain '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LA    R10,2048(,R12)      Load second base
         LA    R10,2048(,R10)
         LA    R7,2048(,R10)       Load third base
         LA    R7,2048(,R7)
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
         MVI   LINE-1,C' '
         XC    LINKAREA(8),LINKAREA
         SPACE
* ------------------------------------------------------------------- *
         TESTAUTH FCTN=1             Are we authorized?
         LTR   R15,R15               Test the return code.
         BNZ   NOTAUTH               Not zero, tell not authorized.
         B     IOPLSET               Go on with regular processing.
NOTAUTH  DS    0H                    Error message, and out.
         MVC   LINE,LINE-1
         MVC   LINE(19),=CL19'MUST RUN AUTHORIZED'
         TPUT  LINE,19
         B     EXIT12
* ------------------------------------------------------------------- *
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
IOPLSET  DS    0H                  Almost all Bill Godfrey's code here
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
         SPACE 1
************************************************************
*        SET UP PPL FOR PARSE                              *
************************************************************
         SPACE
         LA    R15,MYPPL           Also Bill Godfrey's code
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(MYPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R13,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*        CALL THE PARSE SERVICE ROUTINE                    *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL  (a la Bill Godfrey)
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPARS,X'80'       IF HI ORDER BIT NOT ON        JDM1
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,CVTPARS         CVTPARS                       JDM1
         DROP  R15                                               JDM1
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK DS    0H
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT DS    0H
         SPACE 1
         LTR   R15,R15
         BNZ   EXIT12
         L     R3,MYANS
         USING IKJPARMD,R3
         L     R4,CPPLPSCB
         CLI   ALLKW+1,1           'ALL SPECIFIED'
         BE    TESTTSVT
*                                  GET TO THE PSCB FROM ASCBXTCB
         L     R1,X'224'           ASCB
         L     R1,X'11C'(,R1)      ASCBXTCB  Use XTCB which is
*                                  chained off the ASCB.
         L     R1,X'B4'(,R1)       JSCB
         L     R1,X'108'(,R1)      PSCB
         LTR   R1,R1               IS THERE A PSCB?
         BZ    EXIT12              NO. CAN'T DO ANYTHING MORE
*                                  DO MANIPULATIONS WITH PSCB FIELDS
*                                  HERE, ETCETERA
         ST    R1,SAVEPSCB         SAVE IT EVEN IF WE DON'T USE IT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        TEST FOR PRESENCE OF 8-CHARACTER USERID SUPPORT            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TESTTSVT DS    0H                  TEACH PGM ABOUT 8-CHAR ID SUPPORT
         ST    R6,SAVER6A          SAVE WORK REGISTER
         XC    FLAG1,FLAG1         CLEAR FLAG
         L     R6,16               CVT
         L     R6,X'9C'(,R6)       TSVT
         ST    R6,TSVTADDR         SAVE ADDRESS OF TSVT
         L     R6,TSVTADDR         RELOAD TSVT ADDRESS FOR TEST
         TM    6(R6),X'08'         IS THIS FIELD 08?
         BO    TEST8CHR            FLIP FLAG BIT
         CLI   6(R6),X'00'         IS IT 00, THE OLD WAY?
         BE    TEST8END            YES. DON'T FLIP ANYTHING
TEST7CHR DS    0H                  NOT 00 AND NOT 08.
         OI    FLAG1,X'01'         SUPPORT ON BUT 7-CHAR UID LIMIT
         B     TEST8END            THEN GET OUT
TEST8CHR DS    0H                  8-CHAR SUPPORT IS ON
         OI    FLAG1,X'02'         SUPPORT ON AND 8-CHAR UID LIMIT
TEST8END DS    0H                  END OF ROUTINE
         L     R6,SAVER6A          RESTORE WORK REGISTER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                  PRINT TITLE OF THIS REPORT                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   LINE,LINE-1
         MVC   LINET(45),TITLELIT     Program title
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINET(45),TITLEUND     Underlines
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINET(44),TITLEEX0     Explanation of program purpose
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   IF 8-CHARACTER USERID SUPPORT IS PRESENT, THEN SEND MESSAGE     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              It is important to know if there exists              *
*              8-character userid support.                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EIGHTCID DS    0H
         CLI   FLAG1,X'00'         NO 8-CHARACTER SUPPORT
         BE    EIGHTOUT            THEN GET OUT
         TM    FLAG1,X'01'         SUPPORT IS PRESENT BUT NOT ON
         BO    EIGHTOFF            THEN REPORT IT
         TM    FLAG1,X'02'         SUPPORT IS PRESENT AND IS ON
         BO    EIGHTON             THEN REPORT IT
*                                  MSG IF 8-CHAR UID'S IN EFFECT
EIGHTOFF DS    0H                       OFF
         MVI   LINE-1,X'40'             BLANK MSG LINE
         MVC   LINE,LINE-1
         MVC   LINEU(L'MSG04),MSG04      YES, BUT
         BAL   R8,MSG                   SUPPORT IS TURNED OFF
         B     EIGHTOUT
EIGHTON  DS    0H                       ON
         MVI   LINE-1,X'40'             BLANK MSG LINE
         MVC   LINE,LINE-1
         MVC   LINEU(L'MSG05),MSG05      YES, AND
         BAL   R8,MSG                   SUPPORT IS TURNED ON
         B     EIGHTOUT
EIGHTOUT DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                 PRINT THE ADDRESS OF THE TSB                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         ST    R6,SAVER6B          SAVE WORK REGISTER
         L     R6,X'224'           POINT TO ASCB
         L     R6,X'3C'(,R6)       POINT TO TSB
         LTR   R6,R6               ANY TSB?
         BZ    EXIT12              NO. NOT TSO. EXIT WITH ERROR.
         ST    R6,TSBADDR          SAVE THE TSB ADDRESS.
         L     R6,SAVER6B          RESTORE WORK REGISTER
         L     R4,TSBADDR
         HEX   LINE+33,4,TSBADDR
         MVC   LINE+19(L'MSG01),MSG01
         MSGZ  LINE,L'MSG01+30
*        HEX   LINE+35,4,TSBADDR
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                  PRINT REPORT TITLE HEADERS                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MVC   LINE,LINE-1
         MVC   LINE(46),TITLEHDR
         BAL   R8,MSG
         MVC   LINE,LINE-1
         MVC   LINE(46),TITLEHUN
         BAL   R8,MSG
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                FORMAT FIELDS OF THE TSB LAYOUT                    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GOTTSB   DS    0H                 APF-Authorized for content display
         MODESET MODE=SUP,KEY=ZERO
         L     R4,TSBADDR
         USING TSB,R4
         MVC   LINE,LINE-1
         L     R4,TSBADDR
         MVC   LINETXT(L'TXTSTAT),TXTSTAT
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBSTAT
         MVC   LINEC(30),=C'TSBSTAT - FLAG meanings below:'
         BAL   R8,MSG
         SPACE
         MVC   LINEC(30),TXTEXPL
         BAL   R8,MSG
         MVC   LINEC(30),TXTINUSE
         BAL   R8,MSG
         MVC   LINEC(30),TXTLWAIT
         BAL   R8,MSG
         MVC   LINEC(30),TXTDSPLY
         BAL   R8,MSG
         MVC   LINEC(30),TXTNOBUF
         BAL   R8,MSG
         MVC   LINEC(30),TXTITOFF
         BAL   R8,MSG
         MVC   LINEC(30),TXTDISC
         BAL   R8,MSG
         MVC   LINEC(30),TXT3270
         BAL   R8,MSG
         MVC   LINEC(30),TXTATNLD
         BAL   R8,MSG
         SPACE
         MVC   LINETXT,TXTASCB
         HEX   LINEX,3,TSBASCB
         MVI   LINETXT+16,X'40'
         MVC   LINEC(12),=C'ASCB Address'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTFLG1),TXTFLG1
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBFLG1
         MVC   LINEC(30),=C'TSBFLG1 - FLAG meanings below:'
         BAL   R8,MSG
         MVC   LINEC(30),TXTANSR
         BAL   R8,MSG
         MVC   LINEC(30),TXTOFLSH
         BAL   R8,MSG
         MVC   LINEC(30),TXTOWIP
         BAL   R8,MSG
         MVC   LINEC(30),TXTWOWIP
         BAL   R8,MSG
         MVC   LINEC(30),TXTIFLSH
         BAL   R8,MSG
         MVC   LINEC(30),TXTTJOW
         BAL   R8,MSG
         MVC   LINEC(30),TXTTJIP
         BAL   R8,MSG
         MVC   LINEC(30),TXTTJBF
         BAL   R8,MSG
         MVC   LINETXT(L'TXTWTCB),TXTWTCB
         MVI   LINETXT+16,X'40'
         HEX   LINEX,3,TSBWTCB
         MVC   LINEC(30),=C'Addr of TCB waiting on TCBECB '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTLNSZ),TXTLNSZ
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBLNSZ
         ST    R11,SAVER11A
         SR    R11,R11
         IC    R11,TSBLNSZ
         CVD   R11,DOUBLE
         MVC   LINEY(4),MASK4
         ED    LINEY(4),DOUBLE+6
         MVC   LINEZ(4),=C'Dec('
         MVI   LINEW,C')'
         L     R11,SAVER11A
         MVC   LINEC(30),=C'Physical line size of terminal'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTOTBFP),TXTOTBFP
         MVI   LINETXT+16,X'40'
         HEX   LINEX,3,TSBOTBFP
         MVC   LINEC(30),=C'Ptr to trailr bufr, no hdr bfr'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTFLG2),TXTFLG2
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBFLG2
         MVC   LINEC(30),=C'TSBFLG2 - FLAG meanings below:'
         BAL   R8,MSG
         SPACE
         MVC   LINEC(30),TXTBIPI
         BAL   R8,MSG
         MVC   LINEC(30),TXTAUTON
         BAL   R8,MSG
         MVC   LINEC(30),TXTBRKIN
         BAL   R8,MSG
         MVC   LINEC(30),TXTAULST
         BAL   R8,MSG
         MVC   LINEC(30),TXTAUTOC
         BAL   R8,MSG
         MVC   LINEC(30),TXTSTAUT
         BAL   R8,MSG
         MVC   LINEC(30),TXTSATN1
         BAL   R8,MSG
         MVC   LINEC(30),TXTSATN2
         BAL   R8,MSG
         MVC   LINETXT(L'TXTITBFP),TXTITBFP
         MVI   LINETXT+16,X'40'
         HEX   LINEX,3,TSBITBFP
         MVC   LINEC(30),=C'Ptr to input trailer buffers  '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTNIBF),TXTNIBF
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBNIBF
         MVC   LINEC(30),=C'Num of buffers on input queue '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTIBFP),TXTIBFP
         MVI   LINETXT+16,X'40'
         HEX   LINEX,3,TSBIBFP
         MVC   LINEC(30),=C'Pointer to input buffer queue '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTFLG3),TXTFLG3
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBFLG3
         MVC   LINEC(30),=C'TSBFLG3 - FLAG meanings below:'
         BAL   R8,MSG
         MVC   LINEC(30),TXTATTN
         BAL   R8,MSG
         MVC   LINEC(30),TXTTJMSG
         BAL   R8,MSG
         MVC   LINEC(30),TXTSPIT
         BAL   R8,MSG
         MVC   LINEC(30),TXTNBKSP
         BAL   R8,MSG
         MVC   LINEC(30),TXTAWOIP
         BAL   R8,MSG
         MVC   LINEC(30),TXTTPUT
         BAL   R8,MSG
         MVC   LINEC(30),TXTNOBRK
         BAL   R8,MSG
         MVC   LINEC(30),TXTNFLOP
         BAL   R8,MSG
         MVC   LINETXT(L'TXTFLG5),TXTFLG5
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBFLG5
         MVC   LINEC(30),=C'TSBFLG5 - FLAG meanings below:'
         BAL   R8,MSG
         MVC   LINEC(30),TXTATMP
         BAL   R8,MSG
         MVC   LINEC(30),TXTSPF
         BAL   R8,MSG
         MVC   LINEC(30),TXTLOGON
         BAL   R8,MSG
         MVC   LINEC(30),TXTPARM
         BAL   R8,MSG
         MVC   LINEC(30),TXTQRY
         BAL   R8,MSG
         MVC   LINEC(30),TXTNEDIT
         BAL   R8,MSG
         MVC   LINEC(30),TXTKEYS
         BAL   R8,MSG
         MVC   LINEC(30),TXTVTAM
         BAL   R8,MSG
         MVC   LINETXT(L'TXTTERM1),TXTTERM1
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBTERM1
         MVC   LINEC(30),=C'TSBTERM1-Terminal cntl FLG 1: '
         BAL   R8,MSG
         MVC   LINEC(30),TXTTERMX
         BAL   R8,MSG
         MVC   LINEC(30),TXTCIHBN
         BAL   R8,MSG
         MVC   LINEC(30),TXTCBRK
         BAL   R8,MSG
         MVC   LINEC(30),TXTCATTN
         BAL   R8,MSG
         MVC   LINEC(30),TXTC5041
         BAL   R8,MSG
         MVC   LINEC(30),TXTC2741
         BAL   R8,MSG
         MVC   LINEC(30),TXTSIMND
         BAL   R8,MSG
         MVC   LINEC(30),TXTTSTR
         BAL   R8,MSG
         MVC   LINEC(30),TXTTGET
         BAL   R8,MSG
         MVC   LINETXT(L'TXTTERM2),TXTTERM2
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBTERM2
         MVC   LINEC(30),=C'TSBTERM2-Terminal cntl FLG 2: '
         BAL   R8,MSG
         MVC   LINEC(30),TXTTERMY
         BAL   R8,MSG
         MVC   LINEC(30),TXTCTUX
         BAL   R8,MSG
         MVC   LINEC(30),TXTRSV1
         BAL   R8,MSG
         MVC   LINEC(30),TXTALTCF
         BAL   R8,MSG
         MVC   LINEC(30),TXTALTCX
         BAL   R8,MSG
         MVC   LINEC(30),TXTASCI7
         BAL   R8,MSG
         MVC   LINEC(30),TXTASCI8
         BAL   R8,MSG
         MVC   LINEC(30),TXTRSV2
         BAL   R8,MSG
         MVC   LINEC(30),TXTRSV3
         BAL   R8,MSG
         MVC   LINEC(30),TXTALTCD
         BAL   R8,MSG
         MVC   LINEC(30),TXTC1050
         BAL   R8,MSG
         MVC   LINETXT(L'TXTECB),TXTECB
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBECB
         MVC   LINEC(30),=C'ECB communicate, TPUT and TJID'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTWTJID),TXTWTJID
         MVI   LINETXT+16,X'40'
         HEX   LINEX,2,TSBWTJID
         MVC   LINEC(30),=C'TJID of task waiting on TSBECB'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTLNDCC),TXTLNDCC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBLNDCC
         MVC   LINEC(30),=C'Line delete character         '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTCHDCC),TXTCHDCC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBCHDCC
         MVC   LINEC(30),=C'Character delete character    '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTATNLC),TXTATNLC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,2,TSBATNLC
         MVC   LINEC(30),=C'Nm output lines betw attn simu'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTATNTC),TXTATNTC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,2,TSBATNTC
         MVC   LINEC(30),=C'Nm of 1-second time intervals '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTLNNO),TXTLNNO
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBLNNO
         ST    R11,SAVER11A
         SR    R11,R11
         IC    R11,TSBLNNO
         CVD   R11,DOUBLE
         MVC   LINEY(4),MASK4
         ED    LINEY(4),DOUBLE+6
         MVC   LINEZ(4),=C'Dec('
         MVI   LINEW,C')'
         L     R11,SAVER11A
         MVC   LINEC(30),=C'Nm of lines on display screen '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTFLG4),TXTFLG4
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBFLG4
         MVC   LINEC(30),=C'TSBFLG4 - FLAG meanings below:'
         BAL   R8,MSG
         MVC   LINEC(30),TXTOCAB
         BAL   R8,MSG
         MVC   LINEC(30),TXTIWAIT
         BAL   R8,MSG
         MVC   LINEC(30),TXTOWAIT
         BAL   R8,MSG
         MVC   LINEC(30),TXTHUNG
         BAL   R8,MSG
         MVC   LINEC(30),TXTHOLD
         BAL   R8,MSG
         MVC   LINEC(30),TXTCANC
         BAL   R8,MSG
         MVC   LINEC(30),TXTGETBF
         BAL   R8,MSG
         MVC   LINEC(30),TXTHLDL
         BAL   R8,MSG
         MVC   LINETXT(L'TXTASRCE),TXTASRCE
         MVI   LINETXT+16,X'40'
         HEX   LINEX,2,TSBASRCE
         MVC   LINEC(30),=C'TCAM terminal index           '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTATNCC),TXTATNCC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBATNCC
         MVC   LINEC(30),=C'String for attn simulation    '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTAUTOS),TXTAUTOS
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBAUTOS
         MVC   LINEC(30),=C'Seq no for auto line numbering'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTAUTOI),TXTAUTOI
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBAUTOI
         MVC   LINEC(30),=C'Incrmt for auto line numbering'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTERSDS),TXTERSDS
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBERSDS
         MVC   LINEC(30),=C'Chars used to erase the screen'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTCTCB),TXTCTCB
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBCTCB
         MVC   LINEC(30),=C'TCB addr of task doing a TPUT '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTRECAP),TXTRECAP
         MVI   LINETXT+16,X'40'
         MVC   LINEX(8),TSBRECAP
         MVC   LINEC(30),=C'TCAS APPL LU name for reconnct'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTALUNM),TXTALUNM
         MVI   LINETXT+16,X'40'
         MVC   LINEX(8),TSBALUNM
         MVC   LINEC(30),=C'VTAM APPL LU name             '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTATTNC),TXTATTNC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBATTNC
         MVC   LINEC(30),=C'Nm of unprocessed ATTN''s      '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTSTAX),TXTSTAX
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBSTAX
         MVC   LINEC(30),=C'No of unscheduled STAX exits  '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTLINE),TXTLINE
         MVI   LINETXT+16,X'40'
         HEX   LINEX,2,TSBLINE
         MVC   LINEC(30),=C'Resource id of this terminal  '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTLECB),TXTLECB
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBLECB
         MVC   LINEC(30),=C'TIOC logoff waits on this ECB '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTPSWD),TXTPSWD
         MVI   LINETXT+16,X'40'
         MVC   LINEX(8),TSBPSWD
         MVC   LINEC(30),=C'Old location of LOGON Password'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTEXTNT),TXTEXTNT
         MVI   LINETXT+16,X'40'
         HEX   LINEX,4,TSBEXTNT
         MVC   LINEC(30),=C'Address of TSB Extension: TSBX'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTPRMR),TXTPRMR
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBPRMR
         ST    R11,SAVER11A
         SR    R11,R11
         IC    R11,TSBPRMR
         CVD   R11,DOUBLE
         MVC   LINEY(4),MASK4
         ED    LINEY(4),DOUBLE+6
         MVC   LINEZ(4),=C'Dec('
         MVI   LINEW,C')'
         L     R11,SAVER11A
         MVC   LINEC(30),=C'Default number of term rows   '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTPRMC),TXTPRMC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBPRMC
         ST    R11,SAVER11A
         SR    R11,R11
         IC    R11,TSBPRMC
         CVD   R11,DOUBLE
         MVC   LINEY(4),MASK4
         ED    LINEY(4),DOUBLE+6
         MVC   LINEZ(4),=C'Dec('
         MVI   LINEW,C')'
         L     R11,SAVER11A
         MVC   LINEC(30),=C'Default number of term columns'
         BAL   R8,MSG
         MVC   LINETXT(L'TXTALTR),TXTALTR
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBALTR
         ST    R11,SAVER11A
         SR    R11,R11
         IC    R11,TSBALTR
         CVD   R11,DOUBLE
         MVC   LINEY(4),MASK4
         ED    LINEY(4),DOUBLE+6
         MVC   LINEZ(4),=C'Dec('
         MVI   LINEW,C')'
         L     R11,SAVER11A
         MVC   LINEC(30),=C'Actual number of term rows    '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTALTC),TXTALTC
         MVI   LINETXT+16,X'40'
         HEX   LINEX,1,TSBALTC
         ST    R11,SAVER11A
         SR    R11,R11
         IC    R11,TSBALTC
         CVD   R11,DOUBLE
         MVC   LINEY(4),MASK4
         ED    LINEY(4),DOUBLE+6
         MVC   LINEZ(4),=C'Dec('
         MVI   LINEW,C')'
         L     R11,SAVER11A
         MVC   LINEC(30),=C'Actual number of term columns '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTTRMID),TXTTRMID
         MVI   LINETXT+16,X'40'
         MVC   LINEX(8),TSBTRMID
         MVC   LINEC(30),=C'Terminal id (symbolic name)   '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTSF1),TXTSF1
         MVI   LINETXT+16,X'40'
         HEX   LINEX,8,TSBSF1
         MVC   LINEC(30),=C'Security Field 1              '
         BAL   R8,MSG
         MVC   LINETXT(L'TXTEND),TXTEND
         BAL   R8,MSG
         SPACE
         MODESET MODE=PROB,KEY=NZERO
TSBENDX  B     EXIT0
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     ROUTINE TO SHOW HEXADECIMAL VALUES AS DISPLAY CHARACTERS      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             DISPLAY A MESSAGE W/PUTLINE
         LA    R0,72
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R8
         SPACE
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE      All from Bill Godfrey
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE          Also from Bill Godfrey
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
         B     EXIT
EXIT12   LA    R15,12              RETURN CODE 12
EXIT     LR    R2,R15              SAVE RETURN CODE
EXITX    LR    R15,R2              RESTORE RETURN CODE
         LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*        CONSTANTS                                         *
************************************************************
         SPACE
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         DS    0F
BLANKS   DC    C'                '
MSG01    DC    C'TSB ADDRESS: '
MSG04    DC    C'8-CHARACTER USERID SUPPORT IS: OFF'
MSG05    DC    C'8-CHARACTER USERID SUPPORT IS: ON '
MSGDASH  DC    C'------------------------------'
TITLELIT DC    C'     SHOW TSB-TERMINAL STATUS BLOCK FIELDS'
TITLEUND DC    C'     ---- --- -------- ------ ----- ------'
TITLEEX0 DC    C'      Display of the TERMINAL STATUS BLOCK'
TITLEHDR DC    C'  addr  field     value            explanation'
TITLEHUN DC    C'  ----  -----     -----            -----------'
TXTSTAT  DC    C'    +0  TSBSTAT'             1 BYTE
TXTEXPL  DC    C' (Status byte for this TSB.)  '
TXTINUSE DC    C'This TSB is in use          80'
TXTLWAIT DC    C'Keyboard locked-no buffers  40'
TXTDSPLY DC    C'TSB represents display scrn 20'
TXTNOBUF DC    C'TPUT found no buffers       10'
TXTITOFF DC    C'No non-supervisory messages 08'
TXTDISC  DC    C'TSB has been through LOGOFF 04'
TXT3270  DC    C'TSB represents 3270 terminl 02'
TXTATNLD DC    C'ATTN for input line delete  01'
TXTASCB  DC    C'    +1  TSBASCB '            3 BYTES
TXTFLG1  DC    C'    +4  TSBFLG1 '            1 BYTE
TXTANSR  DC    C'ATTN simulation requested   80'
TXTOFLSH DC    C'Output trailr que tb flushd 40'
TXTOWIP  DC    C'A TPUT is in progress       20'
TXTWOWIP DC    C'Waiting, OWAIT in progress  10'
TXTIFLSH DC    C'Input que flush in progress 08'
TXTTJOW  DC    C'TJID TPUT encountered OWIP  04'
TXTTJIP  DC    C'A TJID TPUT is in progress  02'
TXTTJBF  DC    C'TJID TPUT found no TS bufrs 01'
TXTWTCB  DC    C'    +5  TSBWTCB '            3 BYTES
TXTLNSZ  DC    C'    +8  TSBLNSZ '            1 BYTE
TXTOTBFP DC    C'    +9  TSBOTBFP'            3 BYTES
TXTFLG2  DC    C'   +10  TSBFLG2 '            1 BYTE
TXTBIPI  DC    C'Partial line prmptg cmplete 80'
TXTAUTON DC    C'Auto prompting requested    40'
TXTBRKIN DC    C'Breakin has occurred        20'
TXTAULST DC    C'Auto line numbering started 10'
TXTAUTOC DC    C'Auto char prompt started    08'
TXTSTAUT DC    C'Prompt user w/next line num O4'
TXTSATN1 DC    C'Bits 6 && 7 used to ind num  02'
TXTSATN2 DC    C'of chars (1-4) for sim attn 01'
TXTITBFP DC    C'   +11  TSBITBFP'            3 BYTES
TXTNIBF  DC    C'   +14  TSBNIBF '            1 BYTE
TXTIBFP  DC    C'   +15  TSBIBFP '            3 BYTES
TXTFLG3  DC    C'   +18  TSBFLG3 '            1 BYTE
TXTATTN  DC    C'Attention has been ignored  80'
TXTTJMSG DC    C'TSOUTPUT procesg TJID messg 40'
TXTSPIT  DC    C'Stop prompt if TCLEARQ/TBRK 20'
TXTNBKSP DC    C'Next char in bufr is Backsp 10'
TXTAWOIP DC    C'ASID TPUT wait for nrm TPUT 08'
TXTTPUT  DC    C'TCAM proc of TPUT not cmplt O4'
TXTNOBRK DC    C'BREAK not allowd for termnl 02'
TXTNFLOP DC    C'Flashback bit               01'
TXTFLG5  DC    C'   +19  TSBFLG5 '            1 BYTE
TXTATMP  DC    C'Term Control Routine Active 80'
TXTSPF   DC    C'SPF Active for this terminl 40'
TXTLOGON DC    C'Logon Initialization        20'
TXTPARM  DC    C'Extended Parm               10'
TXTQRY   DC    C'Curr Term supports dev qury 08'
TXTNEDIT DC    C'NOEDIT mode in effect       O4'
TXTKEYS  DC    C'Pass ATTN && Clear Kys to CP 02'
TXTVTAM  DC    C'This is a VTAM TSB          01'
TXTTERM1 DC    C'   +1A  TSBTERM1'            1 BYTE
TXTTERMX DC    C'(Terminal Control Flag Byte 1)'
TXTCIHBN DC    C'Time-out inhibited          80'
TXTCBRK  DC    C'BREAK feature               40'
TXTCATTN DC    C'ATTENTION feature           20'
TXTC5041 DC    C'Line is 5041                10'
TXTC2741 DC    C'Terminal is 2741            08'
TXTSIMND DC    C'SIMMATTN remember bit       O4'
TXTTSTR  DC    C'TCAM Trace active           02'
TXTTGET  DC    C'TCAM TGET not complete      01'
TXTTERM2 DC    C'   +1B  TSBTERM2'            1 BYTE
TXTTERMY DC    C'(Terminal Control Flag Byte 2)'
TXTCTUX  DC    C'Terminal is TUX             20'
TXTRSV1  DC    C'RESERVED 1                  10'
TXTALTCF DC    C'BITS 00001100 ASCII-7,00,-8,01'
TXTALTCX DC    C'00001100 BITS 10, 11 RESERVED '
TXTASCI7 DC    C'BITS 11110011 ASCII-7 is used '
TXTASCI8 DC    C'ASCII-8 alt code used 00000100'
TXTRSV2  DC    C'RESERVED 2            00001000'
TXTRSV3  DC    C'RESERVED 3            00001100'
TXTALTCD DC    C'Resource using an alt code  02'
TXTC1050 DC    C'The terminal is a 1050      01'
TXTECB   DC    C'   +1C  TSBECB  '            4 BYTES
TXTWTJID DC    C'   +20  TSBWTJID'            2 BYTES
TXTLNDCC DC    C'   +22  TSBLNDCC'            1 BYTE
TXTCHDCC DC    C'   +23  TSBCHDCC'            1 BYTE
TXTATNLC DC    C'   +24  TSBATNLC'            2 BYTES
TXTATNTC DC    C'   +26  TSBATNTC'            2 BYTES
TXTLNNO  DC    C'   +28  TSBLNNO '            1 BYTE
TXTFLG4  DC    C'   +29  TSBFLG4 '            1 BYTE
TXTOCAB  DC    C'Out of core abend           80'
TXTIWAIT DC    C'Input wait in progress      40'
TXTOWAIT DC    C'Output wait in progress     20'
TXTHUNG  DC    C'Terminal was hung up        10'
TXTHOLD  DC    C'TPUT hold in progress       08'
TXTCANC  DC    C'Session cancelled           O4'
TXTGETBF DC    C'TJID TPUT may get outp bfrs 02'
TXTHLDL  DC    C'After LOGOFF, do not discon 01'
TXTASRCE DC    C'   +2A  TSBASRCE'            2 BYTES
TXTATNCC DC    C'   +2C  TSBATNCC'            4 BYTES
TXTAUTOS DC    C'   +30  TSBAUTOS'            4 BYTES
TXTAUTOI DC    C'   +34  TSBAUTOI'            4 BYTES
TXTERSDS DC    C'   +38  TSBERSDS'            4 BYTES
TXTCTCB  DC    C'   +3C  TSBCTCB '            4 BYTES
TXTRECAP DC    C'   +40  TSBRECAP'            8 BYTES
TXTALUNM DC    C'   +48  TSBALUNM'            8 BYTES
TXTATTNC DC    C'   +50  TSBATTNC'            1 BYTE
TXTSTAX  DC    C'   +51  TSBSTAX '            1 BYTE
TXTLINE  DC    C'   +52  TSBLINE '            2 BYTES
TXTLECB  DC    C'   +54  TSBLECB '            4 BYTES
TXTPSWD  DC    C'   +58  TSBPSWD '            8 BYTES
TXTEXTNT DC    C'   +60  TSBEXTNT'            4 BYTES
TXTPRMR  DC    C'   +64  TSBPRMR '            1 BYTE
TXTPRMC  DC    C'   +65  TSBPRMC '            1 BYTE
TXTALTR  DC    C'   +66  TSBALTR '            1 BYTE
TXTALTC  DC    C'   +67  TSBALTC '            1 BYTE
TXTTRMID DC    C'   +68  TSBTRMID'            8 BYTES
TXTSF1   DC    C'   +70  TSBSF1  '            8 BYTES
TXTEND   DC    C'   +78  TSBEND  '            0 BYTES
         SPACE
MASK4    DC    XL4'40202120'
*****************TO COMMAND PROCESSOR   @ZA24***************
*        PARSE PCTHIS IS A VTAM TSB     @ZA16              *
************************************************************
         SPACE
         PRINT GEN
MYPCL    IKJPARM
ALLKW    IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*        DSECTS                                            *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D                   DOUBLEWORD WORK AREA
LINKAREA DS    2F
ADDRESS  DS    F
TSVTADDR DS    F                   TSVT ADDRESS
TSBADDR  DS    F                   TSB ADDRESS
UPTADDR  DS    F                   UPT ADDRESS
UPTADDRC DS    F                   UPT FROM CPPL
ECTADDR  DS    F
SAVER11A DS    F
SAVER6A  DS    F
SAVER6B  DS    F
SAVER9A  DS    F
SAVEPSCB DS    F                   WE DON'T USE IT, BUT WE HAVE IT
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
FLAG1    DS    X
*                                  X'00' IF NO 8-CHAR UID SUPPORT
*                                  X'01' IF 8-CHAR SUPPORT BUT NOT ON
*                                  X'02' IF 8-CHAR SUPPORT IS ON
LINEB    DS    C                   LINE-1
LINE     DS    CL120
LINETXT  EQU   LINE,17
LINEX    EQU   LINE+18
LINEZ    EQU   LINE+23
LINEY    EQU   LINE+26
LINEW    EQU   LINE+30
LINEC    EQU   LINE+35
LINET    EQU   LINE+8
LINEU    EQU   LINE+15
ENTRY    DS    F                1  LOADED ENTRY POINT OF TODCNVRT
PARAM    DS    5F               2  PARAMETER LIST FOR TODCNVRT PROGRAM
CLOCK    DS    D                3  TARGET AREA OF STCK INSTRUCTION
TIMEZONE DS    F                4  FILLED IN FROM CVTTZ
ANSWER   DS    CL64             5  ANSWER PLACE FOR TODCNVRT PROGRAM
         DS    C
WORKA    DS    10D
PARMSAVE DS    F
@DATAL   EQU   *-@DATA
         SPACE 1                                                 JDM1
         CVT   DSECT=YES,LIST=NO                                 JDM1
         SPACE 1                                                 JDM1
         PRINT ON,GEN
         IKJTCB DSECT=YES,LIST=NO                                JDM1
         SPACE 1                                                 JDM1
         IKJPSCB
         SPACE
         IKJTSVT
         SPACE
         IEZJSCB                                                 JDM1
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJECT
         SPACE
         IKJTSB
         SPACE
         IKTTSBX
         SPACE
         PRINT OFF
         YREGS
         END
