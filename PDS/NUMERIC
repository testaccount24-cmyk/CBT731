Notes on how to check for a numeric parm in a TSO command or
elsewhere.

If you aren't going to use IKJPARS to parse a TSO command that
you've written, here is a good way to verify whether an entered
parm is numeric.  The technique is very general, and I foresee
that it can have many clever applications, so that's why I'm
writing about it here.

The problem is as follows:

You have a string of characters, which you are testing whether
they are "Display Numeric".  That is, are they X'F0' thru X'F9'?
If not, then reject the string as invalid.

Technique:

Make a translate table that has all valid characters as themselves,
and all other characters as blanks, X'40', or any one single
character which is not valid.

By turning all the invalid characters into ONE single character,
you've made the "validity test" into only a test for the one
character!  THIS IS VERY POWERFUL!!!!

Make a copy of the string to be tested in your program.

Translate the copy against your table.  Now, all the invalid
characters are blanks.

Bop through the translated string with a BCT loop, testing for
blanks, and the BCT register contains the original length of the
string.  If any blanks show up before the end, the string is
invalid.  Simple.

The technique can be generalized.  Another non-used character can
be substituted for the blanks, as the "invalid character".  Any
combination of characters can be thus tested for "validity"--just
put all of them into the translate table as themselves, and the
rest of the characters as the "invalid character".


