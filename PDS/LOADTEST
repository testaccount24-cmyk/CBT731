LOADTEST TITLE 'LOADTEST - RELOAD AND/OR DISPLAY TSO TEST FIELDS'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is meant to be run as a batch        *
*                   program, APF authorized when it is used           *
*                   to reload the TEST parameters from TESTIN         *
*                   card input, or when regressing to a previous      *
*                   TPT control block using PARM=R.                   *
*                                                                     *
*        ****  THE LOADTEST PROGRAM IS NOT RE-ENTRANT ****            *
*                                                                     *
*  JCL:                                                               *
*                                                                     *
*  //SHOWTEST JOB ,'MY JOBCARD',CLASS=A,                              *
*  //    MSGCLASS=X,NOTIFY=&SYSUID                                    *
*  //*                                                                *
*  //LOADTEST EXEC PGM=LOADTEST PARM=R                                *
*  //STEPLIB  DD  DISP=SHR,DSN=MY.LOAD.LIBRARY                        *
*  //SYSPRINT DD  SYSOUT=*                                            *
*  //SYSPRNT2 DD  SYSOUT=*                                            *
*  //TESTOUT  DD  SYSOUT=*      (LRECL=80 DATASET OR SYSOUT)          *
*  //TESTOUT2 DD  SYSOUT=*      (LRECL=80 DATASET OR SYSOUT)          *
*  //TESTIN   DD  DISP=SHR,DSN=IBMUSER.B.ASM(LOADTCT1)                *
*                                                                     *
*  Note:  PARM=R on the EXEC card will REGRESS the TPT (and its       *
*         associated TCT and SCT tables) to the previous value,       *
*         if it exists.                                               *
*         When PARM=R, the TESTIN DD name is required, but its        *
*         contents is ignored.  Best to code: //TESTIN DD DUMMY       *
*         when PARM=R.                                                *
*                                                                     *
*  SUBROUTINE:                                                        *
*                                                                     *
*  LOADTN   -  PRODUCES REPORTS AT THE END OF PROCESSING.             *
*              LOADTN is a separate called program.                   *
*                                                                     *
*  DD NAME DESCRIPTIONS:                                              *
*                                                                     *
*  SYSPRINT DD IS THE ONLY REQUIRED DDNAME, AND IT ALWAYS HAS         *
*  TO BE PRESENT.  IT PRODUCES A REPORT REFLECTING THE INITIAL        *
*  STATE OF THE TEST CONTROL BLOCKS.                                  *
*                                                                     *
*  SYSPRINT also contains any relevant messages if the TEST control   *
*           blocks have been changed (messages at the bottom).        *
*                                                                     *
*  TESTOUT  DD :  PRODUCES A CARD DECK IN TESTIN FORM, WHICH WILL     *
*                 REPRODUCE THE LOAD OF THE CURRENT TEST PARAMETERS   *
*                 (BEFORE ANY CHANGES OCCUR).                         *
*                                                                     *
*  TESTOUT2 DD :  PRODUCES THE TESTOUT-TYPE CARD DECK, BUT AT THE     *
*                 END OF PROCESSING.  IF CHANGES HAVE BEEN MADE,      *
*                 THEY WILL BE REFLECTED HERE.                        *
*                                                                     *
*  SYSPRNT2 DD :  SIMILAR REPORT TO SYSPRINT DD, BUT DONE AT THE      *
*                 END OF PROCESSING, SO CHANGES (IF ANY) ARE          *
*                 REPORTED.  THE SYSPRNT2 DD NAME DOES NOT CONTAIN    *
*                 ANY EXTRA MESSAGES, THE WAY SYSPRINT DOES.          *
*                                                                     *
*  TESTIN   DD :  REQUIRED IF YOU WANT TO MAKE A NEW COPY OF THE      *
*                 TEST CONTROL BLOCKS:  TPT, TCT, SCT.  USES          *
*                 CONTROL CARD INPUT (SEE BELOW).                     *
*                                                                     *
*  THE TESTIN DD NAME IS NECESSARY IF YOU WANT TO CHANGE THE TEST     *
*  CONTROL BLOCKS.                                                    *
*                                                                     *
*  THE TESTIN DD NAME CONTAINS CARDS TO CHANGE THE TEST FIELD         *
*  ENTRIES.  WHEN LOADTEST IS RUN WITH THE TESTOUT DD NAME, THEN A    *
*  PROPERLY FORMATTED TESTIN DECK IS CREATED FROM THE EXISTING TEST   *
*  PARMS THAT ARE CURRENTLY IN EFFECT.  THIS FILE MAY BE EDITED, AND  *
*  USED AS FURTHER TESTIN INPUT TO ANOTHER LOADTEST RUN.              *
*                                                                     *
*  TESTIN AND TESTOUT DD NAMES ARE NOW OPTIONAL.  IF TESTIN IS LEFT   *
*  OUT, THEN NO CHANGES TO THE TEST PARAMETERS ARE PERFORMED.         *
*  SYSPRNT2 AND TESTOUT2, WHICH SHOW THE STATE OF THE TEST FIELDS     *
*  AFTER ANY CHANGES WERE MADE, ARE OPTIONAL AS WELL.                 *
*                                                                     *
*  IF TESTOUT IS LEFT OUT, THEN TESTIN-FORMATTED OUTPUT FOR THE       *
*  CURRENT TEST PARMS, IS NOT PRODUCED.                               *
*                                                                     *
*  TESTIN DD REQUIREMENTS:  (BE VERY CAREFUL WITH THE COLUMNS)        *
*                                                                     *
*       The string --TCT-- from column 1                              *
*       indicates that the following entries                          *
*       will be put in the TCT table.                                 *
*       These names go from columns 1 thru 8.                         *
*                                                                     *
*       The string --SCT-- from column 1                              *
*       indicates that the following entries                          *
*       will be put in the SCT table.                                 *
*       The command name goes from columns 1 thru 8.                  *
*       The program module name which is executed                     *
*       by that command goes from columns 9 thru 16.                  *
*                                                                     *
*       You have to be very exact with the columns.                   *
*                                                                     *
*       An asterisk (*) in column 1 causes that card                  *
*       to be ignored.  So does a space in column 1.                  *
*                                                                     *
*  THE TESTOUT DD NAME PRODUCES A PROPERLY FORMATTED TESTIN           *
*  FILE, TO RELOAD THE PREVIOUS TEST CONFIGURATION.                   *
*                                                                     *
*  SAMPLE TESTIN DD:  (be careful with columns 1-8 and 9-16)          *
*                                                                     *
*  * OLD LOADTEST PARMS  (a sample)   (begin in column 1)             *
*  *---+----1----+-                                                   *
*  --TCT--                                                            *
*  TSOEXEC                                                            *
*  SDSF                                                               *
*  PDS                                                                *
*  PDS86                                                              *
*  --SCT--                                                            *
*  F       IKJT9FIZ                                                   *
*  FI      IKJT9FIZ                                                   *
*  FIN     IKJT9FIZ                                                   *
*  FIND    IKJT9FIZ                                                   *
*  LB      IKJT9LBZ                                                   *
*  LG      IKJT9LGZ                                                   *
*                                                                     *
*                                                                     *
*       Function:   To display/change values of the TEST IKJTSOxx     *
*                   PARMLIB settings as they are represented          *
*                   internally in the TPT, TCT, SCT control           *
*                   blocks.                                           *
*                                                                     *
*          Author:  Sam Golob               Version:   1.8            *
*                                                                     *
*            Date:  Jun 20, 2019                                      *
*                                                                     *
*   DDNAME SUMMARY:                                                   *
*                                                                     *
*   SYSPRINT - Produces a report of the CURRENT (before loading)      *
*              TEST information.  Contains diagnosis messages.        *
*                                                                     *
*   SYSPRNT2 - Produces a similar report to SYSPRINT, but at the      *
*              end of processing.  This report reflects changes,      *
*              if any, to the TEST parameters.                        *
*                                                                     *
*   TESTOUT  - Converts the CURRENT TEST information into input       *
*              cards, to feed into another TESTLOAD invocation,       *
*              so the current information can be reloaded by          *
*              TESTLOAD (in case you want to back the TESTIN          *
*              changes out).                                          *
*                                                                     *
*   TESTOUT2 - Same as TESTOUT, but at end of procesing, and          *
*              reflecting any changes to the tables (if any)          *
*              that have been made.                                   *
*                                                                     *
*   TESTIN   - Cards to reload new TEST information into storage.     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
*   RETURN CODES:   0 - SUCCESSFUL DISPLAY and/or SUCCESSFUL          *
*                       CHANGE.                                       *
*                                                                     *
*                   4 - Original tables were damaged, and TESTIN      *
*                       cards were available, so that new tables      *
*                       were constructed from the TESTIN cards.       *
*                                                                     *
*                       This condition code also occurs when          *
*                       trying to regress to a previous level of      *
*                       the tables, and the address of the previous   *
*                       table either does not exist, or if it         *
*                       points to an invalid TCT.                     *
*                                                                     *
*                   8 - TPT or TCT or SCT corrupted.  See error       *
*                       messages in the SYSPRINT DD name.  This       *
*                       can happen if there is no TESTIN card deck.   *
*                                                                     *
*                       (Hint:  You can create new TEST tables        *
*                               if there is a valid TESTIN deck.)     *
*                                                                     *
*                  16 - Program was not APF-authorized to make        *
*                       control block replacements.                   *
*                                                                     *
*                       Appropriate accompanying messages are         *
*                       written to the SYSPRINT DD name.              *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
*  Change Log:                                                        *
*    2016/08/07 - 1.0 - Initial version - Tested with TSO/E Version   *
*                       4.                                            *
*                                                                     *
*    2019/06/03 - 1.1 - Turned this into a batch program, to produce  *
*                       output compatible with the LOADTEST program.  *
*                       (DDNAME=TESTOUT)                              *
*                                                                     *
*    2019/06/14 - 1.2 - Added TESTIN DD name, to allow reloading of   *
*                       the TEST tables.                              *
*                                                                     *
*    2019/06/14 - 1.3 - TESTIN and TESTOUT DD names have been made    *
*                       optional.  If they are left out then their    *
*                       output is not produced.  If TESTIN is left    *
*                       out, then no changes to the TEST parameters   *
*                       are made, and the program does not have to    *
*                       be executed APF-authorized.  The SYSPRINT     *
*                       DD name always has to be there.               *
*                       Return code 16 if program not APF-authorized  *
*                       -and- the TESTIN DD is coded in the JCL.      *
*                       (I.e. you are trying to load a new table)     *
*                                                                     *
*    2019/06/18 - 1.4 - Take some steps to validate the TESTIN        *
*                       file entries.                                 *
*                       Allow the program to show the state of the    *
*                       file entries after any changes have been      *
*                       made.  DD names:  SYSPRNT2 and TESTOUT2       *
*                       correspond to SYSPRINT and TESTOUT, but       *
*                       they are created after the program has done   *
*                       any actions, when TESTIN has been coded.      *
*                       If no actions were performed, then SYSPRNT2   *
*                       and TESTOUT2 would not show changes.          *
*                                                                     *
*    2019/06/19 - 1.5 - Increased size of tables.  Removed size       *
*                       restriction of X'FF'.  They are somewhat      *
*                       bigger now.  See label WORKAREA for actual    *
*                       table size limits.  (Pretty big.)             *
*                                                                     *
*                       If the old table is corrupted, and we have    *
*                       a good TESTIN card deck, then we can build    *
*                       a new table anyway.  (Return code = 4)        *
*                                                                     *
*    2019/06/20 - 1.6 - Fixed FREEMAIN of table workarea.             *
*                       Improved comments.                            *
*                                                                     *
*    2019/06/24 - 1.7 - Alter X'24' off the new TPT to contain the    *
*                       address of the previous TPT, when we create   *
*                       a new TPT.  So the new TPT now contains the   *
*                       address of the previous TPT, and that last    *
*                       TPT can therefore be restored, using the      *
*                       EXEC card PARM=R.  In order for this to       *
*                       work, the TESTIN DD name needs to be          *
*                       present, although its contents is ignored.    *
*                       If you code //TESTIN DD DUMMY in the JCL,     *
*                       it is sufficient, and this is probably the    *
*                       best practice when coding PARM=R.             *
*                                                                     *
*                       For PARM=R (regressing the tables to a        *
*                       previous version), release the storage        *
*                       held by the previous tables.                  *
*                                                                     *
*    2019/06/26 - 1.8 - When REGRESS-ing tables with PARM=R, before   *
*                       we free the old tables' storage, we clear     *
*                       them to zeroes.  This stops us from           *
*                       "apparently" cluttering CSA.                  *
*                       When obtaining storage for new tables,        *
*                       specify OWNER=SYSTEM in the STORAGE macro,    *
*                       so ownership of the storage is not dependent  *
*                       on the invoking job.                          *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Programming Notes:                                                 *
*                                                                     *
*    The TEST command information from the IKJTSOxx member of         *
*    parmlib, is reflected in 3 control blocks:  TPT, TCT, SCT.       *
*                                                                     *
*    The TPT is pointed to by the TEST address at x'28' off           *
*    the beginning of the TPVT.  The TPT points to all the rest       *
*    of the information, as per the macro description below.          *
*                                                                     *
*                                                                     *
*             MACRO                                                   *
*             IKJTPT                                                  *
*    TPT      DSECT                         TPT Control block         *
*    TPT_ID   DS    C'TPT '                 Block id                  *
*    TPT_LENGTH DS H                        Total length of c.b.      *
*    TPT_VERS DS    C                       TPT Version               *
*             DS    C                       Reserved X'00'            *
*             DS    F                       zeros                     *
*    TPT_TCT_ENTRY DS A                     Address of TSOCMD c.b.    *
*    TPT_TCT_LENGTH DS F                    Length of TSOCMD c.b.     *
*    *                                      Length - 4 / 8 = #        *
*    TPT_SCT_ENTRY DS A                     Address of SUBCMD c.b.    *
*    TPT_SCT_LENGTH DS F                    Length of SUBCMD c.b.     *
*    *                                      Length - 4 / 16 = #       *
*             DS    3F                                                *
*    TCT_TEST DSECT                                                   *
*    TCT_ID   DS    C'TCT '                 Block id                  *
*    TCT_TSOCMD DS  CL8                     A TSOCMD                  *
*    TCT_ENTRY_END DS 0C                                              *
*    *                                      The last entry is x'40'   *
*    SCT_TEST DSECT                                                   *
*    SCT_ID   DS    C'SCT '                 Block id                  *
*    SCT_SUBCMD DS  CL8                     A SUBCMD                  *
*    SCT_PGM  DS    CL8                     A SUBCMD module name      *
*    *                                      The last entry is x'40'   *
*    SCT_ENTRY_END DS 0C                                              *
*             MEND                                                    *
*                                                                     *
*    The TEST information in storage consists of 3 control blocks:    *
*                                                                     *
*    TPT  -  General information:  Points to the TCT (names of        *
*            programs) and the SCT (names of subcommands and the      *
*            subprogram names that they invoke).  Size = x'28' (40)   *
*                                                                     *
*    TCT  -  List of programs which are callable from TEST or         *
*            TESTAUTH.   Size = variable                              *
*                                                                     *
*    SCT  -  List of subcommands (first 8 characters) and the names   *
*            of the subprograms which they call (second 8 characters) *
*                        Size = variable                              *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  ---------------------------------------------------------------  *
*    This macro is used to display hex values in a printed report.  *
*  ---------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         YREGS
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SP000    EQU   0
*
LOADTEST CSECT
LOADTEST AMODE 31
LOADTEST RMODE 31
         B     BEGINN-*(,R15)           Eyecatcher
         DC    CL19'LOADTEST VER 1.8  -'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R5,R1                    Save parm pointer.
         USING LOADTEST,R12,R11,R10
         LR    R12,R15                  Set up base registers.
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LA    R1,SAVEAREA              NEW SAVE-AREA ADDR
         ST    R1,8(,R13)               FORWARD SAVE-AREA CHAIN PTR
         ST    R13,4(,R1)               BACKWARD SAVE-AREA CHAIN PTR
         LR    R13,R1                   NEW SAVE AREA ADDRESS
         SPACE 1
* -----------------------
         LR    R1,R5                    Restore parm pointer.
         ST    R1,PARMSAVE            Store the PARM pointer into this
*                                     program, so it doesn't get lost.
* -----------------------
         MVI   BLANKS-1,X'40'           Initialize blanks.
         MVC   BLANKS,BLANKS-1          Fill field with blanks.
         MVI   FLAGSYST,X'00'           Initialize flags.
         MVI   PARMFLAG,X'00'           Initialize flags.
* -----------------------
TESTPARM DS    0H                       Get parm, if any.
         L     R1,PARMSAVE              Repoint to parms
         L     R2,0(,R1)                Point to buffer
PARM     OI    2(R2),C' '               Uppercase one character.
* -----------------------
         MVC   PARMLETR(1),2(R2)        Save the parm character.
         CLI   2(R2),C'R'               Is it "R" for Restore?
         BNE   NOREGRES                 No.
         OI    PARMFLAG,X'01'           Yes. Set flag so we know.
NOREGRES DS    0H
* -----------------------
* ----------------------------------------------------------------- *
TIOTSCAN DS    0H             Determine the presence of Optional    *
*                             DDNAMES:  TESTOUT AND TESTIN.         *
* ----->                      OPEN them when there is JCL for them. *
* ----------------------------------------------------------------- *
         L     R2,16          R2=CVT
         L     R2,0(,R2)      R2=TCB WORDS
         L     R2,4(,R2)      R2=MY TCB
         L     R2,12(,R2)     R2=TIOT
         LA    R2,24(,R2)     R2=FIRST DD ENTRY
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES
         CLC   4(8,R2),TESTIN+40    TESTIN DDNAME THERE?
         BNE   TIOTSYSN       NO
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF TESTIN   DD
         B     TIOTNEXT       CONTINUE
TIOTSYSN CLC   4(8,R2),TESTOUT+40
         BNE   TIOTNEXT
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF TESTOUT  DD
         B     TIOTNEXT
TIOTNEXT SR    R3,R3
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY
         AR    R2,R3          R2=NEXT DD ENTRY
         B     TIOTLOOP       GO CHECK IT
TIOTSEND DS    0H
* ----------------------------------------------------------------- *
DTITLE   DS    0H                              Print the report title.
         OPEN  (SYSPRINT,(OUTPUT))
         MVC   LINE,LINE-1
         MVC   LINE(13),=C'Parm Value:  '      Display coded parm.
         MVC   LINE+16(1),PARMLETR             In EBCDIC
         HEX   LINE+20,1,PARMLETR              And in Hex
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                     Display SYSPRINT title
         MVC   LINE(L'DISPLAYT),DISPLAYT
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAYU),DISPLAYU
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         TM    FLAGSYST,X'02'                  Is TESTOUT there?
         BZ    NOTESTOT                        No. Skip its stuff.
         OPEN  (TESTOUT,(OUTPUT))
         MVC   OUTREC,OUTREC-1                 Clear line
         MVC   OUTREC(20),=C'* OLD LOADTEST PARMS' TESTOUT header
         PUT   TESTOUT,OUTREC
         MVC   OUTREC,OUTREC-1                 Clear line
         MVC   OUTREC(16),=C'*---+----1----+-' Proper columns.
         PUT   TESTOUT,OUTREC
         MVC   OUTREC,OUTREC-1                 Clear line
NOTESTOT DS    0H
* ------------------------------------------------------------------ *
*              Follow addresses to Parmlib TEST values               *
* ------------------------------------------------------------------ *
         L     R2,16               Point to CVT
         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)
         L     R6,X'4C'(,R2)       Point to TPVT (Parmlib Vect Tbl)
         L     R2,X'28'(,R6)       Point to TPT control block of TEST
         XR    R3,R3               Clear work register
* ------
* ------    GET 'TEST' PARMLIB ADDRESSES AND VALUES FOR REPORTING
* ------
         ST    R2,TPTADDR          Store away TPT address
         CLC   =C'TPT',0(R2)       Is TPT eyecatcher in proper place?
         BNE   NOTTPT              No. We aren't looking at TPT.
*                                  Or else the TPT has been ruined.
*                                  Get all TPT fields........
         LH    R3,4(,R2)           Get TPT size
         STH   R3,TPTSIZE
         MVC   TPTVERS(1),6(R2)    TPT version number
         L     R3,12(,R2)
         ST    R3,TCTADDR          TCT address
         L     R3,16(,R2)
         ST    R3,TCTSIZE          TCT size
         LR    R4,R3               Copy size value
         S     R4,=F'4'            Subtract 4
         SRL   R4,3                Divide by 8 (size of TCT entry)
         BCTR  R4,0                Subtract 1 because of blank entry
         ST    R4,TCTENTR          Save # of TCT entries - actual
         L     R3,20(,R2)
         ST    R3,SCTADDR          SCT address
         L     R3,24(,R2)
         ST    R3,SCTSIZE          SCT size
         LR    R4,R3               Copy size value
         S     R4,=F'4'            Subtract 4
         SRL   R4,4                Divide by 16 (size of SCT entry)
         BCTR  R4,0                Subtract 1 because of blank entry
         ST    R4,SCTENTR          Save # of SCT entries - actual
         L     R3,36(,R2)          Look at our new "old TPT field"
         ST    R3,OLDTPT           Store its address away
         MVC   OLDTPTO,OLDTPT      Preserve it because OLDTPT altered
         LTR   R3,R3               Zero, meaning we didn't make it?
         BNZ   GOTOLTPT            No. This TPT is restorable.
         OI    PARMFLAG,X'02'      Yes. Show not restorable.
GOTOLTPT DS    0H
         B     CONTTPT             Continue with Control Block Display
NOTTPT   DS    0H                  TPT control block appears invalid.
         MVC   LINE,LINE-1         Issue message and RC = 8.
         MVC   DISPLAY1,BLANKS                Error msg if not TPT.
         MVC   DISPLAY1(L'TPTBAD),TPTBAD      Show TPT was bad
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         TM    FLAGSYST,X'01'       Is TESTIN available?
         BZ    BADTPT1              No. Tell em TPT is bad
         OI    FLAGSYST,X'C0'       Return code = 4   8+4
         B     TSOINIT              Build a new table anyway.
BADTPT1  DS    0H
         OI    FLAGSYST,X'80'       Indicate return code change.
         LA    R2,8                 RC = 8
         B     RETURN
CONTTPT  DS    0H                         Now display all TPT fields.
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,TPTADDR           Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,TPTSIZE           Only a halfword field
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT VERSION'    Display entry title
         HEX   DISPLAY1+16,1,TPTVERS           Single byte field
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,TCTADDR           Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,TCTSIZE+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT ENTRIES'    Display entry title
         HEX   DISPLAY1+16,2,TCTENTR+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,SCTADDR           Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,SCTSIZE+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT ENTRIES'    Display entry title
         HEX   DISPLAY1+16,2,SCTENTR+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         CLC   OLDTPT,=F'0'                    IBM copy of TPT?
         BE    NOOLDTPT                        Yes. Don't show line.
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'OLD TPT ADR'    Display entry title
         HEX   DISPLAY1+16,4,OLDTPT            Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
NOOLDTPT DS    0H
DSPLYTSO DS    0H                               Title for TSO cmds
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'TSOCMDT),TSOCMDT      Display title
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'PROGRMT),PROGRMT      Display title
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
TSOINIT  DS    0H
         L     R3,TCTADDR                   Set up for TSOCMD display
         L     R4,TCTSIZE
         CLC   =C'TCT',0(R3)                Starts with TCT ?
         BE    TSOSTART                     Yes. Continue.
         MVC   DISPLAY1,BLANKS              No.  Error. RC = 8.
         MVC   DISPLAY1(L'TCTBAD),TCTBAD    Send appropriate message
         MVC   LINE,LINE-1                  Show TCT was bad.
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         TM    FLAGSYST,X'01'            Is TESTIN available?
         BZ    BADTCT1                   No. Tell em TCT is bad
         OI    FLAGSYST,X'C0'            Return code = 4  8+4
         B     SUBINIT                   Build a new table anyway.
BADTCT1  DS    0H
         OI    FLAGSYST,X'80'            Indicate return code change.
         LA    R2,8                      RC = 8
         B     RETURN                       Go straight out.
TSOSTART DS    0H
         TM    FLAGSYST,X'02'               Putting out TESTOUT?
         BZ    NOOUT01                      No.
         MVC   OUTREC,OUTREC-1              Yes.
         MVC   OUTREC(7),=C'--TCT--'        Put out TCT header.
         PUT   TESTOUT,OUTREC
NOOUT01  DS    0H
         LA    R3,4(,R3)                    Point to pgm table
TSOLOOP  DS    0H
         CLC   =C'        ',0(R3)           End of table?
         BE    DSPLYSUB
         MVC   DISPLAY1,BLANKS              Blank display line
         MVC   DISPLAY1+8(8),0(R3)          Show TSOCMD
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         TM    FLAGSYST,X'02'               Putting out TESTOUT?
         BZ    NOOUT02                      No.
         MVC   OUTREC,OUTREC-1              Yes.
         MVC   OUTREC(8),0(R3)              Write out TCT entry.
         PUT   TESTOUT,OUTREC
NOOUT02  DS    0H
         LA    R3,8(,R3)                    Next entry
         B     TSOLOOP
*                                           PUT IN LENGTH CHECK LATER
DSPLYSUB DS    0H
         MVC   DISPLAY1,BLANKS              Blank display line
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS              Blank display line
         MVC   DISPLAY1(L'SUBCMDT),SUBCMDT
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         MVC   DISPLAY1,BLANKS              Blank display line
         MVC   DISPLAY1(L'COMMANT),COMMANT  Display title
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
SUBINIT  DS    0H
         L     R3,SCTADDR                   Set up for SUBCMD display
         L     R4,SCTSIZE
         CLC   =C'SCT',0(R3)                Starts with SCT ?
         BE    SUBSTART                     Yes. Continue.
         MVC   DISPLAY1,BLANKS              No.  Error. RC = 8.
         MVC   DISPLAY1(L'SCTBAD),SCTBAD    Send appropriate message
         MVC   LINE,LINE-1                  Show SCT was bad.
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         TM    FLAGSYST,X'01'               Is TESTIN available?
         BZ    BADSCT1                      No. Tell em SCT is bad
         OI    FLAGSYST,X'C0'               Return code = 4  8+4
         B     GETWORK                      Build a new table anyway.
BADSCT1  DS    0H
         OI    FLAGSYST,X'80'               Indicate return code change
         LA    R2,8                         RC = 8
         B     RETURN                       Go straight out.
SUBSTART DS    0H
         LA    R3,4(,R3)                    Point to subcmd table
         TM    FLAGSYST,X'02'               Putting out TESTOUT?
         BZ    NOOUT03                      No.
         MVC   OUTREC,OUTREC-1              Yes.
         MVC   OUTREC(7),=C'--SCT--'        Put out SCT header.
         PUT   TESTOUT,OUTREC
NOOUT03  DS    0H
SUBLOOP  DS    0H
         CLC   =C'        ',0(R3)           End of table?
         BE    GETWORK
         MVC   DISPLAY1,BLANKS              Blank display line
         MVC   DISPLAY1+2(8),0(R3)          Show SUBCMD
         MVC   DISPLAY1+15(8),8(R3)         Show module name
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRINT,LINE
         TM    FLAGSYST,X'02'               Putting out TESTOUT?
         BZ    NOOUT04                      No.
         MVC   OUTREC,OUTREC-1              Yes.
         MVC   OUTREC(8),0(R3)              Show SUBCMD
         MVC   OUTREC+8(8),8(R3)            Show module name
         PUT   TESTOUT,OUTREC               Write TCT entry.
         MVC   OUTREC,OUTREC-1
NOOUT04  DS    0H
         LA    R3,16(,R3)                   Next entry
         B     SUBLOOP                      Go on until EOT.
* ------------------------------------------------------------------ *
*   Is the TESTIN DD name present?  This indicates that we should    *
*   create a new TPT, TCT, and SCT.  Then re-point to the new TPT    *
*   address in the TPVT.  This step needs APF-authorization.         *
* ------------------------------------------------------------------ *
GETWORK  DS    0H      Get a workarea to format new TCT and SCT.     *
* ------------------------------------------------------------------ *
         TM    FLAGSYST,X'01'          Was a TESTIN DDNAME in JCL?
         BZ    NOTESTIN                No. Not creating a new TPT.
         ST    R2,SAVER2A              Save R2
         LA    R2,WORKSIZE             TCT and SCT.
         GETMAIN R,LV=(R2)
         ST    R1,SAVEGET              Save address of GETMAINed
         L     R2,SAVER2A              Restore R2
         LR    R5,R1                   Point to gotten WORKTCT.
         USING WORKAREA,R5
         ST    R5,WRKTCT               Address of first section.
         LA    R1,WORKSCT-WORKAREA     Second section, WORKSCT.
         LA    R6,0(R1,R5)             Point to WORKSCT.
         ST    R6,WRKSCT               Address of second section.
* ------------------------------------------------------------------ *
DOTESTIN DS    0H                      Measure sizes, create tables. *
* ------------------------------------------------------------------ *
         OPEN  (TESTIN,(INPUT))
         LA    R7,TSTINREC             Point to input record
         LA    R8,4                    Size of TCT header
         LA    R9,4                    Size of SCT header
         MVC   0(4,R5),=C'TCT '        MOVE TO
         MVC   0(4,R6),=C'SCT '           STORAGE AREAS
         LA    R5,4(,R5)               Bump past TCT header
         LA    R6,4(,R6)               Bump past SCT header
TESTNLUP DS    0H                      Begin in column 1.
         GET   TESTIN,TSTINREC
         CLI   0(R7),C'*'              Look for comment record
         BE    TESTNLUP                If so get another
         CLI   0(R7),C' '              Is first char blank?
         BE    TESTNLUP                Yes, then ignore record.
         CLC   0(8,R7),=CL8' '         Blank entry?
         BE    TESTNLUP                Skip card
TESTNTYP DS    0H
         CLC   0(7,R7),=C'--TCT--'     Start of TCT entry?
         BE    DOTCT                   Do it.
         CLC   0(7,R7),=C'--SCT--'     Start of SCT entry?
         BE    DOSCT                   Do it.
DOTCT    DS    0H
         GET   TESTIN,TSTINREC         Get new record assuming TCT.
         CLI   0(R7),C'*'              Is it a comment also?
         BE    TESTNTYP                Then try again
         CLI   0(R7),C' '              Is first char blank?
         BE    TESTNTYP                Yes, then ignore record.
         CLC   0(8,R7),=CL8' '         Blank entry?
         BE    TESTNTYP                Skip card
         CLC   0(7,R7),=C'--SCT--'     Is it an SCT header?
         BE    DOSCT                   Then assume SCT now.
         MVC   0(8,R5),0(R7)           Move entry to work area.
         TR    0(8,R5),TRTBLUP         Make sure letters are printable
         LA    R8,8(,R8)               It is TCT entry, add 8.
         LA    R5,8(,R5)               Bump past data in table
         B     DOTCT                   Loop
DOSCT    DS    0H
         GET   TESTIN,TSTINREC         Get new record assuming SCT.
         CLI   0(R7),C'*'              Is it a comment also?
         BE    TESTNTYP                Then try again
         CLI   0(R7),C' '              Is first character blank?
         BE    TESTNTYP                Yes, then ignore record.
         CLC   0(8,R7),=CL8' '         Blank entry?
         BE    TESTNTYP                Skip card
         CLC   0(7,R7),=C'--TCT--'     Is it an TCT header?
         BE    DOTCT                   Then assume TCT now.
         MVC   0(16,R6),0(R7)          Move entry to work area.
         TR    0(16,R6),TRTBLUP        Make sure letters are printable
         LA    R9,16(,R9)              It is SCT entry, add 16.
         LA    R6,16(,R6)              Bump past data in table
         B     DOSCT                   Loop
TESTNEND DS    0H
         CLOSE (TESTIN)
         LA    R8,8(,R8)               Extra storage for delimiter
         MVC   0(8,R5),=CL8' '
         ST    R8,SIZTCT               Size of the new TCT
         LA    R9,16(,R9)              Extra storage for delimiter
         MVC   0(16,R6),=CL16' '
         ST    R9,SIZSCT               Size of the new SCT
         TM    PARMFLAG,X'01'          When regressing, we ignore the
         BO    REGRES00                  TESTIN generated values.
         MVC   LINE,LINE-1             Make report of TCT SCT sizes
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1             Make report of TCT SCT sizes
         MVC   LINE(16),=C'Size of new TCT:'     in hex.
         HEX   LINE+19,2,SIZTCT+2
         MVC   LINE+26(16),=C'Size of new SCT:'
         HEX   LINE+45,2,SIZSCT+2      Make report of TCT SCT sizes
         PUT   SYSPRINT,LINE
REGRES00 DS    0H
         MVC   LINE,LINE-1             Blank line for separator.
         PUT   SYSPRINT,LINE
* ------------------------------------------------------------------ *
*      CREATE A NEW TPT, TCT, AND SCT - NEEDS APF-AUTHORIZATION      *
* ------------------------------------------------------------------ *
NEWTEST  DS    0H
         TESTAUTH FCTN=1               ARE WE AUTHORIZED
         LTR   R15,R15
         BNZ   NOTAUTH                 IF NOT SEND MESSAGE
         MODESET KEY=ZERO,MODE=SUP
* ------------------------------------------------------------------ *
*            Get storage for all 3 control block copies.             *
* ------------------------------------------------------------------ *
         L     R1,40                   SIZE OF TPT
         ST    R1,SIZTPT
         STORAGE OBTAIN,SP=241,KEY=0,LOC=31,LENGTH=SIZTPT,             X
               OWNER=SYSTEM
         ST    R1,STORTPT
         STORAGE OBTAIN,SP=241,KEY=0,LOC=31,LENGTH=SIZTCT,             X
               OWNER=SYSTEM
         ST    R1,STORTCT
         STORAGE OBTAIN,SP=241,KEY=0,LOC=31,LENGTH=SIZSCT,             X
               OWNER=SYSTEM
         ST    R1,STORSCT
* ------------------------------------------------------------------ *
*               Make a new TPT first.                                *
* ------------------------------------------------------------------ *
MAKETPT  DS    0H                      First make the new TPT
         STM   R4,R9,SAVER4T9          Save all these regs
         ST    R8,SIZTCT               R8 still has the size of TCT
         ST    R9,SIZSCT               R9 still has the size of SCT
         L     R1,STORTPT              Point to the storage
         MVC   0(40,R1),ZEROES         Zero it out, start the fields
         MVC   0(4,R1),=CL4'TPT'       Eyecatcher first
         MVC   4(2,R1),=X'0028'        TPT length
         MVC   6(2,R1),=X'0100'        TPT version OR'ed with X'C0'
         L     R8,STORTCT              Insert address of TCT
         L     R6,WRKTCT               Address of built new TCT
         L     R9,SIZTCT               Size of built new TCT
         LR    R7,R9                   Propagate size to other reg
         MVCL  R8,R6                   Move the TCT data
         S     R8,SIZTCT               Re-point to location of data
         ST    R8,12(,R1)              Put its address in the TPT
         L     R7,SIZTCT               Insert length of TCT
         ST    R7,16(,R1)                into the new TPT.
         L     R8,STORSCT              Insert address of SCT
         L     R6,WRKSCT               Address of built new SCT
         L     R9,SIZSCT               Size of built new SCT
         LR    R7,R9                   Propagate size to other reg
         MVCL  R8,R6                   Move the SCT data
         S     R8,SIZSCT               Re-point to location of data
         ST    R8,20(,R1)              Put its address in the TPT
         L     R7,SIZSCT               Insert length of SCT
         ST    R7,24(,R1)                into the new TPT.
         L     R7,TPTADDR              Address of previous TPT.
         ST    R7,36(,R1)              Put it at end of new TPT.
         ST    R7,OLDTPT
* ------------------------------------------------------------------ *
*         The new TPT is now constructed.  Pointed to by R1.         *
* ------------------------------------------------------------------ *
MAKENEW  DS    0H           Now replace the TPVT pointer to the TPT.
         L     R2,16               Point to CVT
         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)
         L     R2,X'4C'(,R2)       Point to TPVT (Parmlib Vect Tbl)
         LA    R3,X'28'(,R2)       Point R3 to TPT address in TPVT
         TM    PARMFLAG,X'01'      Are we regressing to previous TPT?
         BO    REGRESIT            Yes. Ignore new TPT and regress.
         L     R2,STORTPT          No. Load addr of new GETMAINed TPT
         ST    R2,0(,R3)           Replace TPT address in TPVT
         B     BACKPROB            Back to problem state.
* ------------------------------------------------------------------ *
*   If PARM=R in the EXEC card of the JCL, then we regress the TPT   *
*   to a previous value, if one exists.  That is, if our program     *
*   created a new TPT, it preserves the value of the old TPT in      *
*   location X'24' off the new TPT.  When IBM creates a TPT, there   *
*   are zeroes in that location, and that is the first TPT created,  *
*   so of course, we can't restore to a "previous TPT".              *
* ------------------------------------------------------------------ *
REGRESIT DS    0H                  Proceed with regression to previous
         L     R4,OLDTPTO          Plug in previous TPT address.
         LTR   R4,R4               Make sure it isn't zero (via IBM)
         BZ    NORGRS01            If it is zero, don't go there.
         CLC   =C'TPT ',0(R4)      Not zero, check if valid TPT.
         BNE   NORGRS02            Not, then don't regress.
         ST    R4,0(,R3)           Replace TPT address in TPVT
* ------------------------------------------------------------------ *
*   Regression done. Now free the storage taken by the previous TPT. *
* ------------------------------------------------------------------ *
         L     R4,OLDTPT           Address of storage to be freed.
         ST    R4,TPTFADDR         Store it into variable for routine.
         BAL   R9,FREESTOR         Free the SCT, TCT, then the TPT.
         B     BACKPROB            Back to problem state.
* ------------------------------------------------------------------ *
NORGRS01 DS    0H                  Prev addr (made by IBM) is zero.
         OI    PARMFLAG,X'02'      Show not restorable.
         OI    FLAGSYST,X'C0'      Make RC = 4.
         MVC   LINE,LINE-1
         MVC   LINE(43),=C'Cannot regress because no previous address.'
         PUT   SYSPRINT,LINE
         B     NORGRS03
NORGRS02 DS    0H                  Prev addr does not point to a TPT.
         OI    PARMFLAG,X'02'      Show not restorable.
         OI    FLAGSYST,X'C0'      Make RC = 4.
         MVC   LINE,LINE-1
         MVC   LINE(36),=C'Previous address is not a valid TPT.'
         PUT   SYSPRINT,LINE
         B     NORGRS03
NORGRS03 DS    0H
* ------------------------------------------------------------------ *
BACKPROB DS    0H                      Back to problem state.
         LM    R4,R9,SAVER4T9          Restore all the saved regs.
         MODESET KEY=NZERO,MODE=PROB
         CLOSE (TESTIN)
         TM    PARMFLAG,X'01'      Are we regressing?
         BO    REGRES01            Yes. Skip table change messages.
         TM    FLAGSYST,X'40'      RC = 4? We're making a new table.
         BO    TABLNEWM            Say 'created' and not 'changed'.
         MVC   LINE,LINE-1         Report successful table replacement
         MVC   LINE(43),=C'TEST tables have been changed successfully.'
         B     TABLNGO
TABLNEWM DS    0H
         MVC   LINE,LINE-1         Report successful table creation
         MVC   LINE(43),=C'TEST tables have been created successfully.'
TABLNGO  DS    0H
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC  LINE(44),=C'Use the SYSPRNT2 DD name to see the changes.'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC  LINE(52),=C'Use the TESTOUT2 DD name to get the new TESTIx
               N deck.'
         PUT   SYSPRINT,LINE
         B     NOTESTIN
REGRES01 DS    0H
         TM    PARMFLAG,X'02'
         BZ    REGRESA1
         MVC   LINE,LINE-1
         MVC   LINE(36),=C'TEST tables have NOT been regressed.'
         PUT   SYSPRINT,LINE
         B     REGRES02
REGRESA1 DS    0H
         MVC   LINE,LINE-1
         MVC   LINE(32),=C'TEST tables have been regressed.'
         PUT   SYSPRINT,LINE
REGRES02 DS    0H
         MVC   LINE,LINE-1
         MVC   LINE(32),=C'TESTIN values have been ignored.'
         PUT   SYSPRINT,LINE
NOTESTIN DS    0H                      Post processing reports.
         L     R15,=V(LOADTN)          Address of formatting program.
         BALR  R14,R15                 Go there and post process.
* ------------------------------------------------------------------ *
*                     GENERAL RETURN ROUTINE                         *
* ------------------------------------------------------------------ *
RETURN   DS    0H                   Program exit.
         TM    FLAGSYST,X'40'       RC = 4?
         BZ    RNOT4                No.
         LA    R2,4                 Yes, set it in R2.
RNOT4    DS    0H
         TM    FLAGSYST,X'02'       Is TESTOUT DD present?
         BZ    NOOUT05              No. So don't close it.
         CLOSE (TESTOUT)
NOOUT05  DS    0H                   FREEMAIN the work setup area.
         TM    FLAGSYST,X'01'       Is TESTIN DD present?
         BZ    NOTESTI0             No. No WORKAREA, no FREEMAIN.
         L     R1,SAVEGET           Address of gotten storage.
         LA    R0,WORKSIZE          Size of storage for FREEMAIN
         FREEMAIN R,A=(1),LV=(0)
NOTESTI0 DS    0H                      Post processing reports.
         L     R13,SAVEAREA+4       Reload caller's savearea pointer.
RETURNCD DS    0H                   No more printing required
         CLOSE (SYSPRINT)
         LA    R15,0                Preload RC = 0
         TM    FLAGSYST,X'80'       Are we changing the return code?
         BZ    NOSETRC              No. Ignore R2.
         LR    R15,R2               Restore RC into R15
NOSETRC  DS    0H
         ST    R15,16(,R13)         Put RC into passed save area.
         L     R14,12(,R13)         Restore the rest of the regs.
         LM    R0,R12,20(R13)
RETOUT   DS    0H
         BR    R14                  RETURN TO CALLER
* ------------------------------------------------------------------ *
* TABLE CHANGE REQUESTED (TESTIN DD PRESENT) BUT NOT APF-AUTHORIZED. *
* ------------------------------------------------------------------ *
NOTAUTH  DS    0H
         MVC   LINE,LINE-1
         MVC   LINE(37),=C'This program needs APF-authorization.'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINE(40),=C'No changes to the TEST tables were made.'
         PUT   SYSPRINT,LINE
         OI    FLAGSYST,X'80'       Indicate return code change.
         LA    R2,16                RC = 16
         B     RETURN
* ------------------------------------------------------------------ *
*    SUBROUTINE TO FREE STORAGE OCCUPIED BY THE TCT, SCT, AND TPT,   *
*    GIVEN THE ADDRESS OF THE TPT TO BEGIN WITH.  THE TPT CONTAINS   *
*    ALL THE INFORMATION NECESSARY TO FREE ITS OWN STORAGE, IF IT    *
*    IS PROPERLY FORMATTED.  UPON ENTRY, TPTFADDR POINTS TO THE TPT  *
*    ADDRESS THAT IS TO BE FREED.                                    *
*            (THIS SUBROUTINE NEEDS APF-AUTHORIZATION.)              *
* ------------------------------------------------------------------ *
FREESTOR DS    0H                      Procedure to free TPT, TCT, SCT.
*                                      But first clear them to zeroes.
         L     R4,TPTFADDR             TPT address to free components.
         MODESET KEY=ZERO,MODE=SUP
         STM   R4,R9,SAVER4T9          Save all these registers.
         CLC   =C'TPT ',0(R4)          Is storage formatted as TPT?
         BNE   FREES001                No. Send messages.
         LA    R5,40                   Length of TPT is 40 (X'28')
         ST    R5,TPTFSIZE             Store TPT length
         L     R5,12(,R4)              Get address of the TCT
         ST    R5,TCTFADDR             Store in a variable.
         CLC   =C'TCT ',0(R5)          Is storage formatted as TCT?
         BNE   FREES002                No. Send messages.
         L     R5,16(,R4)              Get the size of the TCT
         ST    R5,TCTFSIZE             Store it in a variable
         L     R5,20(,R4)              Get address of the SCT
         ST    R5,SCTFADDR             Store it in a variable
         CLC   =C'SCT ',0(R5)          Is storage formatted as SCT?
         BNE   FREES003                No. Send messages.
         L     R5,24(,R4)              Get the size of the SCT
         ST    R5,SCTFSIZE             Store it as a variable
FREESCT  DS    0H                      Now clear & free the SCT first.
         L     R8,SCTFADDR             Address of the SCT to clear
         L     R9,SCTFSIZE             Size of SCT to clear
         SLR   R7,R7                   Zero pad, and "from" length
         MVCL  R8,R6                   Clear the SCT data
         L     R6,SCTFADDR             Address of the SCT
         L     R7,SCTFSIZE             Size of the SCT
         STORAGE RELEASE,ADDR=(R6),LENGTH=(R7),SP=241
FREETCT  DS    0H                      Now clear & free the TCT second.
         L     R8,TCTFADDR             Address of the TCT to clear
         L     R9,TCTFSIZE             Size of TCT to clear
         SLR   R7,R7                   Zero pad, and "from" length
         MVCL  R8,R6                   Clear the TCT data
         L     R6,TCTFADDR             Address of the TCT
         L     R7,TCTFSIZE             Size of the TCT
         STORAGE RELEASE,ADDR=(R6),LENGTH=(R7),SP=241
FREETPT  DS    0H                      Finally clear & free the TPT.
         L     R8,TPTFADDR             Address of the TPT to clear
         L     R9,TPTFSIZE             Size of TPT to clear
         SLR   R7,R7                   Zero pad, and "from" length
         MVCL  R8,R6                   Clear the TPT data
         L     R6,TPTFADDR             Address of the TPT
         L     R7,TPTFSIZE             Size of the TPT
         STORAGE RELEASE,ADDR=(R6),LENGTH=(R7),SP=241
         B     FREESEND                All is well, exit the procedure
FREES001 DS    0H                      TPT free error messages
         MVC   LINE,LINE-1
         MVC   LINE(35),=C'Storage was not formatted as a TPT.'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINE(26),=C'TPT storage was not freed.'
         PUT   SYSPRINT,LINE
         B     FREESEND
FREES002 DS    0H                      TCT free error messages
         MVC   LINE,LINE-1
         MVC   LINE(35),=C'Storage was not formatted as a TCT.'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINE(26),=C'TCT storage was not freed.'
         PUT   SYSPRINT,LINE
         B     FREESEND
FREES003 DS    0H                      SCT free error messages
         MVC   LINE,LINE-1
         MVC   LINE(35),=C'Storage was not formatted as a SCT.'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINE(26),=C'SCT storage was not freed.'
         PUT   SYSPRINT,LINE
         B     FREESEND
FREESEND DS    0H
         LM    R4,R9,SAVER4T9          Restore all these registers.
         MODESET KEY=NZERO,MODE=PROB
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*           D  A  T  A     A  R  E  A  S                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
SAVEAREA DS    9D
ZEROES   DC    40X'00'
SAVER2A  DS    F
SAVER9A  DS    F
SAVER4T9 DS    6F                   Save a bunch of registers
SAVEGET  DS    F                    Address of gotten workarea
SIZTPT   DS    F                    Size of TPT (X'28')
SIZTCT   DS    F                    Measured size if TESTIN
SIZSCT   DS    F                    Measured size if TESTIN
STORTPT  DS    F                    New TPT address
STORTCT  DS    F                    New TCT address
STORSCT  DS    F                    New SCT address
NTPTADDR DS    F                    Address for new TPT
NTCTADDR DS    F                    Address for new TCT
NSCTADDR DS    F                    Address for new SCT
TPTFADDR DS    F                    Address of a TPT to free storage
TCTFADDR DS    F                    Address of TCT to free storage
SCTFADDR DS    F                    Address of SCT to free storage
TPTFSIZE DS    F                    Size of TPT to free
TCTFSIZE DS    F                    Size of TCT to free
SCTFSIZE DS    F                    Size of SCT to free
CVDAREA  DC    D'0'
         DC    CL3'   '
OLDPATT  DC    X'40202020202020202120'   Pattern for old OUTLIM value
         DC    CL3'   '
OLDFLAG  DC    X'00'
         DC    CL3'   '
BLANKS   DC    CL145' '
         DC    CL1' '
LINE     DC    CL133' '
         DC    CL1' '
OUTREC   DC    CL80' '
TSTINREC DC    CL80' '
DISPLAY1 DC    CL64'                                              '
DISPLAYT DC    C'Old TEST PARMLIB IKJTSOxx Parameter Values'
DISPLAYU DC    C'--- ---- ------- -------- --------- ------'
TSOCMDT  DC    C'---- TSOCMD PROGRAMS ----'
PROGRMT  DC    C'      Program Name       '
SUBCMDT  DC    C'----   SUBCOMMANDS   ----'
COMMANT  DC    C' Subcommand     Module   '
TPTBAD   DC    C'   TPT not pointed to    '
TCTBAD   DC    C'   TCT not pointed to    '
SCTBAD   DC    C'   SCT not pointed to    '
FLAGSYST DC    X'00'                Our grand old flag. GENERAL.
*              X'80'                Return code is to be changed.
*              X'40'                Return code is 4.
*              X'01'                TESTIN  DD is present in JCL.
*              X'02'                TESTOUT DD is present in JCL.
PARMFLAG DC    X'00'                REGRESSION FLAGS.
*              X'01'                Regress
*              X'02'                Can't regress because TPT was
*                                     made by the operating system,
*                                     not by us. Or is corrupted.
PARMLETR DC    C' '                 Store PARM letter for display.
PARMSAVE DC    F'0'                 Save original contents of Reg 1.
OLDTPT   DC    F'0'                 Old TPT address.
OLDTPTO  DC    F'0'                 Preserved old TPT address.
TPTADDR  DC    F'0'                 Old TPT address from TPVT
TPTSIZE  DC    H'0'                 TPT size from TPT
TPTVERS  DC    X'0'                 TPT version number
TCTADDR  DC    F'0'                 TCT address in TPT
TCTSIZE  DC    F'0'                 TCT size in TPT
TCTENTR  DC    F'0'                 Number of TCT entries for report
SCTADDR  DC    F'0'                 SCT address in TPT
SCTSIZE  DC    F'0'                 SCT size in TPT
SCTENTR  DC    F'0'                 Number of SCT entries for report
WRKTCT   DC    F'0'                 Formatted new TCT if TESTIN there
WRKSCT   DC    F'0'                 Formatted new SCT if TESTIN there
TESTIN   DCB   MACRF=GM,DDNAME=TESTIN,DSORG=PS,RECFM=FB,LRECL=80,      X
               EODAD=TESTNEND
TESTOUT  DCB   MACRF=PM,DDNAME=TESTOUT,DSORG=PS,RECFM=FB,LRECL=80
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FB
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*            Table to Remove Unprintables               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLUP  DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'404040404040404040404A4B4C4D4E4F'
         DC    XL16'504040404040404040405A5B5C5D5E5F'
         DC    XL16'606140404040404040406A6B6C6D6E6F'
         DC    XL16'404040404040404040407A7B7C7D7E7F'
         DC    XL16'40818283848586878889404040404040'
         DC    XL16'40919293949596979899404040404040'
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    Other Translate Tables -  Relics from a previous program.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     Only accept Numeric               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLN   DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                 Only accept Alpha, and Uppercase      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTBLA   DS    0D
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'40404040404040404040404040404040'
         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'
         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'40404040404040404040404040404040'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - *
WORKAREA DSECT
         DS    0D          Work area for formatting new TCT and SCT
WORKTCT  DS    1216C       New TCT work area
WORKSCT  DS    2424C       New SCT work area
         DS    0D
WORKSIZE EQU   *-WORKAREA
LOADTEST CSECT
         END
LOADTN   TITLE 'LOADTN - DISPLAY TSO TEST FIELDS'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is meant to be run as a batch        *
*                   program, not APF authorized, because it is        *
*                   only for the purpose of displaying the incore     *
*                   IKJTSOxx PARMLIB member values for the TEST       *
*                   keyword.                                          *
*                                                                     *
*                   As presented here, LOADTN is a subprogram of      *
*                   the LOADTEST program, although it is fully        *
*                   functional as a reporting program when it is      *
*                   assembled separately.                             *
*                                                                     *
*                   LOADTN is called by LOADTEST to report on the     *
*                   status of the TEST control blocks, after the      *
*                   LOADTEST processing is completely finished.       *
*                                                                     *
*                   Both SYSPRNT2 and TESTOUT2 DD names are           *
*                   optional.                                         *
*                                                                     *
*  JCL:    (when this program is assembled separately)                *
*                                                                     *
*  //SHOWTEST JOB ,'MY JOBCARD',CLASS=A,                              *
*  //    MSGCLASS=X,NOTIFY=&SYSUID                                    *
*  //*                                                                *
*  //LOADTN  EXEC PGM=LOADTN                                          *
*  //STEPLIB  DD  DISP=SHR,DSN=MY.LOAD.LIBRARY                        *
*  //SYSPRNT2 DD  SYSOUT=*                                            *
*  //TESTOUT2 DD  SYSOUT=*      (LRECL=80 DATASET OR SYSOUT)          *
*                                                                     *
*                                                                     *
*       Function:   To display values of the TEST IKJTSOxx            *
*                   PARMLIB settings as they are represented          *
*                   internally in the TPT, TCT, SCT control           *
*                   blocks.                                           *
*                                                                     *
*          Author:  Sam Golob               Version:   1.1            *
*                                                                     *
*            Date:  Jun 03, 2019                                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Change Log:                                                        *
*    2016/08/07 - 1.0 - Initial version - Tested with TSO/E Version   *
*                       4.                                            *
*                                                                     *
*    2019/06/03 - 1.1 - Turned this into a batch program, to produce  *
*                       output compatible with the LOADTEST program.  *
*                       (DDNAME=TESTOUT2).  Converted to subprogram.  *
*                       Changed DD names to SYSPRNT2 and TESTOUT2.    *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Programming Notes:                                                 *
*                                                                     *
*    The TEST command information from the IKJTSOxx member of         *
*    parmlib, is reflected in 3 control blocks:  TPT, TCT, SCT.       *
*                                                                     *
*    The TPT is pointed to by the TEST address at x'28' off           *
*    the beginning of the TPVT.  The TPT points to all the rest       *
*    of the information, as per the macro description below.          *
*                                                                     *
*                                                                     *
*             MACRO                                                   *
*             IKJTPT                                                  *
*    TPT      DSECT                         TPT Control block         *
*    TPT_ID   DS    C'TPT '                 Block id                  *
*    TPT_LENGTH DS H                        Total length of c.b.      *
*    TPT_VERS DS    C                       TPT Version               *
*             DS    C                       Reserved X'00'            *
*             DS    F                       zeros                     *
*    TPT_TCT_ENTRY DS A                     Address of TSOCMD c.b.    *
*    TPT_TCT_LENGTH DS F                    Length of TSOCMD c.b.     *
*    *                                      Length - 4 / 8 = #        *
*    TPT_SCT_ENTRY DS A                     Address of SUBCMD c.b.    *
*    TPT_SCT_LENGTH DS F                    Length of SUBCMD c.b.     *
*    *                                      Length - 4 / 16 = #       *
*             DS    3F                                                *
*    TCT_TEST DSECT                                                   *
*    TCT_ID   DS    C'TCT '                 Block id                  *
*    TCT_TSOCMD DS  CL8                     A TSOCMD                  *
*    TCT_ENTRY_END DS 0C                                              *
*    *                                      The last entry is x'40'   *
*    SCT_TEST DSECT                                                   *
*    SCT_ID   DS    C'SCT '                 Block id                  *
*    SCT_SUBCMD DS  CL8                     A SUBCMD                  *
*    SCT_PGM  DS    CL8                     A SUBCMD module name      *
*    *                                      The last entry is x'40'   *
*    SCT_ENTRY_END DS 0C                                              *
*             MEND                                                    *
*                                                                     *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  ---------------------------------------------------------------  *
*    This macro is used to display hex values in a printed report.
*  ---------------------------------------------------------------  *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         YREGS
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
SP000    EQU   0
         SPACE 1
LOADTN   CSECT
LOADTN   AMODE 31
LOADTN   RMODE 24
         B     BEGINN-*(,R15)           Eyecatcher
         DC    CL15'LOADTN VER 1.1 -'
         DC    CL16' &SYSDATE &SYSTIME '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R5,R1                    SAVE CPPL POINTER
         USING LOADTN,R12,R11,R10
         LR    R12,R15                  Set up base registers.
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LA    R1,SAVEAREA              NEW SAVE-AREA ADDR
         ST    R1,8(,R13)               FORWARD SAVE-AREA CHAIN PTR
         ST    R13,4(,R1)               BACKWARD SAVE-AREA CHAIN PTR
         LR    R13,R1                   NEW SAVE AREA ADDRESS
         SPACE 1
* -----------------------
         LR    R1,R5                    RESTORE CPPL POINTER
         ST    R1,PARMSAVE         Store the CPPL pointer into this
*                                  program, so it doesn't get lost.
* -----------------------
         MVI   BLANKS-1,X'40'           Initialize blanks.
         MVC   BLANKS,BLANKS-1
         MVI   FLAGSYST,X'00'
* ----------------------------------------------------------------- *
TIOTSCAN DS    0H             Determine the presence of Optional
*                             DDNAMES:  TESTOUT2 AND SYSPRNT2.
* ----->                      OPEN them when there is JCL for them.
* ----------------------------------------------------------------- *
         L     R2,16          R2=CVT
         L     R2,0(,R2)      R2=TCB WORDS
         L     R2,4(,R2)      R2=MY TCB
         L     R2,12(,R2)     R2=TIOT
         LA    R2,24(,R2)     R2=FIRST DD ENTRY
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES
         CLC   4(8,R2),SYSPRNT2+40  SYSPRNT2 DDNAME THERE?
         BNE   TIOTSYSN       NO
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF SYSPRNT2 DD
         B     TIOTNEXT       CONTINUE
TIOTSYSN CLC   4(8,R2),TESTOUT2+40
         BNE   TIOTNEXT
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF TESTOUT2 DD
         B     TIOTNEXT
TIOTNEXT SR    R3,R3
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY
         AR    R2,R3          R2=NEXT DD ENTRY
         B     TIOTLOOP       GO CHECK IT
TIOTSEND DS    0H
* ----------------------------------------------------------------- *
* -----------------------
DTITLE   DS    0H                       Print report title
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2A
         OPEN  (SYSPRNT2,(OUTPUT))
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAYT),DISPLAYT
         PUT   SYSPRNT2,LINE
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAYU),DISPLAYU
         PUT   SYSPRNT2,LINE
         MVC   LINE,LINE-1
NOPRNT2A DS    0H                       Put out TESTOUT2 title
         TM    FLAGSYST,X'02'
         BZ    NOTOUT2A
         OPEN  (TESTOUT2,(OUTPUT))
         MVC   OUTREC,OUTREC-1
         MVC   OUTREC(20),=C'* NEW LOADTEST PARMS'
         PUT   TESTOUT2,OUTREC
         MVC   OUTREC,OUTREC-1
         MVC   OUTREC(16),=C'*---+----1----+-'
         PUT   TESTOUT2,OUTREC
         MVC   OUTREC,OUTREC-1
NOTOUT2A DS    0H
*
* -----------------------     Follow address to Parmlib TEST values
*
         L     R2,16               Point to CVT
         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)
         L     R6,X'4C'(,R2)       Point to TPVT (Parmlib Vect Tbl)
         L     R2,X'28'(,R6)       Point to TPT control block of TEST
* ------
* ------    GET 'TEST' PARMLIB ADDRESSES AND VALUES FOR REPORTING
* ------
         ST    R2,TPTADDR          Store away TPT address
         CLC   =C'TPT',0(R2)       Is TPT eyecatcher in proper place?
         BNE   NOTTPT              No. We aren't looking at TPT.
*                                  Get all TPT fields........
         LH    R3,4(,R2)           Get TPT size
         STH   R3,TPTSIZE
         MVC   TPTVERS(1),6(R2)    TPT version number
         L     R3,12(,R2)
         ST    R3,TCTADDR          TCT address
         L     R3,16(,R2)
         ST    R3,TCTSIZE          TCT size
         LR    R4,R3               Copy size value
         S     R4,=F'4'            Subtract 4
         SRL   R4,3                Divide by 8 (size of TCT entry)
         BCTR  R4,0                Subtract 1 because of blank entry
         ST    R4,TCTENTR          Save # of TCT entries - actual
         L     R3,20(,R2)
         ST    R3,SCTADDR          SCT address
         L     R3,24(,R2)
         ST    R3,SCTSIZE          SCT size
         LR    R4,R3               Copy size value
         S     R4,=F'4'            Subtract 4
         SRL   R4,4                Divide by 16 (size of SCT entry)
         BCTR  R4,0                Subtract 1 because of blank entry
         ST    R4,SCTENTR          Save # of SCT entries - actual
         L     R3,36(,R2)
         ST    R3,OLDTPT
         B     CONTTPT             Continue with Control Block Display
NOTTPT   DS    0H                  Message if TPT not formatted right.
         TM    FLAGSYST,X'01'             Is there SYSPRNT2 DD?
         BZ    NOPRNT2B                   No. No SYSPRNT2 output
         MVC   LINE,LINE-1
         MVC   DISPLAY1,BLANKS                Error msg if not TPT.
         MVC   DISPLAY1(L'TPTBAD),TPTBAD
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2B DS    0H
         B     RETURN
CONTTPT  DS    0H                         Now display all TPT fields.
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2C
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,TPTADDR           Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,TPTSIZE           Only a halfword field
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TPT VERSION'    Display entry title
         HEX   DISPLAY1+16,1,TPTVERS           Single byte field
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,TCTADDR           Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,TCTSIZE+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'TCT ENTRIES'    Display entry title
         HEX   DISPLAY1+16,2,TCTENTR+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT ADDRESS'    Display entry title
         HEX   DISPLAY1+16,4,SCTADDR           Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT SIZE   '    Display entry title
         HEX   DISPLAY1+16,2,SCTSIZE+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'SCT ENTRIES'    Display entry title
         HEX   DISPLAY1+16,2,SCTENTR+2         Cut off 1st 2 bytes
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         CLC   OLDTPT,=F'0'
         BE    NOOLDTPT
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(11),=C'OLD TPT ADR'    Display entry title
         HEX   DISPLAY1+16,4,OLDTPT            Display address
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOOLDTPT DS    0H
DSPLYTSO DS    0H
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'TSOCMDT),TSOCMDT      Display title
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'PROGRMT),PROGRMT      Display title
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2C DS    0H
TSOINIT  DS    0H
         L     R3,TCTADDR                 Set up for TSOCMD display
         L     R4,TCTSIZE
         CLC   =C'TCT',0(R3)              Starts with TCT ?
         BE    TSOSTART                     Yes. Continue.
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2D
         MVC   DISPLAY1,BLANKS              No.  Error.
         MVC   DISPLAY1(L'TCTBAD),TCTBAD    Send appropriate message
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2D DS    0H
         B     RETURN                       Go straight out.
TSOSTART DS    0H
         TM    FLAGSYST,X'02'
         BZ    NOTOUT2B
         MVC   OUTREC,OUTREC-1
         MVC   OUTREC(7),=C'--TCT--'
         PUT   TESTOUT2,OUTREC
NOTOUT2B DS    0H
         LA    R3,4(,R3)                        Point to pgm table
TSOLOOP  DS    0H
         CLC   =C'        ',0(R3)               End of table?
         BE    DSPLYSUB
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2E
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1+8(8),0(R3)              Show TSOCMD
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2E DS    0H
         TM    FLAGSYST,X'02'
         BZ    NOTOUT2C
         MVC   OUTREC,OUTREC-1
         MVC   OUTREC(8),0(R3)
         PUT   TESTOUT2,OUTREC
NOTOUT2C DS    0H
         LA    R3,8(,R3)                        Next entry
         B     TSOLOOP
*                                         PUT IN LENGTH CHECK LATER
DSPLYSUB DS    0H
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2F
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'SUBCMDT),SUBCMDT
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1(L'COMMANT),COMMANT      Display title
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2F DS    0H
SUBINIT  DS    0H
         L     R3,SCTADDR                 Set up for SUBCMD display
         L     R4,SCTSIZE
         CLC   =C'SCT',0(R3)              Starts with SCT ?
         BE    SUBSTART                     Yes. Continue.
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2G
         MVC   DISPLAY1,BLANKS              No.  Error.
         MVC   DISPLAY1(L'SCTBAD),SCTBAD    Send appropriate message
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2G DS    0H
         B     RETURN                       Go straight out.
SUBSTART DS    0H
         LA    R3,4(,R3)                        Point to subcmd table
         TM    FLAGSYST,X'02'
         BZ    NOTOUT2D
         MVC   OUTREC,OUTREC-1
         MVC   OUTREC(7),=C'--SCT--'
         PUT   TESTOUT2,OUTREC
NOTOUT2D DS    0H
SUBLOOP  DS    0H
         CLC   =C'        ',0(R3)               End of table?
         BE    RETURN
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2H
         MVC   DISPLAY1,BLANKS                  Blank display line
         MVC   DISPLAY1+2(8),0(R3)              Show SUBCMD
         MVC   DISPLAY1+15(8),8(R3)             Show module name
         MVC   LINE,LINE-1
         MVC   LINE(L'DISPLAY1),DISPLAY1
         PUT   SYSPRNT2,LINE
NOPRNT2H DS    0H
         TM    FLAGSYST,X'02'
         BZ    NOTOUT2E
         MVC   OUTREC,OUTREC-1
         MVC   OUTREC(8),0(R3)                  Show SUBCMD
         MVC   OUTREC+8(8),8(R3)                Show module name
         PUT   TESTOUT2,OUTREC
         MVC   OUTREC,OUTREC-1
NOTOUT2E DS    0H
         LA    R3,16(,R3)                       Next entry
         B     SUBLOOP
*                                         PUT IN LENGTH CHECK LATER
TESTNEND DS    0H
RETURN   DS    0H                   Program exit.
         TM    FLAGSYST,X'01'
         BZ    NOPRNT2I
         CLOSE (SYSPRNT2)
NOPRNT2I DS    0H
         TM    FLAGSYST,X'02'
         BZ    NOTOUT2F
         CLOSE (TESTOUT2)
NOTOUT2F DS    0H
         L     R13,SAVEAREA+4       RELOAD CALLER'S SAVEAREA POINTER
         LM    R14,R12,12(R13)      RELOAD REGISTERS
         XR    R15,R15              ZERO RETURN CODE ALWAYS
         BR    R14                  RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*           D  A  T  A     A  R  E  A  S                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
SAVEAREA DS    9D
CVDAREA  DC    D'0'
         DC    CL3'   '
OLDPATT  DC    X'40202020202020202120'   Pattern for old OUTLIM value
         DC    CL3'   '
OLDFLAG  DC    X'00'
         DC    CL3'   '
BLANKS   DC    CL145' '
         DC    CL1' '
LINE     DC    CL133' '
         DC    CL1' '
OUTREC   DC    CL80' '
DISPLAY1 DC    CL64'                                              '
DISPLAYT DC    C'New TEST PARMLIB IKJTSOxx Parameter Values'
DISPLAYU DC    C'--- ---- ------- -------- --------- ------'
TSOCMDT  DC    C'---- TSOCMD PROGRAMS ----'
PROGRMT  DC    C'      Program Name       '
SUBCMDT  DC    C'----   SUBCOMMANDS   ----'
COMMANT  DC    C' Subcommand     Module   '
TPTBAD   DC    C'   TPT not pointed to    '
TCTBAD   DC    C'   TCT not pointed to    '
SCTBAD   DC    C'   SCT not pointed to    '
FLAGSYST DS    X
*              X'01'                SYSPRNT2 DD is present in JCL.
*              X'02'                TESTOUT2 DD is present in JCL.
PARMSAVE DC    F'0'
OLDTPT   DC    F'0'
TPTADDR  DC    F'0'
TPTSIZE  DC    H'0'
TPTVERS  DC    X'0'
TCTADDR  DC    F'0'
TCTSIZE  DC    F'0'
TCTENTR  DC    F'0'
SCTADDR  DC    F'0'
SCTSIZE  DC    F'0'
SCTENTR  DC    F'0'
TESTOUT2 DCB   MACRF=PM,DDNAME=TESTOUT2,DSORG=PS,RECFM=FB,LRECL=80
SYSPRNT2 DCB   DDNAME=SYSPRNT2,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FB
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
         END
